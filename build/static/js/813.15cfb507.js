"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[813],{6761:(ae,ue,k)=>{k.d(ue,{Z:()=>q});var Y=k(8160),q=function(C){return Y.createElement("svg",Object.assign({width:"24px",height:"24px",viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg"},C),Y.createElement("rect",{x:3.625,y:5.625,width:16.75,height:11.75,rx:2.875,stroke:"currentColor",strokeWidth:1.25}),Y.createElement("path",{d:"M9.438 14.25c-.508 0-.944-.111-1.309-.334a2.233 2.233 0 01-.838-.924c-.194-.395-.291-.85-.291-1.364 0-.516.1-.972.298-1.367.199-.397.48-.706.841-.927C8.504 9.111 8.934 9 9.431 9c.413 0 .778.076 1.096.228.32.15.576.363.766.64.19.273.298.593.324.96h-1.146a1.096 1.096 0 00-.331-.613c-.172-.166-.403-.248-.692-.248-.245 0-.46.066-.646.198-.186.13-.33.318-.434.563a2.294 2.294 0 00-.152.88c0 .347.05.645.152.894.101.247.244.438.427.573.186.132.403.199.653.199.176 0 .334-.034.473-.1a.951.951 0 00.355-.294c.095-.128.16-.284.195-.467h1.146c-.029.36-.135.678-.318.957a1.883 1.883 0 01-.748.648c-.316.155-.687.232-1.113.232zM14.82 14.25c-.507 0-.943-.111-1.308-.334a2.233 2.233 0 01-.838-.924c-.194-.395-.291-.85-.291-1.364 0-.516.1-.972.298-1.367.199-.397.48-.706.841-.927.365-.223.795-.334 1.292-.334.413 0 .778.076 1.096.228.32.15.575.363.765.64.19.273.299.593.325.96h-1.146a1.095 1.095 0 00-.331-.613c-.172-.166-.403-.248-.692-.248-.245 0-.46.066-.646.198-.186.13-.33.318-.434.563a2.296 2.296 0 00-.152.88c0 .347.05.645.152.894.101.247.244.438.427.573.186.132.403.199.653.199.176 0 .334-.034.473-.1a.952.952 0 00.355-.294 1.13 1.13 0 00.195-.467H17c-.029.36-.135.678-.318.957a1.882 1.882 0 01-.748.648c-.316.155-.687.232-1.113.232z",fill:"currentColor"}))}},414:(ae,ue,k)=>{var Y,q,Y,q;/**
 * {@link https://github.com/muaz-khan/RecordRTC|RecordRTC} is a WebRTC JavaScript library for audio/video as well as screen activity recording. It supports Chrome, Firefox, Opera, Android, and Microsoft Edge. Platforms: Linux, Mac and Windows. 
 * @summary Record audio, video or screen inside the browser.
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @typedef RecordRTC
 * @class
 * @example
 * var recorder = RecordRTC(mediaStream or [arrayOfMediaStream], {
 *     type: 'video', // audio or video or gif or canvas
 *     recorderType: MediaStreamRecorder || CanvasRecorder || StereoAudioRecorder || Etc
 * });
 * recorder.startRecording();
 * @see For further information:
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {MediaStream} mediaStream - Single media-stream object, array of media-streams, html-canvas-element, etc.
 * @param {object} config - {type:"video", recorderType: MediaStreamRecorder, disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, desiredSampRate: 16000, video: HTMLVideoElement, etc.}
 */function C(i,e){if(!i)throw"First parameter is required.";e=e||{type:"video"},e=new De(i,e);var t=this;function a(h){return e.disableLogs||console.log("RecordRTC version: ",t.version),h&&(e=new De(i,h)),e.disableLogs||console.log("started recording "+e.type+" stream."),f?(f.clearRecordedData(),f.record(),b("recording"),t.recordingDuration&&l(),t):(s(function(){t.recordingDuration&&l()}),t)}function s(h){h&&(e.initCallback=function(){h(),h=e.initCallback=null});var u=new je(i,e);f=new u(i,e),f.record(),b("recording"),e.disableLogs||console.log("Initialized recorderType:",f.constructor.name,"for output-type:",e.type)}function n(h){if(h=h||function(){},!f){m();return}if(t.state==="paused"){t.resumeRecording(),setTimeout(function(){n(h)},1);return}t.state!=="recording"&&!e.disableLogs&&console.warn('Recording state should be: "recording", however current state is: ',t.state),e.disableLogs||console.log("Stopped recording "+e.type+" stream."),e.type!=="gif"?f.stop(u):(f.stop(),u()),b("stopped");function u(v){if(!f){typeof h.call=="function"?h.call(t,""):h("");return}Object.keys(f).forEach(function(w){typeof f[w]!="function"&&(t[w]=f[w])});var o=f.blob;if(!o)if(v)f.blob=o=v;else throw"Recording failed.";if(o&&!e.disableLogs&&console.log(o.type,"->",Re(o.size)),h){var d;try{d=B.createObjectURL(o)}catch{}typeof h.call=="function"?h.call(t,d):h(d)}!e.autoWriteToDisk||R(function(w){var y={};y[e.type+"Blob"]=w,V.Store(y)})}}function c(){if(!f){m();return}if(t.state!=="recording"){e.disableLogs||console.warn("Unable to pause the recording. Recording state: ",t.state);return}b("paused"),f.pause(),e.disableLogs||console.log("Paused recording.")}function r(){if(!f){m();return}if(t.state!=="paused"){e.disableLogs||console.warn("Unable to resume the recording. Recording state: ",t.state);return}b("recording"),f.resume(),e.disableLogs||console.log("Resumed recording.")}function p(h){postMessage(new FileReaderSync().readAsDataURL(h))}function R(h,u){if(!h)throw"Pass a callback function over getDataURL.";var v=u?u.blob:(f||{}).blob;if(!v){e.disableLogs||console.warn("Blob encoder did not finish its job yet."),setTimeout(function(){R(h,u)},1e3);return}if(typeof Worker<"u"&&!navigator.mozGetUserMedia){var o=w(p);o.onmessage=function(y){h(y.data)},o.postMessage(v)}else{var d=new FileReader;d.readAsDataURL(v),d.onload=function(y){h(y.target.result)}}function w(y){try{var A=B.createObjectURL(new Blob([y.toString(),"this.onmessage =  function (eee) {"+y.name+"(eee.data);}"],{type:"application/javascript"})),L=new Worker(A);return B.revokeObjectURL(A),L}catch{}}}function l(h){if(h=h||0,t.state==="paused"){setTimeout(function(){l(h)},1e3);return}if(t.state!=="stopped"){if(h>=t.recordingDuration){n(t.onRecordingStopped);return}h+=1e3,setTimeout(function(){l(h)},1e3)}}function b(h){!t||(t.state=h,typeof t.onStateChanged.call=="function"?t.onStateChanged.call(t,h):t.onStateChanged(h))}var g='It seems that recorder is destroyed or "startRecording" is not invoked for '+e.type+" recorder.";function m(){e.disableLogs!==!0&&console.warn(g)}var f,S={startRecording:a,stopRecording:n,pauseRecording:c,resumeRecording:r,initRecorder:s,setRecordingDuration:function(h,u){if(typeof h>"u")throw"recordingDuration is required.";if(typeof h!="number")throw"recordingDuration must be a number.";return t.recordingDuration=h,t.onRecordingStopped=u||function(){},{onRecordingStopped:function(v){t.onRecordingStopped=v}}},clearRecordedData:function(){if(!f){m();return}f.clearRecordedData(),e.disableLogs||console.log("Cleared old recorded data.")},getBlob:function(){if(!f){m();return}return f.blob},getDataURL:R,toURL:function(){if(!f){m();return}return B.createObjectURL(f.blob)},getInternalRecorder:function(){return f},save:function(h){if(!f){m();return}xe(f.blob,h)},getFromDisk:function(h){if(!f){m();return}C.getFromDisk(e.type,h)},setAdvertisementArray:function(h){e.advertisement=[];for(var u=h.length,v=0;v<u;v++)e.advertisement.push({duration:v,image:h[v]})},blob:null,bufferSize:0,sampleRate:0,buffer:null,reset:function(){t.state==="recording"&&!e.disableLogs&&console.warn("Stop an active recorder."),f&&typeof f.clearRecordedData=="function"&&f.clearRecordedData(),f=null,b("inactive"),t.blob=null},onStateChanged:function(h){e.disableLogs||console.log("Recorder state changed:",h)},state:"inactive",getState:function(){return t.state},destroy:function(){var h=e.disableLogs;e={disableLogs:!0},t.reset(),b("destroyed"),S=t=null,ne.AudioContextConstructor&&(ne.AudioContextConstructor.close(),ne.AudioContextConstructor=null),e.disableLogs=h,e.disableLogs||console.log("RecordRTC is destroyed.")},version:"5.6.2"};if(!this)return t=S,S;for(var T in S)this[T]=S[T];return t=this,S}C.version="5.6.2",ae.exports=C,Y=[],q=function(){return C}.apply(ue,Y),q!==void 0&&(ae.exports=q),C.getFromDisk=function(i,e){if(!e)throw"callback is mandatory.";console.log("Getting recorded "+(i==="all"?"blobs":i+" blob ")+" from disk!"),V.Fetch(function(t,a){i!=="all"&&a===i+"Blob"&&e&&e(t),i==="all"&&e&&e(t,a.replace("Blob",""))})},C.writeToDisk=function(i){console.log("Writing recorded blob(s) to disk!"),i=i||{},i.audio&&i.video&&i.gif?i.audio.getDataURL(function(e){i.video.getDataURL(function(t){i.gif.getDataURL(function(a){V.Store({audioBlob:e,videoBlob:t,gifBlob:a})})})}):i.audio&&i.video?i.audio.getDataURL(function(e){i.video.getDataURL(function(t){V.Store({audioBlob:e,videoBlob:t})})}):i.audio&&i.gif?i.audio.getDataURL(function(e){i.gif.getDataURL(function(t){V.Store({audioBlob:e,gifBlob:t})})}):i.video&&i.gif?i.video.getDataURL(function(e){i.gif.getDataURL(function(t){V.Store({videoBlob:e,gifBlob:t})})}):i.audio?i.audio.getDataURL(function(e){V.Store({audioBlob:e})}):i.video?i.video.getDataURL(function(e){V.Store({videoBlob:e})}):i.gif&&i.gif.getDataURL(function(e){V.Store({gifBlob:e})})};/**
 * {@link RecordRTCConfiguration} is an inner/private helper for {@link RecordRTC}.
 * @summary It configures the 2nd parameter passed over {@link RecordRTC} and returns a valid "config" object.
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @typedef RecordRTCConfiguration
 * @class
 * @example
 * var options = RecordRTCConfiguration(mediaStream, options);
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.
 * @param {object} config - {type:"video", disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, getNativeBlob:true, etc.}
 */function De(i,e){return!e.recorderType&&!e.type&&(!!e.audio&&!!e.video?e.type="video":!!e.audio&&!e.video&&(e.type="audio")),e.recorderType&&!e.type&&(e.recorderType===pe||e.recorderType===he||typeof se<"u"&&e.recorderType===se?e.type="video":e.recorderType===me?e.type="gif":e.recorderType===le?e.type="audio":e.recorderType===j&&(M(i,"audio").length&&M(i,"video").length||!M(i,"audio").length&&M(i,"video").length?e.type="video":M(i,"audio").length&&!M(i,"video").length&&(e.type="audio"))),typeof j<"u"&&typeof MediaRecorder<"u"&&"requestData"in MediaRecorder.prototype&&(e.mimeType||(e.mimeType="video/webm"),e.type||(e.type=e.mimeType.split("/")[0]),e.bitsPerSecond),e.type||(e.mimeType&&(e.type=e.mimeType.split("/")[0]),e.type||(e.type="audio")),e}/**
 * {@link GetRecorderType} is an inner/private helper for {@link RecordRTC}.
 * @summary It returns best recorder-type available for your browser.
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @typedef GetRecorderType
 * @class
 * @example
 * var RecorderType = GetRecorderType(options);
 * var recorder = new RecorderType(options);
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.
 * @param {object} config - {type:"video", disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, etc.}
 */function je(i,e){var t;return(X||ye||fe)&&(t=le),typeof MediaRecorder<"u"&&"requestData"in MediaRecorder.prototype&&!X&&(t=j),e.type==="video"&&(X||fe)&&(t=pe,typeof se<"u"&&typeof ReadableStream<"u"&&(t=se)),e.type==="gif"&&(t=me),e.type==="canvas"&&(t=he),te()&&t!==he&&t!==me&&typeof MediaRecorder<"u"&&"requestData"in MediaRecorder.prototype&&(M(i,"video").length||M(i,"audio").length)&&(e.type==="audio"?typeof MediaRecorder.isTypeSupported=="function"&&MediaRecorder.isTypeSupported("audio/webm")&&(t=j):typeof MediaRecorder.isTypeSupported=="function"&&MediaRecorder.isTypeSupported("video/webm")&&(t=j)),i instanceof Array&&i.length&&(t=Ie),e.recorderType&&(t=e.recorderType),!e.disableLogs&&!!t&&!!t.name&&console.log("Using recorderType:",t.name||t.constructor.name),!t&&ce&&(t=j),t}/**
 * MRecordRTC runs on top of {@link RecordRTC} to bring multiple recordings in a single place, by providing simple API.
 * @summary MRecordRTC stands for "Multiple-RecordRTC".
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @typedef MRecordRTC
 * @class
 * @example
 * var recorder = new MRecordRTC();
 * recorder.addStream(MediaStream);
 * recorder.mediaType = {
 *     audio: true, // or StereoAudioRecorder or MediaStreamRecorder
 *     video: true, // or WhammyRecorder or MediaStreamRecorder or WebAssemblyRecorder or CanvasRecorder
 *     gif: true    // or GifRecorder
 * };
 * // mimeType is optional and should be set only in advance cases.
 * recorder.mimeType = {
 *     audio: 'audio/wav',
 *     video: 'video/webm',
 *     gif:   'image/gif'
 * };
 * recorder.startRecording();
 * @see For further information:
 * @see {@link https://github.com/muaz-khan/RecordRTC/tree/master/MRecordRTC|MRecordRTC Source Code}
 * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.
 * @requires {@link RecordRTC}
 */function we(i){this.addStream=function(e){e&&(i=e)},this.mediaType={audio:!0,video:!0},this.startRecording=function(){var e=this.mediaType,t,a=this.mimeType||{audio:null,video:null,gif:null};if(typeof e.audio!="function"&&te()&&!M(i,"audio").length&&(e.audio=!1),typeof e.video!="function"&&te()&&!M(i,"video").length&&(e.video=!1),typeof e.gif!="function"&&te()&&!M(i,"video").length&&(e.gif=!1),!e.audio&&!e.video&&!e.gif)throw"MediaStream must have either audio or video tracks.";if(e.audio&&(t=null,typeof e.audio=="function"&&(t=e.audio),this.audioRecorder=new C(i,{type:"audio",bufferSize:this.bufferSize,sampleRate:this.sampleRate,numberOfAudioChannels:this.numberOfAudioChannels||2,disableLogs:this.disableLogs,recorderType:t,mimeType:a.audio,timeSlice:this.timeSlice,onTimeStamp:this.onTimeStamp}),e.video||this.audioRecorder.startRecording()),e.video){t=null,typeof e.video=="function"&&(t=e.video);var s=i;if(te()&&!!e.audio&&typeof e.audio=="function"){var n=M(i,"video")[0];Ue?(s=new N,s.addTrack(n),t&&t===pe&&(t=j)):(s=new N,s.addTrack(n))}this.videoRecorder=new C(s,{type:"video",video:this.video,canvas:this.canvas,frameInterval:this.frameInterval||10,disableLogs:this.disableLogs,recorderType:t,mimeType:a.video,timeSlice:this.timeSlice,onTimeStamp:this.onTimeStamp,workerPath:this.workerPath,webAssemblyPath:this.webAssemblyPath,frameRate:this.frameRate,bitrate:this.bitrate}),e.audio||this.videoRecorder.startRecording()}if(!!e.audio&&!!e.video){var c=this,r=te()===!0;(e.audio instanceof le&&!!e.video||e.audio!==!0&&e.video!==!0&&e.audio!==e.video)&&(r=!1),r===!0?(c.audioRecorder=null,c.videoRecorder.startRecording()):c.videoRecorder.initRecorder(function(){c.audioRecorder.initRecorder(function(){c.videoRecorder.startRecording(),c.audioRecorder.startRecording()})})}e.gif&&(t=null,typeof e.gif=="function"&&(t=e.gif),this.gifRecorder=new C(i,{type:"gif",frameRate:this.frameRate||200,quality:this.quality||10,disableLogs:this.disableLogs,recorderType:t,mimeType:a.gif}),this.gifRecorder.startRecording())},this.stopRecording=function(e){e=e||function(){},this.audioRecorder&&this.audioRecorder.stopRecording(function(t){e(t,"audio")}),this.videoRecorder&&this.videoRecorder.stopRecording(function(t){e(t,"video")}),this.gifRecorder&&this.gifRecorder.stopRecording(function(t){e(t,"gif")})},this.pauseRecording=function(){this.audioRecorder&&this.audioRecorder.pauseRecording(),this.videoRecorder&&this.videoRecorder.pauseRecording(),this.gifRecorder&&this.gifRecorder.pauseRecording()},this.resumeRecording=function(){this.audioRecorder&&this.audioRecorder.resumeRecording(),this.videoRecorder&&this.videoRecorder.resumeRecording(),this.gifRecorder&&this.gifRecorder.resumeRecording()},this.getBlob=function(e){var t={};return this.audioRecorder&&(t.audio=this.audioRecorder.getBlob()),this.videoRecorder&&(t.video=this.videoRecorder.getBlob()),this.gifRecorder&&(t.gif=this.gifRecorder.getBlob()),e&&e(t),t},this.destroy=function(){this.audioRecorder&&(this.audioRecorder.destroy(),this.audioRecorder=null),this.videoRecorder&&(this.videoRecorder.destroy(),this.videoRecorder=null),this.gifRecorder&&(this.gifRecorder.destroy(),this.gifRecorder=null)},this.getDataURL=function(e){this.getBlob(function(s){s.audio&&s.video?t(s.audio,function(n){t(s.video,function(c){e({audio:n,video:c})})}):s.audio?t(s.audio,function(n){e({audio:n})}):s.video&&t(s.video,function(n){e({video:n})})});function t(s,n){if(typeof Worker<"u"){var c=a(function(R){postMessage(new FileReaderSync().readAsDataURL(R))});c.onmessage=function(p){n(p.data)},c.postMessage(s)}else{var r=new FileReader;r.readAsDataURL(s),r.onload=function(p){n(p.target.result)}}}function a(s){var n=B.createObjectURL(new Blob([s.toString(),"this.onmessage =  function (eee) {"+s.name+"(eee.data);}"],{type:"application/javascript"})),c=new Worker(n),r;if(typeof B<"u")r=B;else if(typeof webkitURL<"u")r=webkitURL;else throw"Neither URL nor webkitURL detected.";return r.revokeObjectURL(n),c}},this.writeToDisk=function(){C.writeToDisk({audio:this.audioRecorder,video:this.videoRecorder,gif:this.gifRecorder})},this.save=function(e){e=e||{audio:!0,video:!0,gif:!0},!!e.audio&&this.audioRecorder&&this.audioRecorder.save(typeof e.audio=="string"?e.audio:""),!!e.video&&this.videoRecorder&&this.videoRecorder.save(typeof e.video=="string"?e.video:""),!!e.gif&&this.gifRecorder&&this.gifRecorder.save(typeof e.gif=="string"?e.gif:"")}}we.getFromDisk=C.getFromDisk,we.writeToDisk=C.writeToDisk,typeof C<"u"&&(C.MRecordRTC=we);var We="Fake/5.0 (FakeOS) AppleWebKit/123 (KHTML, like Gecko) Fake/12.3.4567.89 Fake/123.45";(function(i){!i||typeof window<"u"||typeof k.g>"u"||(k.g.navigator={userAgent:We,getUserMedia:function(){}},k.g.console||(k.g.console={}),(typeof k.g.console.log>"u"||typeof k.g.console.error>"u")&&(k.g.console.error=k.g.console.log=k.g.console.log||function(){console.log(arguments)}),typeof document>"u"&&(i.document={documentElement:{appendChild:function(){return""}}},document.createElement=document.captureStream=document.mozCaptureStream=function(){var e={getContext:function(){return e},play:function(){},pause:function(){},drawImage:function(){},toDataURL:function(){return""},style:{}};return e},i.HTMLVideoElement=function(){}),typeof location>"u"&&(i.location={protocol:"file:",href:"",hash:""}),typeof screen>"u"&&(i.screen={width:0,height:0}),typeof B>"u"&&(i.URL={createObjectURL:function(){return""},revokeObjectURL:function(){return""}}),i.window=k.g)})(typeof k.g<"u"?k.g:null);var Z=window.requestAnimationFrame;if(typeof Z>"u"){if(typeof webkitRequestAnimationFrame<"u")Z=webkitRequestAnimationFrame;else if(typeof mozRequestAnimationFrame<"u")Z=mozRequestAnimationFrame;else if(typeof msRequestAnimationFrame<"u")Z=msRequestAnimationFrame;else if(typeof Z>"u"){var Be=0;Z=function(i,e){var t=new Date().getTime(),a=Math.max(0,16-(t-Be)),s=setTimeout(function(){i(t+a)},a);return Be=t+a,s}}}var ee=window.cancelAnimationFrame;typeof ee>"u"&&(typeof webkitCancelAnimationFrame<"u"?ee=webkitCancelAnimationFrame:typeof mozCancelAnimationFrame<"u"?ee=mozCancelAnimationFrame:typeof msCancelAnimationFrame<"u"?ee=msCancelAnimationFrame:typeof ee>"u"&&(ee=function(i){clearTimeout(i)}));var de=window.AudioContext;typeof de>"u"&&(typeof webkitAudioContext<"u"&&(de=webkitAudioContext),typeof mozAudioContext<"u"&&(de=mozAudioContext));var B=window.URL;typeof B>"u"&&typeof webkitURL<"u"&&(B=webkitURL),typeof navigator<"u"&&typeof navigator.getUserMedia>"u"&&(typeof navigator.webkitGetUserMedia<"u"&&(navigator.getUserMedia=navigator.webkitGetUserMedia),typeof navigator.mozGetUserMedia<"u"&&(navigator.getUserMedia=navigator.mozGetUserMedia));var ye=navigator.userAgent.indexOf("Edge")!==-1&&(!!navigator.msSaveBlob||!!navigator.msSaveOrOpenBlob),fe=!!window.opera||navigator.userAgent.indexOf("OPR/")!==-1,Ue=navigator.userAgent.toLowerCase().indexOf("firefox")>-1&&"netscape"in window&&/ rv:/.test(navigator.userAgent),X=!fe&&!ye&&!!navigator.webkitGetUserMedia||Ee()||navigator.userAgent.toLowerCase().indexOf("chrome/")!==-1,ce=/^((?!chrome|android).)*safari/i.test(navigator.userAgent);ce&&!X&&navigator.userAgent.indexOf("CriOS")!==-1&&(ce=!1,X=!0);var N=window.MediaStream;typeof N>"u"&&typeof webkitMediaStream<"u"&&(N=webkitMediaStream),typeof N<"u"&&typeof N.prototype.stop>"u"&&(N.prototype.stop=function(){this.getTracks().forEach(function(i){i.stop()})});function Re(i){var e=1e3,t=["Bytes","KB","MB","GB","TB"];if(i===0)return"0 Bytes";var a=parseInt(Math.floor(Math.log(i)/Math.log(e)),10);return(i/Math.pow(e,a)).toPrecision(3)+" "+t[a]}function xe(i,e){if(!i)throw"Blob object is required.";if(!i.type)try{i.type="video/webm"}catch{}var t=(i.type||"video/webm").split("/")[1];if(t.indexOf(";")!==-1&&(t=t.split(";")[0]),e&&e.indexOf(".")!==-1){var a=e.split(".");e=a[0],t=a[1]}var s=(e||Math.round(Math.random()*9999999999)+888888888)+"."+t;if(typeof navigator.msSaveOrOpenBlob<"u")return navigator.msSaveOrOpenBlob(i,s);if(typeof navigator.msSaveBlob<"u")return navigator.msSaveBlob(i,s);var n=document.createElement("a");n.href=B.createObjectURL(i),n.download=s,n.style="display:none;opacity:0;color:transparent;",(document.body||document.documentElement).appendChild(n),typeof n.click=="function"?n.click():(n.target="_blank",n.dispatchEvent(new MouseEvent("click",{view:window,bubbles:!0,cancelable:!0}))),B.revokeObjectURL(n.href)}function Ee(){return typeof window<"u"&&typeof window.process=="object"&&window.process.type==="renderer"||typeof process<"u"&&typeof process.versions=="object"&&!!process.versions.electron||typeof navigator=="object"&&typeof navigator.userAgent=="string"&&navigator.userAgent.indexOf("Electron")>=0}function M(i,e){return!i||!i.getTracks?[]:i.getTracks().filter(function(t){return t.kind===(e||"audio")})}function Fe(i,e){"srcObject"in e?e.srcObject=i:"mozSrcObject"in e?e.mozSrcObject=i:e.srcObject=i}function ze(i,e){if(typeof EBML>"u")throw new Error("Please link: https://www.webrtc-experiment.com/EBML.js");var t=new EBML.Reader,a=new EBML.Decoder,s=EBML.tools,n=new FileReader;n.onload=function(c){var r=a.decode(this.result);r.forEach(function(b){t.read(b)}),t.stop();var p=s.makeMetadataSeekable(t.metadatas,t.duration,t.cues),R=this.result.slice(t.metadataSize),l=new Blob([p,R],{type:"video/webm"});e(l)},n.readAsArrayBuffer(i)}typeof C<"u"&&(C.invokeSaveAsDialog=xe,C.getTracks=M,C.getSeekableBlob=ze,C.bytesToSize=Re,C.isElectron=Ee);/**
 * Storage is a standalone object used by {@link RecordRTC} to store reusable objects e.g. "new AudioContext".
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @example
 * Storage.AudioContext === webkitAudioContext
 * @property {webkitAudioContext} AudioContext - Keeps a reference to AudioContext object.
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 */var ne={};typeof de<"u"?ne.AudioContext=de:typeof webkitAudioContext<"u"&&(ne.AudioContext=webkitAudioContext),typeof C<"u"&&(C.Storage=ne);function te(){if(Ue||ce||ye)return!0;var i=navigator.appVersion,e=navigator.userAgent,t=""+parseFloat(navigator.appVersion),a=parseInt(navigator.appVersion,10),s,n,c;return(X||fe)&&(n=e.indexOf("Chrome"),t=e.substring(n+7)),(c=t.indexOf(";"))!==-1&&(t=t.substring(0,c)),(c=t.indexOf(" "))!==-1&&(t=t.substring(0,c)),a=parseInt(""+t,10),isNaN(a)&&(t=""+parseFloat(navigator.appVersion),a=parseInt(navigator.appVersion,10)),a>=49}/**
 * MediaStreamRecorder is an abstraction layer for {@link https://w3c.github.io/mediacapture-record/MediaRecorder.html|MediaRecorder API}. It is used by {@link RecordRTC} to record MediaStream(s) in both Chrome and Firefox.
 * @summary Runs top over {@link https://w3c.github.io/mediacapture-record/MediaRecorder.html|MediaRecorder API}.
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://github.com/muaz-khan|Muaz Khan}
 * @typedef MediaStreamRecorder
 * @class
 * @example
 * var config = {
 *     mimeType: 'video/webm', // vp8, vp9, h264, mkv, opus/vorbis
 *     audioBitsPerSecond : 256 * 8 * 1024,
 *     videoBitsPerSecond : 256 * 8 * 1024,
 *     bitsPerSecond: 256 * 8 * 1024,  // if this is provided, skip above two
 *     checkForInactiveTracks: true,
 *     timeSlice: 1000, // concatenate intervals based blobs
 *     ondataavailable: function() {} // get intervals based blobs
 * }
 * var recorder = new MediaStreamRecorder(mediaStream, config);
 * recorder.record();
 * recorder.stop(function(blob) {
 *     video.src = URL.createObjectURL(blob);
 *
 *     // or
 *     var blob = recorder.blob;
 * });
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.
 * @param {object} config - {disableLogs:true, initCallback: function, mimeType: "video/webm", timeSlice: 1000}
 * @throws Will throw an error if first argument "MediaStream" is missing. Also throws error if "MediaRecorder API" are not supported by the browser.
 */function j(i,e){var l=this;if(typeof i>"u")throw'First argument "MediaStream" is required.';if(typeof MediaRecorder>"u")throw"Your browser does not support the Media Recorder API. Please try other modules e.g. WhammyRecorder or StereoAudioRecorder.";if(e=e||{mimeType:"video/webm"},e.type==="audio"){if(M(i,"video").length&&M(i,"audio").length){var t;navigator.mozGetUserMedia?(t=new N,t.addTrack(M(i,"audio")[0])):t=new N(M(i,"audio")),i=t}(!e.mimeType||e.mimeType.toString().toLowerCase().indexOf("audio")===-1)&&(e.mimeType=X?"audio/webm":"audio/ogg"),e.mimeType&&e.mimeType.toString().toLowerCase()!=="audio/ogg"&&!!navigator.mozGetUserMedia&&(e.mimeType="audio/ogg")}var a=[];this.getArrayOfBlobs=function(){return a},this.record=function(){l.blob=null,l.clearRecordedData(),l.timestamps=[],R=[],a=[];var b=e;e.disableLogs||console.log("Passing following config over MediaRecorder API.",b),r&&(r=null),X&&!te()&&(b="video/vp8"),typeof MediaRecorder.isTypeSupported=="function"&&b.mimeType&&(MediaRecorder.isTypeSupported(b.mimeType)||(e.disableLogs||console.warn("MediaRecorder API seems unable to record mimeType:",b.mimeType),b.mimeType=e.type==="audio"?"audio/webm":"video/webm"));try{r=new MediaRecorder(i,b),e.mimeType=b.mimeType}catch{r=new MediaRecorder(i)}b.mimeType&&!MediaRecorder.isTypeSupported&&"canRecordMimeType"in r&&r.canRecordMimeType(b.mimeType)===!1&&(e.disableLogs||console.warn("MediaRecorder API seems unable to record mimeType:",b.mimeType)),r.ondataavailable=function(g){if(g.data&&R.push("ondataavailable: "+Re(g.data.size)),typeof e.timeSlice=="number"){if(g.data&&g.data.size&&(a.push(g.data),s(),typeof e.ondataavailable=="function")){var m=e.getNativeBlob?g.data:new Blob([g.data],{type:n(b)});e.ondataavailable(m)}return}if(!g.data||!g.data.size||g.data.size<100||l.blob){l.recordingCallback&&(l.recordingCallback(new Blob([],{type:n(b)})),l.recordingCallback=null);return}l.blob=e.getNativeBlob?g.data:new Blob([g.data],{type:n(b)}),l.recordingCallback&&(l.recordingCallback(l.blob),l.recordingCallback=null)},r.onstart=function(){R.push("started")},r.onpause=function(){R.push("paused")},r.onresume=function(){R.push("resumed")},r.onstop=function(){R.push("stopped")},r.onerror=function(g){!g||(g.name||(g.name="UnknownError"),R.push("error: "+g),e.disableLogs||(g.name.toString().toLowerCase().indexOf("invalidstate")!==-1?console.error("The MediaRecorder is not in a state in which the proposed operation is allowed to be executed.",g):g.name.toString().toLowerCase().indexOf("notsupported")!==-1?console.error("MIME type (",b.mimeType,") is not supported.",g):g.name.toString().toLowerCase().indexOf("security")!==-1?console.error("MediaRecorder security error",g):g.name==="OutOfMemory"?console.error("The UA has exhaused the available memory. User agents SHOULD provide as much additional information as possible in the message attribute.",g):g.name==="IllegalStreamModification"?console.error("A modification to the stream has occurred that makes it impossible to continue recording. An example would be the addition of a Track while recording is occurring. User agents SHOULD provide as much additional information as possible in the message attribute.",g):g.name==="OtherRecordingError"?console.error("Used for an fatal error other than those listed above. User agents SHOULD provide as much additional information as possible in the message attribute.",g):g.name==="GenericError"?console.error("The UA cannot provide the codec or recording option that has been requested.",g):console.error("MediaRecorder Error",g)),function(m){if(!l.manuallyStopped&&r&&r.state==="inactive"){delete e.timeslice,r.start(10*60*1e3);return}setTimeout(m,1e3)}(),r.state!=="inactive"&&r.state!=="stopped"&&r.stop())},typeof e.timeSlice=="number"?(s(),r.start(e.timeSlice)):r.start(36e5),e.initCallback&&e.initCallback()},this.timestamps=[];function s(){l.timestamps.push(new Date().getTime()),typeof e.onTimeStamp=="function"&&e.onTimeStamp(l.timestamps[l.timestamps.length-1],l.timestamps)}function n(b){return r&&r.mimeType?r.mimeType:b.mimeType||"video/webm"}this.stop=function(b){b=b||function(){},l.manuallyStopped=!0,r&&(this.recordingCallback=b,r.state==="recording"&&r.stop(),typeof e.timeSlice=="number"&&setTimeout(function(){l.blob=new Blob(a,{type:n(e)}),l.recordingCallback(l.blob)},100))},this.pause=function(){!r||r.state==="recording"&&r.pause()},this.resume=function(){!r||r.state==="paused"&&r.resume()},this.clearRecordedData=function(){r&&r.state==="recording"&&l.stop(c),c()};function c(){a=[],r=null,l.timestamps=[]}var r;this.getInternalRecorder=function(){return r};function p(){if("active"in i){if(!i.active)return!1}else if("ended"in i&&i.ended)return!1;return!0}this.blob=null,this.getState=function(){return r&&r.state||"inactive"};var R=[];this.getAllStates=function(){return R},typeof e.checkForInactiveTracks>"u"&&(e.checkForInactiveTracks=!1);var l=this;(function b(){if(!(!r||e.checkForInactiveTracks===!1)){if(p()===!1){e.disableLogs||console.log("MediaStream seems stopped."),l.stop();return}setTimeout(b,1e3)}})(),this.name="MediaStreamRecorder",this.toString=function(){return this.name}}typeof C<"u"&&(C.MediaStreamRecorder=j);/**
 * StereoAudioRecorder is a standalone class used by {@link RecordRTC} to bring "stereo" audio-recording in chrome.
 * @summary JavaScript standalone object for stereo audio recording.
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @typedef StereoAudioRecorder
 * @class
 * @example
 * var recorder = new StereoAudioRecorder(MediaStream, {
 *     sampleRate: 44100,
 *     bufferSize: 4096
 * });
 * recorder.record();
 * recorder.stop(function(blob) {
 *     video.src = URL.createObjectURL(blob);
 * });
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.
 * @param {object} config - {sampleRate: 44100, bufferSize: 4096, numberOfAudioChannels: 1, etc.}
 */function le(i,e){if(!M(i,"audio").length)throw"Your stream has no audio tracks.";e=e||{};var t=this,a=[],s=[],n=!1,c=0,r,p=2,R=e.desiredSampRate;e.leftChannel===!0&&(p=1),e.numberOfAudioChannels===1&&(p=1),(!p||p<1)&&(p=2),e.disableLogs||console.log("StereoAudioRecorder is set to record number of channels: "+p),typeof e.checkForInactiveTracks>"u"&&(e.checkForInactiveTracks=!0);function l(){if(e.checkForInactiveTracks===!1)return!0;if("active"in i){if(!i.active)return!1}else if("ended"in i&&i.ended)return!1;return!0}this.record=function(){if(l()===!1)throw"Please make sure MediaStream is active.";v(),d=u=!1,n=!0,typeof e.timeSlice<"u"&&A()};function b(L,E){function D(U,oe){var G=U.numberOfAudioChannels,O=U.leftBuffers.slice(0),_=U.rightBuffers.slice(0),H=U.sampleRate,J=U.internalInterleavedLength,P=U.desiredSampRate;G===2&&(O=Le(O,J),_=Le(_,J),P&&(O=ie(O,P,H),_=ie(_,P,H))),G===1&&(O=Le(O,J),P&&(O=ie(O,P,H))),P&&(H=P);function ie(x,K,W){var z=Math.round(x.length*(K/W)),I=[],Q=Number((x.length-1)/(z-1));I[0]=x[0];for(var re=1;re<z-1;re++){var Me=re*Q,Pe=Number(Math.floor(Me)).toFixed(),Ye=Number(Math.ceil(Me)).toFixed(),qe=Me-Pe;I[re]=Te(x[Pe],x[Ye],qe)}return I[z-1]=x[x.length-1],I}function Te(x,K,W){return x+(K-x)*W}function Le(x,K){for(var W=new Float64Array(K),z=0,I=x.length,Q=0;Q<I;Q++){var re=x[Q];W.set(re,z),z+=re.length}return W}function Ve(x,K){for(var W=x.length+K.length,z=new Float64Array(W),I=0,Q=0;Q<W;)z[Q++]=x[I],z[Q++]=K[I],I++;return z}function ve(x,K,W){for(var z=W.length,I=0;I<z;I++)x.setUint8(K+I,W.charCodeAt(I))}var ge;G===2&&(ge=Ve(O,_)),G===1&&(ge=O);var be=ge.length,Ge=44+be*2,Ae=new ArrayBuffer(Ge),F=new DataView(Ae);ve(F,0,"RIFF"),F.setUint32(4,36+be*2,!0),ve(F,8,"WAVE"),ve(F,12,"fmt "),F.setUint32(16,16,!0),F.setUint16(20,1,!0),F.setUint16(22,G,!0),F.setUint32(24,H,!0),F.setUint32(28,H*G*2,!0),F.setUint16(32,G*2,!0),F.setUint16(34,16,!0),ve(F,36,"data"),F.setUint32(40,be*2,!0);for(var He=be,Oe=44,Ke=1,ke=0;ke<He;ke++)F.setInt16(Oe,ge[ke]*(32767*Ke),!0),Oe+=2;if(oe)return oe({buffer:Ae,view:F});postMessage({buffer:Ae,view:F})}if(L.noWorker){D(L,function(U){E(U.buffer,U.view)});return}var $=g(D);$.onmessage=function(U){E(U.data.buffer,U.data.view),B.revokeObjectURL($.workerURL),$.terminate()},$.postMessage(L)}function g(L){var E=B.createObjectURL(new Blob([L.toString(),";this.onmessage =  function (eee) {"+L.name+"(eee.data);}"],{type:"application/javascript"})),D=new Worker(E);return D.workerURL=E,D}this.stop=function(L){L=L||function(){},n=!1,b({desiredSampRate:R,sampleRate:h,numberOfAudioChannels:p,internalInterleavedLength:c,leftBuffers:a,rightBuffers:p===1?[]:s,noWorker:e.noWorker},function(E,D){t.blob=new Blob([D],{type:"audio/wav"}),t.buffer=new ArrayBuffer(D.buffer.byteLength),t.view=D,t.sampleRate=R||h,t.bufferSize=T,t.length=c,d=!1,L&&L(t.blob)})},typeof C.Storage>"u"&&(C.Storage={AudioContextConstructor:null,AudioContext:window.AudioContext||window.webkitAudioContext}),(!C.Storage.AudioContextConstructor||C.Storage.AudioContextConstructor.state==="closed")&&(C.Storage.AudioContextConstructor=new C.Storage.AudioContext);var m=C.Storage.AudioContextConstructor,f=m.createMediaStreamSource(i),S=[0,256,512,1024,2048,4096,8192,16384],T=typeof e.bufferSize>"u"?4096:e.bufferSize;if(S.indexOf(T)===-1&&(e.disableLogs||console.log("Legal values for buffer-size are "+JSON.stringify(S,null,"	"))),m.createJavaScriptNode)r=m.createJavaScriptNode(T,p,p);else if(m.createScriptProcessor)r=m.createScriptProcessor(T,p,p);else throw"WebAudio API has no support on this browser.";f.connect(r),e.bufferSize||(T=r.bufferSize);var h=typeof e.sampleRate<"u"?e.sampleRate:m.sampleRate||44100;(h<22050||h>96e3)&&(e.disableLogs||console.log("sample-rate must be under range 22050 and 96000.")),e.disableLogs||e.desiredSampRate&&console.log("Desired sample-rate: "+e.desiredSampRate);var u=!1;this.pause=function(){u=!0},this.resume=function(){if(l()===!1)throw"Please make sure MediaStream is active.";if(!n){e.disableLogs||console.log("Seems recording has been restarted."),this.record();return}u=!1},this.clearRecordedData=function(){e.checkForInactiveTracks=!1,n&&this.stop(o),o()};function v(){a=[],s=[],c=0,d=!1,n=!1,u=!1,m=null,t.leftchannel=a,t.rightchannel=s,t.numberOfAudioChannels=p,t.desiredSampRate=R,t.sampleRate=h,t.recordingLength=c,y={left:[],right:[],recordingLength:0}}function o(){r&&(r.onaudioprocess=null,r.disconnect(),r=null),f&&(f.disconnect(),f=null),v()}this.name="StereoAudioRecorder",this.toString=function(){return this.name};var d=!1;function w(L){if(!u){if(l()===!1&&(e.disableLogs||console.log("MediaStream seems stopped."),r.disconnect(),n=!1),!n){f&&(f.disconnect(),f=null);return}d||(d=!0,e.onAudioProcessStarted&&e.onAudioProcessStarted(),e.initCallback&&e.initCallback());var E=L.inputBuffer.getChannelData(0),D=new Float32Array(E);if(a.push(D),p===2){var $=L.inputBuffer.getChannelData(1),U=new Float32Array($);s.push(U)}c+=T,t.recordingLength=c,typeof e.timeSlice<"u"&&(y.recordingLength+=T,y.left.push(D),p===2&&y.right.push(U))}}r.onaudioprocess=w,m.createMediaStreamDestination?r.connect(m.createMediaStreamDestination()):r.connect(m.destination),this.leftchannel=a,this.rightchannel=s,this.numberOfAudioChannels=p,this.desiredSampRate=R,this.sampleRate=h,t.recordingLength=c;var y={left:[],right:[],recordingLength:0};function A(){!n||typeof e.ondataavailable!="function"||typeof e.timeSlice>"u"||(y.left.length?(b({desiredSampRate:R,sampleRate:h,numberOfAudioChannels:p,internalInterleavedLength:y.recordingLength,leftBuffers:y.left,rightBuffers:p===1?[]:y.right},function(L,E){var D=new Blob([E],{type:"audio/wav"});e.ondataavailable(D),setTimeout(A,e.timeSlice)}),y={left:[],right:[],recordingLength:0}):setTimeout(A,e.timeSlice))}}typeof C<"u"&&(C.StereoAudioRecorder=le);/**
 * CanvasRecorder is a standalone class used by {@link RecordRTC} to bring HTML5-Canvas recording into video WebM. It uses HTML2Canvas library and runs top over {@link Whammy}.
 * @summary HTML2Canvas recording into video WebM.
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @typedef CanvasRecorder
 * @class
 * @example
 * var recorder = new CanvasRecorder(htmlElement, { disableLogs: true, useWhammyRecorder: true });
 * recorder.record();
 * recorder.stop(function(blob) {
 *     video.src = URL.createObjectURL(blob);
 * });
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {HTMLElement} htmlElement - querySelector/getElementById/getElementsByTagName[0]/etc.
 * @param {object} config - {disableLogs:true, initCallback: function}
 */function he(i,e){if(typeof html2canvas>"u")throw"Please link: https://www.webrtc-experiment.com/screenshot.js";e=e||{},e.frameInterval||(e.frameInterval=10);var t=!1;["captureStream","mozCaptureStream","webkitCaptureStream"].forEach(function(S){S in document.createElement("canvas")&&(t=!0)});var a=(!!window.webkitRTCPeerConnection||!!window.webkitGetUserMedia)&&!!window.chrome,s=50,n=navigator.userAgent.match(/Chrom(e|ium)\/([0-9]+)\./);a&&n&&n[2]&&(s=parseInt(n[2],10)),a&&s<52&&(t=!1),e.useWhammyRecorder&&(t=!1);var c,r;if(t)if(e.disableLogs||console.log("Your browser supports both MediRecorder API and canvas.captureStream!"),i instanceof HTMLCanvasElement)c=i;else if(i instanceof CanvasRenderingContext2D)c=i.canvas;else throw"Please pass either HTMLCanvasElement or CanvasRenderingContext2D.";else navigator.mozGetUserMedia&&(e.disableLogs||console.error("Canvas recording is NOT supported in Firefox."));var p;this.record=function(){if(p=!0,t&&!e.useWhammyRecorder){var S;"captureStream"in c?S=c.captureStream(25):"mozCaptureStream"in c?S=c.mozCaptureStream(25):"webkitCaptureStream"in c&&(S=c.webkitCaptureStream(25));try{var T=new N;T.addTrack(M(S,"video")[0]),S=T}catch{}if(!S)throw"captureStream API are NOT available.";r=new j(S,{mimeType:e.mimeType||"video/webm"}),r.record()}else f.frames=[],m=new Date().getTime(),g();e.initCallback&&e.initCallback()},this.getWebPImages=function(S){if(i.nodeName.toLowerCase()!=="canvas"){S();return}var T=f.frames.length;f.frames.forEach(function(h,u){var v=T-u;e.disableLogs||console.log(v+"/"+T+" frames remaining"),e.onEncodingCallback&&e.onEncodingCallback(v,T);var o=h.image.toDataURL("image/webp",1);f.frames[u].image=o}),e.disableLogs||console.log("Generating WebM"),S()},this.stop=function(S){p=!1;var T=this;if(t&&r){r.stop(S);return}this.getWebPImages(function(){f.compile(function(h){e.disableLogs||console.log("Recording finished!"),T.blob=h,T.blob.forEach&&(T.blob=new Blob([],{type:"video/webm"})),S&&S(T.blob),f.frames=[]})})};var R=!1;this.pause=function(){if(R=!0,r instanceof j){r.pause();return}},this.resume=function(){if(R=!1,r instanceof j){r.resume();return}p||this.record()},this.clearRecordedData=function(){p&&this.stop(l),l()};function l(){f.frames=[],p=!1,R=!1}this.name="CanvasRecorder",this.toString=function(){return this.name};function b(){var S=document.createElement("canvas"),T=S.getContext("2d");return S.width=i.width,S.height=i.height,T.drawImage(i,0,0),S}function g(){if(R)return m=new Date().getTime(),setTimeout(g,500);if(i.nodeName.toLowerCase()==="canvas"){var S=new Date().getTime()-m;m=new Date().getTime(),f.frames.push({image:b(),duration:S}),p&&setTimeout(g,e.frameInterval);return}html2canvas(i,{grabMouse:typeof e.showMousePointer>"u"||e.showMousePointer,onrendered:function(T){var h=new Date().getTime()-m;if(!h)return setTimeout(g,e.frameInterval);m=new Date().getTime(),f.frames.push({image:T.toDataURL("image/webp",1),duration:h}),p&&setTimeout(g,e.frameInterval)}})}var m=new Date().getTime(),f=new Ce.Video(100)}typeof C<"u"&&(C.CanvasRecorder=he);/**
 * WhammyRecorder is a standalone class used by {@link RecordRTC} to bring video recording in Chrome. It runs top over {@link Whammy}.
 * @summary Video recording feature in Chrome.
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @typedef WhammyRecorder
 * @class
 * @example
 * var recorder = new WhammyRecorder(mediaStream);
 * recorder.record();
 * recorder.stop(function(blob) {
 *     video.src = URL.createObjectURL(blob);
 * });
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.
 * @param {object} config - {disableLogs: true, initCallback: function, video: HTMLVideoElement, etc.}
 */function pe(i,e){e=e||{},e.frameInterval||(e.frameInterval=10),e.disableLogs||console.log("Using frames-interval:",e.frameInterval),this.record=function(){e.width||(e.width=320),e.height||(e.height=240),e.video||(e.video={width:e.width,height:e.height}),e.canvas||(e.canvas={width:e.width,height:e.height}),p.width=e.canvas.width||320,p.height=e.canvas.height||240,R=p.getContext("2d"),e.video&&e.video instanceof HTMLVideoElement?(l=e.video.cloneNode(),e.initCallback&&e.initCallback()):(l=document.createElement("video"),Fe(i,l),l.onloadedmetadata=function(){e.initCallback&&e.initCallback()},l.width=e.video.width,l.height=e.video.height),l.muted=!0,l.play(),b=new Date().getTime(),g=new Ce.Video,e.disableLogs||(console.log("canvas resolutions",p.width,"*",p.height),console.log("video width/height",l.width||p.width,"*",l.height||p.height)),t(e.frameInterval)};function t(m){m=typeof m<"u"?m:10;var f=new Date().getTime()-b;if(!f)return setTimeout(t,m,m);if(c)return b=new Date().getTime(),setTimeout(t,100);b=new Date().getTime(),l.paused&&l.play(),R.drawImage(l,0,0,p.width,p.height),g.frames.push({duration:f,image:p.toDataURL("image/webp")}),n||setTimeout(t,m,m)}function a(m){var f=-1,S=m.length;(function T(){if(f++,f===S){m.callback();return}setTimeout(function(){m.functionToLoop(T,f)},1)})()}function s(m,f,S,T,h){var u=document.createElement("canvas");u.width=p.width,u.height=p.height;var v=u.getContext("2d"),o=[],d=f===-1,w=f&&f>0&&f<=m.length?f:m.length,y={r:0,g:0,b:0},A=Math.sqrt(Math.pow(255,2)+Math.pow(255,2)+Math.pow(255,2)),L=S&&S>=0&&S<=1?S:0,E=T&&T>=0&&T<=1?T:0,D=!1;a({length:w,functionToLoop:function($,U){var oe,G,O,_=function(){!D&&O-oe<=O*E||(d&&(D=!0),o.push(m[U])),$()};if(D)_();else{var H=new Image;H.onload=function(){v.drawImage(H,0,0,p.width,p.height);var J=v.getImageData(0,0,p.width,p.height);oe=0,G=J.data.length,O=J.data.length/4;for(var P=0;P<G;P+=4){var ie={r:J.data[P],g:J.data[P+1],b:J.data[P+2]},Te=Math.sqrt(Math.pow(ie.r-y.r,2)+Math.pow(ie.g-y.g,2)+Math.pow(ie.b-y.b,2));Te<=A*L&&oe++}_()},H.src=m[U].image}},callback:function(){o=o.concat(m.slice(w)),o.length<=0&&o.push(m[m.length-1]),h(o)}})}var n=!1;this.stop=function(m){m=m||function(){},n=!0;var f=this;setTimeout(function(){s(g.frames,-1,null,null,function(S){g.frames=S,e.advertisement&&e.advertisement.length&&(g.frames=e.advertisement.concat(g.frames)),g.compile(function(T){f.blob=T,f.blob.forEach&&(f.blob=new Blob([],{type:"video/webm"})),m&&m(f.blob)})})},10)};var c=!1;this.pause=function(){c=!0},this.resume=function(){c=!1,n&&this.record()},this.clearRecordedData=function(){n||this.stop(r),r()};function r(){g.frames=[],n=!0,c=!1}this.name="WhammyRecorder",this.toString=function(){return this.name};var p=document.createElement("canvas"),R=p.getContext("2d"),l,b,g}typeof C<"u"&&(C.WhammyRecorder=pe);/**
 * Whammy is a standalone class used by {@link RecordRTC} to bring video recording in Chrome. It is written by {@link https://github.com/antimatter15|antimatter15}
 * @summary A real time javascript webm encoder based on a canvas hack.
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @typedef Whammy
 * @class
 * @example
 * var recorder = new Whammy().Video(15);
 * recorder.add(context || canvas || dataURL);
 * var output = recorder.compile();
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 */var Ce=function(){function i(a){this.frames=[],this.duration=a||1,this.quality=.8}i.prototype.add=function(a,s){if("canvas"in a&&(a=a.canvas),"toDataURL"in a&&(a=a.toDataURL("image/webp",this.quality)),!/^data:image\/webp;base64,/ig.test(a))throw"Input must be formatted properly as a base64 encoded DataURI of type image/webp";this.frames.push({image:a,duration:s||this.duration})};function e(a){var s=B.createObjectURL(new Blob([a.toString(),"this.onmessage =  function (eee) {"+a.name+"(eee.data);}"],{type:"application/javascript"})),n=new Worker(s);return B.revokeObjectURL(s),n}function t(a){function s(u){var v=c(u);if(!v)return[];for(var o=3e4,d=[{id:440786851,data:[{data:1,id:17030},{data:1,id:17143},{data:4,id:17138},{data:8,id:17139},{data:"webm",id:17026},{data:2,id:17031},{data:2,id:17029}]},{id:408125543,data:[{id:357149030,data:[{data:1e6,id:2807729},{data:"whammy",id:19840},{data:"whammy",id:22337},{data:T(v.duration),id:17545}]},{id:374648427,data:[{id:174,data:[{data:1,id:215},{data:1,id:29637},{data:0,id:156},{data:"und",id:2274716},{data:"V_VP8",id:134},{data:"VP8",id:2459272},{data:1,id:131},{id:224,data:[{data:v.width,id:176},{data:v.height,id:186}]}]}]}]}],w=0,y=0;w<u.length;){var A=[],L=0;do A.push(u[w]),L+=u[w].duration,w++;while(w<u.length&&L<o);var E=0,D={id:524531317,data:n(y,E,A)};d[1].data.push(D),y+=L}return l(d)}function n(u,v,o){return[{data:u,id:231}].concat(o.map(function(d){var w=g({discardable:0,frame:d.data.slice(4),invisible:0,keyframe:1,lacing:0,trackNum:1,timecode:Math.round(v)});return v+=d.duration,{data:w,id:163}}))}function c(u){if(!u[0]){postMessage({error:"Something went wrong. Maybe WebP format is not supported in the current browser."});return}for(var v=u[0].width,o=u[0].height,d=u[0].duration,w=1;w<u.length;w++)d+=u[w].duration;return{duration:d,width:v,height:o}}function r(u){for(var v=[];u>0;)v.push(u&255),u=u>>8;return new Uint8Array(v.reverse())}function p(u){return new Uint8Array(u.split("").map(function(v){return v.charCodeAt(0)}))}function R(u){var v=[],o=u.length%8?new Array(9-u.length%8).join("0"):"";u=o+u;for(var d=0;d<u.length;d+=8)v.push(parseInt(u.substr(d,8),2));return new Uint8Array(v)}function l(u){for(var v=[],o=0;o<u.length;o++){var d=u[o].data;typeof d=="object"&&(d=l(d)),typeof d=="number"&&(d=R(d.toString(2))),typeof d=="string"&&(d=p(d));var w=d.size||d.byteLength||d.length,y=Math.ceil(Math.ceil(Math.log(w)/Math.log(2))/8),A=w.toString(2),L=new Array(y*7+7+1-A.length).join("0")+A,E=new Array(y).join("0")+"1"+L;v.push(r(u[o].id)),v.push(R(E)),v.push(d)}return new Blob(v,{type:"video/webm"})}function b(u){var v="",o=u.length%8?new Array(9-u.length%8).join("0"):"";u=o+u;for(var d=0;d<u.length;d+=8)v+=String.fromCharCode(parseInt(u.substr(d,8),2));return v}function g(u){var v=0;if(u.keyframe&&(v|=128),u.invisible&&(v|=8),u.lacing&&(v|=u.lacing<<1),u.discardable&&(v|=1),u.trackNum>127)throw"TrackNumber > 127 not supported";var o=[u.trackNum|128,u.timecode>>8,u.timecode&255,v].map(function(d){return String.fromCharCode(d)}).join("")+u.frame;return o}function m(u){for(var v=u.RIFF[0].WEBP[0],o=v.indexOf("\x9D*"),d=0,w=[];d<4;d++)w[d]=v.charCodeAt(o+3+d);var y,A,L;return L=w[1]<<8|w[0],y=L&16383,L=w[3]<<8|w[2],A=L&16383,{width:y,height:A,data:v,riff:u}}function f(u,v){return parseInt(u.substr(v+4,4).split("").map(function(o){var d=o.charCodeAt(0).toString(2);return new Array(8-d.length+1).join("0")+d}).join(""),2)}function S(u){for(var v=0,o={};v<u.length;){var d=u.substr(v,4),w=f(u,v),y=u.substr(v+4+4,w);v+=4+4+w,o[d]=o[d]||[],d==="RIFF"||d==="LIST"?o[d].push(S(y)):o[d].push(y)}return o}function T(u){return[].slice.call(new Uint8Array(new Float64Array([u]).buffer),0).map(function(v){return String.fromCharCode(v)}).reverse().join("")}var h=new s(a.map(function(u){var v=m(S(atob(u.image.slice(23))));return v.duration=u.duration,v}));postMessage(h)}return i.prototype.compile=function(a){var s=e(t);s.onmessage=function(n){if(n.data.error){console.error(n.data.error);return}a(n.data)},s.postMessage(this.frames)},{Video:i}}();typeof C<"u"&&(C.Whammy=Ce);/**
 * DiskStorage is a standalone object used by {@link RecordRTC} to store recorded blobs in IndexedDB storage.
 * @summary Writing blobs into IndexedDB.
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @example
 * DiskStorage.Store({
 *     audioBlob: yourAudioBlob,
 *     videoBlob: yourVideoBlob,
 *     gifBlob  : yourGifBlob
 * });
 * DiskStorage.Fetch(function(dataURL, type) {
 *     if(type === 'audioBlob') { }
 *     if(type === 'videoBlob') { }
 *     if(type === 'gifBlob')   { }
 * });
 * // DiskStorage.dataStoreName = 'recordRTC';
 * // DiskStorage.onError = function(error) { };
 * @property {function} init - This method must be called once to initialize IndexedDB ObjectStore. Though, it is auto-used internally.
 * @property {function} Fetch - This method fetches stored blobs from IndexedDB.
 * @property {function} Store - This method stores blobs in IndexedDB.
 * @property {function} onError - This function is invoked for any known/unknown error.
 * @property {string} dataStoreName - Name of the ObjectStore created in IndexedDB storage.
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 */var V={init:function(){var i=this;if(typeof indexedDB>"u"||typeof indexedDB.open>"u"){console.error("IndexedDB API are not available in this browser.");return}var e=1,t=this.dbName||location.href.replace(/\/|:|#|%|\.|\[|\]/g,""),a,s=indexedDB.open(t,e);function n(r){r.createObjectStore(i.dataStoreName)}function c(){var r=a.transaction([i.dataStoreName],"readwrite");i.videoBlob&&r.objectStore(i.dataStoreName).put(i.videoBlob,"videoBlob"),i.gifBlob&&r.objectStore(i.dataStoreName).put(i.gifBlob,"gifBlob"),i.audioBlob&&r.objectStore(i.dataStoreName).put(i.audioBlob,"audioBlob");function p(R){r.objectStore(i.dataStoreName).get(R).onsuccess=function(l){i.callback&&i.callback(l.target.result,R)}}p("audioBlob"),p("videoBlob"),p("gifBlob")}s.onerror=i.onError,s.onsuccess=function(){if(a=s.result,a.onerror=i.onError,a.setVersion)if(a.version!==e){var r=a.setVersion(e);r.onsuccess=function(){n(a),c()}}else c();else c()},s.onupgradeneeded=function(r){n(r.target.result)}},Fetch:function(i){return this.callback=i,this.init(),this},Store:function(i){return this.audioBlob=i.audioBlob,this.videoBlob=i.videoBlob,this.gifBlob=i.gifBlob,this.init(),this},onError:function(i){console.error(JSON.stringify(i,null,"	"))},dataStoreName:"recordRTC",dbName:null};typeof C<"u"&&(C.DiskStorage=V);/**
 * GifRecorder is standalone calss used by {@link RecordRTC} to record video or canvas into animated gif.
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @typedef GifRecorder
 * @class
 * @example
 * var recorder = new GifRecorder(mediaStream || canvas || context, { onGifPreview: function, onGifRecordingStarted: function, width: 1280, height: 720, frameRate: 200, quality: 10 });
 * recorder.record();
 * recorder.stop(function(blob) {
 *     img.src = URL.createObjectURL(blob);
 * });
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {MediaStream} mediaStream - MediaStream object or HTMLCanvasElement or CanvasRenderingContext2D.
 * @param {object} config - {disableLogs:true, initCallback: function, width: 320, height: 240, frameRate: 200, quality: 10}
 */function me(i,e){if(typeof GIFEncoder>"u"){var t=document.createElement("script");t.src="https://www.webrtc-experiment.com/gif-recorder.js",(document.body||document.documentElement).appendChild(t)}e=e||{};var a=i instanceof CanvasRenderingContext2D||i instanceof HTMLCanvasElement;this.record=function(){if(typeof GIFEncoder>"u"){setTimeout(S.record,1e3);return}if(!p){setTimeout(S.record,1e3);return}a||(e.width||(e.width=R.offsetWidth||320),e.height||(e.height=R.offsetHeight||240),e.video||(e.video={width:e.width,height:e.height}),e.canvas||(e.canvas={width:e.width,height:e.height}),c.width=e.canvas.width||320,c.height=e.canvas.height||240,R.width=e.video.width||320,R.height=e.video.height||240),f=new GIFEncoder,f.setRepeat(0),f.setDelay(e.frameRate||200),f.setQuality(e.quality||10),f.start(),typeof e.onGifRecordingStarted=="function"&&e.onGifRecordingStarted(),b=Date.now();function T(h){if(S.clearedRecordedData!==!0){if(s)return setTimeout(function(){T(h)},100);l=Z(T),typeof m===void 0&&(m=h),!(h-m<90)&&(!a&&R.paused&&R.play(),a||r.drawImage(R,0,0,c.width,c.height),e.onGifPreview&&e.onGifPreview(c.toDataURL("image/png")),f.addFrame(r),m=h)}}l=Z(T),e.initCallback&&e.initCallback()},this.stop=function(T){T=T||function(){},l&&ee(l),g=Date.now(),this.blob=new Blob([new Uint8Array(f.stream().bin)],{type:"image/gif"}),T(this.blob),f.stream().bin=[]};var s=!1;this.pause=function(){s=!0},this.resume=function(){s=!1},this.clearRecordedData=function(){S.clearedRecordedData=!0,n()};function n(){f&&(f.stream().bin=[])}this.name="GifRecorder",this.toString=function(){return this.name};var c=document.createElement("canvas"),r=c.getContext("2d");a&&(i instanceof CanvasRenderingContext2D?(r=i,c=r.canvas):i instanceof HTMLCanvasElement&&(r=i.getContext("2d"),c=i));var p=!0;if(!a){var R=document.createElement("video");R.muted=!0,R.autoplay=!0,R.playsInline=!0,p=!1,R.onloadedmetadata=function(){p=!0},Fe(i,R),R.play()}var l=null,b,g,m,f,S=this}typeof C<"u"&&(C.GifRecorder=me);function Se(i,e){var t="Fake/5.0 (FakeOS) AppleWebKit/123 (KHTML, like Gecko) Fake/12.3.4567.89 Fake/123.45";(function(o){typeof C<"u"||!o||typeof window<"u"||typeof k.g>"u"||(k.g.navigator={userAgent:t,getUserMedia:function(){}},k.g.console||(k.g.console={}),(typeof k.g.console.log>"u"||typeof k.g.console.error>"u")&&(k.g.console.error=k.g.console.log=k.g.console.log||function(){console.log(arguments)}),typeof document>"u"&&(o.document={documentElement:{appendChild:function(){return""}}},document.createElement=document.captureStream=document.mozCaptureStream=function(){var d={getContext:function(){return d},play:function(){},pause:function(){},drawImage:function(){},toDataURL:function(){return""},style:{}};return d},o.HTMLVideoElement=function(){}),typeof location>"u"&&(o.location={protocol:"file:",href:"",hash:""}),typeof screen>"u"&&(o.screen={width:0,height:0}),typeof R>"u"&&(o.URL={createObjectURL:function(){return""},revokeObjectURL:function(){return""}}),o.window=k.g)})(typeof k.g<"u"?k.g:null),e=e||"multi-streams-mixer";var a=[],s=!1,n=document.createElement("canvas"),c=n.getContext("2d");n.style.opacity=0,n.style.position="absolute",n.style.zIndex=-1,n.style.top="-1000em",n.style.left="-1000em",n.className=e,(document.body||document.documentElement).appendChild(n),this.disableLogs=!1,this.frameInterval=10,this.width=360,this.height=240,this.useGainNode=!0;var r=this,p=window.AudioContext;typeof p>"u"&&(typeof webkitAudioContext<"u"&&(p=webkitAudioContext),typeof mozAudioContext<"u"&&(p=mozAudioContext));var R=window.URL;typeof R>"u"&&typeof webkitURL<"u"&&(R=webkitURL),typeof navigator<"u"&&typeof navigator.getUserMedia>"u"&&(typeof navigator.webkitGetUserMedia<"u"&&(navigator.getUserMedia=navigator.webkitGetUserMedia),typeof navigator.mozGetUserMedia<"u"&&(navigator.getUserMedia=navigator.mozGetUserMedia));var l=window.MediaStream;typeof l>"u"&&typeof webkitMediaStream<"u"&&(l=webkitMediaStream),typeof l<"u"&&typeof l.prototype.stop>"u"&&(l.prototype.stop=function(){this.getTracks().forEach(function(o){o.stop()})});var b={};typeof p<"u"?b.AudioContext=p:typeof webkitAudioContext<"u"&&(b.AudioContext=webkitAudioContext);function g(o,d){"srcObject"in d?d.srcObject=o:"mozSrcObject"in d?d.mozSrcObject=o:d.srcObject=o}this.startDrawingFrames=function(){m()};function m(){if(!s){var o=a.length,d=!1,w=[];if(a.forEach(function(A){A.stream||(A.stream={}),A.stream.fullcanvas?d=A:w.push(A)}),d)n.width=d.stream.width,n.height=d.stream.height;else if(w.length){n.width=o>1?w[0].width*2:w[0].width;var y=1;(o===3||o===4)&&(y=2),(o===5||o===6)&&(y=3),(o===7||o===8)&&(y=4),(o===9||o===10)&&(y=5),n.height=w[0].height*y}else n.width=r.width||360,n.height=r.height||240;d&&d instanceof HTMLVideoElement&&f(d),w.forEach(function(A,L){f(A,L)}),setTimeout(m,r.frameInterval)}}function f(o,d){if(!s){var w=0,y=0,A=o.width,L=o.height;d===1&&(w=o.width),d===2&&(y=o.height),d===3&&(w=o.width,y=o.height),d===4&&(y=o.height*2),d===5&&(w=o.width,y=o.height*2),d===6&&(y=o.height*3),d===7&&(w=o.width,y=o.height*3),typeof o.stream.left<"u"&&(w=o.stream.left),typeof o.stream.top<"u"&&(y=o.stream.top),typeof o.stream.width<"u"&&(A=o.stream.width),typeof o.stream.height<"u"&&(L=o.stream.height),c.drawImage(o,w,y,A,L),typeof o.stream.onRender=="function"&&o.stream.onRender(c,w,y,A,L,d)}}function S(){s=!1;var o=T(),d=h();d&&d.getTracks().filter(function(y){return y.kind==="audio"}).forEach(function(y){o.addTrack(y)});var w;return i.forEach(function(y){y.fullcanvas&&(w=!0)}),o}function T(){v();var o;"captureStream"in n?o=n.captureStream():"mozCaptureStream"in n?o=n.mozCaptureStream():r.disableLogs||console.error("Upgrade to latest Chrome or otherwise enable this flag: chrome://flags/#enable-experimental-web-platform-features");var d=new l;return o.getTracks().filter(function(w){return w.kind==="video"}).forEach(function(w){d.addTrack(w)}),n.stream=d,d}function h(){b.AudioContextConstructor||(b.AudioContextConstructor=new b.AudioContext),r.audioContext=b.AudioContextConstructor,r.audioSources=[],r.useGainNode===!0&&(r.gainNode=r.audioContext.createGain(),r.gainNode.connect(r.audioContext.destination),r.gainNode.gain.value=0);var o=0;if(i.forEach(function(d){if(!!d.getTracks().filter(function(y){return y.kind==="audio"}).length){o++;var w=r.audioContext.createMediaStreamSource(d);r.useGainNode===!0&&w.connect(r.gainNode),r.audioSources.push(w)}}),!!o)return r.audioDestination=r.audioContext.createMediaStreamDestination(),r.audioSources.forEach(function(d){d.connect(r.audioDestination)}),r.audioDestination.stream}function u(o){var d=document.createElement("video");return g(o,d),d.className=e,d.muted=!0,d.volume=0,d.width=o.width||r.width||360,d.height=o.height||r.height||240,d.play(),d}this.appendStreams=function(o){if(!o)throw"First parameter is required.";o instanceof Array||(o=[o]),o.forEach(function(d){var w=new l;if(d.getTracks().filter(function(L){return L.kind==="video"}).length){var y=u(d);y.stream=d,a.push(y),w.addTrack(d.getTracks().filter(function(L){return L.kind==="video"})[0])}if(d.getTracks().filter(function(L){return L.kind==="audio"}).length){var A=r.audioContext.createMediaStreamSource(d);r.audioDestination=r.audioContext.createMediaStreamDestination(),A.connect(r.audioDestination),w.addTrack(r.audioDestination.stream.getTracks().filter(function(L){return L.kind==="audio"})[0])}i.push(w)})},this.releaseStreams=function(){a=[],s=!0,r.gainNode&&(r.gainNode.disconnect(),r.gainNode=null),r.audioSources.length&&(r.audioSources.forEach(function(o){o.disconnect()}),r.audioSources=[]),r.audioDestination&&(r.audioDestination.disconnect(),r.audioDestination=null),r.audioContext&&r.audioContext.close(),r.audioContext=null,c.clearRect(0,0,n.width,n.height),n.stream&&(n.stream.stop(),n.stream=null)},this.resetVideoStreams=function(o){o&&!(o instanceof Array)&&(o=[o]),v(o)};function v(o){a=[],o=o||i,o.forEach(function(d){if(!!d.getTracks().filter(function(y){return y.kind==="video"}).length){var w=u(d);w.stream=d,a.push(w)}})}this.name="MultiStreamsMixer",this.toString=function(){return this.name},this.getMixedStream=S}typeof C>"u"&&(ae.exports=Se,Y=[],q=function(){return Se}.apply(ue,Y),q!==void 0&&(ae.exports=q));/**
 * MultiStreamRecorder can record multiple videos in single container.
 * @summary Multi-videos recorder.
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @typedef MultiStreamRecorder
 * @class
 * @example
 * var options = {
 *     mimeType: 'video/webm'
 * }
 * var recorder = new MultiStreamRecorder(ArrayOfMediaStreams, options);
 * recorder.record();
 * recorder.stop(function(blob) {
 *     video.src = URL.createObjectURL(blob);
 *
 *     // or
 *     var blob = recorder.blob;
 * });
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {MediaStreams} mediaStreams - Array of MediaStreams.
 * @param {object} config - {disableLogs:true, frameInterval: 1, mimeType: "video/webm"}
 */function Ie(i,e){i=i||[];var t=this,a,s;e=e||{elementClass:"multi-streams-mixer",mimeType:"video/webm",video:{width:360,height:240}},e.frameInterval||(e.frameInterval=10),e.video||(e.video={}),e.video.width||(e.video.width=360),e.video.height||(e.video.height=240),this.record=function(){a=new Se(i,e.elementClass||"multi-streams-mixer"),n().length&&(a.frameInterval=e.frameInterval||10,a.width=e.video.width||360,a.height=e.video.height||240,a.startDrawingFrames()),e.previewStream&&typeof e.previewStream=="function"&&e.previewStream(a.getMixedStream()),s=new j(a.getMixedStream(),e),s.record()};function n(){var c=[];return i.forEach(function(r){M(r,"video").forEach(function(p){c.push(p)})}),c}this.stop=function(c){!s||s.stop(function(r){t.blob=r,c(r),t.clearRecordedData()})},this.pause=function(){s&&s.pause()},this.resume=function(){s&&s.resume()},this.clearRecordedData=function(){s&&(s.clearRecordedData(),s=null),a&&(a.releaseStreams(),a=null)},this.addStreams=function(c){if(!c)throw"First parameter is required.";c instanceof Array||(c=[c]),i.concat(c),!(!s||!a)&&(a.appendStreams(c),e.previewStream&&typeof e.previewStream=="function"&&e.previewStream(a.getMixedStream()))},this.resetVideoStreams=function(c){!a||(c&&!(c instanceof Array)&&(c=[c]),a.resetVideoStreams(c))},this.getMixer=function(){return a},this.name="MultiStreamRecorder",this.toString=function(){return this.name}}typeof C<"u"&&(C.MultiStreamRecorder=Ie);/**
 * RecordRTCPromisesHandler adds promises support in {@link RecordRTC}. Try a {@link https://github.com/muaz-khan/RecordRTC/blob/master/simple-demos/RecordRTCPromisesHandler.html|demo here}
 * @summary Promises for {@link RecordRTC}
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @typedef RecordRTCPromisesHandler
 * @class
 * @example
 * var recorder = new RecordRTCPromisesHandler(mediaStream, options);
 * recorder.startRecording()
 *         .then(successCB)
 *         .catch(errorCB);
 * // Note: You can access all RecordRTC API using "recorder.recordRTC" e.g. 
 * recorder.recordRTC.onStateChanged = function(state) {};
 * recorder.recordRTC.setRecordingDuration(5000);
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {MediaStream} mediaStream - Single media-stream object, array of media-streams, html-canvas-element, etc.
 * @param {object} config - {type:"video", recorderType: MediaStreamRecorder, disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, etc.}
 * @throws Will throw an error if "new" keyword is not used to initiate "RecordRTCPromisesHandler". Also throws error if first argument "MediaStream" is missing.
 * @requires {@link RecordRTC}
 */function Ne(i,e){if(!this)throw'Use "new RecordRTCPromisesHandler()"';if(typeof i>"u")throw'First argument "MediaStream" is required.';var t=this;t.recordRTC=new C(i,e),this.startRecording=function(){return new Promise(function(a,s){try{t.recordRTC.startRecording(),a()}catch(n){s(n)}})},this.stopRecording=function(){return new Promise(function(a,s){try{t.recordRTC.stopRecording(function(n){if(t.blob=t.recordRTC.getBlob(),!t.blob||!t.blob.size){s("Empty blob.",t.blob);return}a(n)})}catch(n){s(n)}})},this.pauseRecording=function(){return new Promise(function(a,s){try{t.recordRTC.pauseRecording(),a()}catch(n){s(n)}})},this.resumeRecording=function(){return new Promise(function(a,s){try{t.recordRTC.resumeRecording(),a()}catch(n){s(n)}})},this.getDataURL=function(a){return new Promise(function(s,n){try{t.recordRTC.getDataURL(function(c){s(c)})}catch(c){n(c)}})},this.getBlob=function(){return new Promise(function(a,s){try{a(t.recordRTC.getBlob())}catch(n){s(n)}})},this.getInternalRecorder=function(){return new Promise(function(a,s){try{a(t.recordRTC.getInternalRecorder())}catch(n){s(n)}})},this.reset=function(){return new Promise(function(a,s){try{a(t.recordRTC.reset())}catch(n){s(n)}})},this.destroy=function(){return new Promise(function(a,s){try{a(t.recordRTC.destroy())}catch(n){s(n)}})},this.getState=function(){return new Promise(function(a,s){try{a(t.recordRTC.getState())}catch(n){s(n)}})},this.blob=null,this.version="5.6.2"}typeof C<"u"&&(C.RecordRTCPromisesHandler=Ne);/**
 * WebAssemblyRecorder lets you create webm videos in JavaScript via WebAssembly. The library consumes raw RGBA32 buffers (4 bytes per pixel) and turns them into a webm video with the given framerate and quality. This makes it compatible out-of-the-box with ImageData from a CANVAS. With realtime mode you can also use webm-wasm for streaming webm videos.
 * @summary Video recording feature in Chrome, Firefox and maybe Edge.
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @typedef WebAssemblyRecorder
 * @class
 * @example
 * var recorder = new WebAssemblyRecorder(mediaStream);
 * recorder.record();
 * recorder.stop(function(blob) {
 *     video.src = URL.createObjectURL(blob);
 * });
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.
 * @param {object} config - {webAssemblyPath:'webm-wasm.wasm',workerPath: 'webm-worker.js', frameRate: 30, width: 1920, height: 1080, bitrate: 1024, realtime: true}
 */function se(i,e){(typeof ReadableStream>"u"||typeof WritableStream>"u")&&console.error("Following polyfill is strongly recommended: https://unpkg.com/@mattiasbuelens/web-streams-polyfill/dist/polyfill.min.js"),e=e||{},e.width=e.width||640,e.height=e.height||480,e.frameRate=e.frameRate||30,e.bitrate=e.bitrate||1200,e.realtime=e.realtime||!0;function t(l,b){return B.createObjectURL(new Blob([l],{type:b||""}))}var a;function s(){return new ReadableStream({start:function(l){var b=document.createElement("canvas"),g=document.createElement("video"),m=!0;g.srcObject=i,g.muted=!0,g.height=e.height,g.width=e.width,g.volume=0,g.onplaying=function(){b.width=e.width,b.height=e.height;var f=b.getContext("2d"),S=1e3/e.frameRate,T=setInterval(function(){if(a&&(clearInterval(T),l.close()),m&&(m=!1,e.onVideoProcessStarted&&e.onVideoProcessStarted()),f.drawImage(g,0,0),l._controlledReadableStream.state!=="closed")try{l.enqueue(f.getImageData(0,0,e.width,e.height))}catch{}},S)},g.play()}})}var n;function c(l,b){if(!e.workerPath&&!b){a=!1,fetch("https://unpkg.com/webm-wasm@latest/dist/webm-worker.js").then(function(m){m.arrayBuffer().then(function(f){c(l,f)})});return}if(!e.workerPath&&b instanceof ArrayBuffer){var g=new Blob([b],{type:"text/javascript"});e.workerPath=B.createObjectURL(g)}e.workerPath||console.error("workerPath parameter is missing."),n=new Worker(e.workerPath),n.postMessage(e.webAssemblyPath||"https://unpkg.com/webm-wasm@latest/dist/webm-wasm.wasm"),n.addEventListener("message",function(m){m.data==="READY"?(n.postMessage({width:e.width,height:e.height,bitrate:e.bitrate||1200,timebaseDen:e.frameRate||30,realtime:e.realtime}),s().pipeTo(new WritableStream({write:function(f){if(a){console.error("Got image, but recorder is finished!");return}n.postMessage(f.data.buffer,[f.data.buffer])}}))):m.data&&(r||R.push(m.data))})}this.record=function(){R=[],r=!1,this.blob=null,c(i),typeof e.initCallback=="function"&&e.initCallback()};var r;this.pause=function(){r=!0},this.resume=function(){r=!1};function p(l){if(!n){l&&l();return}n.addEventListener("message",function(b){b.data===null&&(n.terminate(),n=null,l&&l())}),n.postMessage(null)}var R=[];this.stop=function(l){a=!0;var b=this;p(function(){b.blob=new Blob(R,{type:"video/webm"}),l(b.blob)})},this.name="WebAssemblyRecorder",this.toString=function(){return this.name},this.clearRecordedData=function(){R=[],r=!1,this.blob=null},this.blob=null}typeof C<"u"&&(C.WebAssemblyRecorder=se)}}]);

//# sourceMappingURL=813.15cfb507.js.map