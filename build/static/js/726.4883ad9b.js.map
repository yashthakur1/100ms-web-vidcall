{"version":3,"file":"static/js/726.4883ad9b.js","mappings":"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","sources":["components/AppData/useAppConfig.js","components/hooks/usePlaylist.js","plugins/whiteboard/PusherCommunicationProvider.js","plugins/whiteboard/WhiteboardEvents.js","plugins/whiteboard/useMultiplayerState.js","plugins/whiteboard/Whiteboard.jsx","plugins/whiteboard/ToggleWhiteboard.jsx","components/Playlist/PlaylistControls.jsx","components/ScreenshareTile.jsx","components/TileMenu.jsx","components/Pagination.jsx","components/VideoList.jsx","components/VideoTile.jsx","components/RoleChangeRequestModal.jsx","components/AppData/useAppLayout.js","layouts/mainGridView.jsx","common/hooks.js","layouts/mainView.jsx","components/MoreSettings/ChangeSelfRole.jsx","components/hooks/useFullscreen.js","components/MoreSettings/FullScreenItem.jsx","components/MoreSettings/ChangeNameModal.jsx","components/StatsForNerds.jsx","components/MoreSettings/MuteAllModal.jsx","components/MoreSettings/MoreSettings.jsx","components/ScreenShare.jsx","components/ScreenshareHintModal.jsx","components/PIP/pipUtils.js","components/PIP/PIPManager.js","components/PIP/SetupMediaSession.js","components/PIP/PIPComponent.jsx","components/Footer/ChatToggle.jsx","components/Playlist/PlaylistItem.jsx","components/Playlist/Playlist.jsx","plugins/NoiseSuppression.js","components/Footer/ConferencingFooter.jsx","components/Footer/StreamingFooter.jsx","components/Footer.jsx","components/conference.jsx","components/FirstPersonDisplay.jsx","components/Image.jsx","components/gridView.jsx","components/peerTileUtils.jsx","components/ScreenshareDisplay.jsx","components/Playlist/VideoPlayer.jsx","layouts/screenShareView.jsx"],"sourcesContent":["import { selectAppDataByPath, useHMSStore } from \"@100mslive/react-sdk\";\nimport { APP_DATA } from \"../../common/constants\";\n\nexport const useAppConfig = (...path) => {\n  const appConfig = useHMSStore(\n    selectAppDataByPath(APP_DATA.appConfig, ...path)\n  );\n  return appConfig;\n};\n","import {\n  HMSPlaylistType,\n  selectAudioPlaylist,\n  selectVideoPlaylist,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\n\nexport const usePlaylist = type => {\n  const isAudioPlaylist = type === HMSPlaylistType.audio;\n  const selector = isAudioPlaylist ? selectAudioPlaylist : selectVideoPlaylist;\n  const active = useHMSStore(selector.selectedItem);\n  const selection = useHMSStore(selector.selection);\n  const playlist = useHMSStore(selector.list);\n  const hmsActions = useHMSActions();\n  const playlistAction = isAudioPlaylist\n    ? hmsActions.audioPlaylist\n    : hmsActions.videoPlaylist;\n\n  return {\n    active,\n    hasNext: selection.hasNext,\n    hasPrevious: selection.hasPrevious,\n    actions: playlistAction,\n    list: playlist,\n  };\n};\n","// @ts-check\nimport Pusher from \"pusher-js\";\n\nconst stringifyWithNull = obj =>\n  JSON.stringify(obj, (k, v) => (v === undefined ? null : v));\n\n/**\n * On whiteboard close, owner sends current state to remote peers.\n * Remote peers tear down too quickly(unsubscribing listeners) and are unable to store the last state.\n *\n * Hack: To overcome this, attach 2 listeners:\n * one for storing the message(won't be unsubscribed),\n * one for calling the actual whiteboard callback(will be unsubscribed on whiteboard close)\n *\n * This way the last state is always received and stored\n */\n\n/**\n * Base class which can be extended to use various realtime communication services.\n * Methods to broadcast and subscribe to events.\n *\n * Stores the last message received/broadcasted to resend when required(when board is ready)\n */\n\nclass PusherCommunicationProvider {\n  constructor() {\n    /** @private */\n    this.initialized = false;\n    /** @private */\n    this.lastMessage = {};\n  }\n\n  init = (roomId = \"\") => {\n    if (this.initialized) {\n      return;\n    }\n\n    /** @private */\n    this.pusher = new Pusher(process.env.REACT_APP_PUSHER_APP_KEY, {\n      cluster: \"ap2\",\n      authEndpoint: process.env.REACT_APP_PUSHER_AUTHENDPOINT,\n    });\n\n    // Pusher.default.logToConsole = true;\n\n    /** @private */\n    this.channel = this.pusher.subscribe(`private-${roomId}`);\n\n    /**\n     * When events(peer-join) are sent too early before subscribing to a channel,\n     * resend last event after subscription has succeeded.\n     */\n    this.channel.bind(\"pusher:subscription_succeeded\", this.resendLastEvents);\n\n    console.log(\"Whiteboard initialized communication through Pusher\");\n    this.initialized = true;\n  };\n\n  /**\n   * @param {string} eventName\n   * @param {any} message\n   */\n  storeEvent = (eventName, message) => {\n    this.lastMessage[eventName] = { eventName, ...message };\n  };\n\n  /**\n   * @param {string} eventName\n   * @returns {any}\n   */\n  getStoredEvent = eventName => {\n    return this.lastMessage[eventName];\n  };\n\n  /**\n   * @param {string} eventName\n   * @param {Object} arg\n   */\n  broadcastEvent = (eventName, arg = {}) => {\n    this.storeEvent(eventName, arg);\n\n    this.channel.trigger(\n      `client-${eventName}`,\n      stringifyWithNull({ eventName, ...arg })\n    );\n  };\n\n  /**\n   *\n   * @param {string} eventName\n   * @param {Function} cb\n   */\n  subscribe = (eventName, cb) => {\n    this.channel.bind(`client-${eventName}`, message =>\n      this.storeEvent(eventName, message)\n    );\n    this.channel.bind(`client-${eventName}`, cb);\n    return () => {\n      this.channel.unbind(`client-${eventName}`, cb);\n    };\n  };\n\n  /** @private */\n  resendLastEvents = () => {\n    for (const eventName in this.lastMessage) {\n      if (this.lastMessage[eventName]) {\n        this.channel.trigger(\n          `client-${eventName}`,\n          this.lastMessage[eventName]\n        );\n      }\n    }\n  };\n}\n\n/**\n * @type {PusherCommunicationProvider}\n */\nexport const provider = new PusherCommunicationProvider();\n","export const WhiteboardEvents = {\n  // To broadcast new changes made in whiteboard\n  STATE_CHANGE: \"state-change\",\n  // To broadcast the current whole state of the board by the owner\n  CURRENT_STATE: \"current-state\",\n  // For newly joined peers to request current state from owner\n  REQUEST_STATE: \"request-state\",\n};\n","// @ts-check\nimport { useState, useEffect, useRef, useCallback } from \"react\";\nimport { useHMSStore, selectDidIJoinWithin } from \"@100mslive/react-sdk\";\nimport { provider as room } from \"./PusherCommunicationProvider\";\nimport { useWhiteboardMetadata } from \"./useWhiteboardMetadata\";\nimport { WhiteboardEvents as Events } from \"./WhiteboardEvents\";\n\nconst useWhiteboardState = () => {\n  const { amIWhiteboardOwner } = useWhiteboardMetadata();\n  const shouldRequestState = useHMSStore(selectDidIJoinWithin(850));\n\n  return { shouldRequestState, amIWhiteboardOwner };\n};\n\n/**\n * Ref: https://github.com/tldraw/tldraw/blob/main/apps/www/hooks/useMultiplayerState.ts\n */\nexport function useMultiplayerState(roomId) {\n  const [app, setApp] = useState(null);\n  const [isReady, setIsReady] = useState(false);\n  const { amIWhiteboardOwner, shouldRequestState } = useWhiteboardState();\n\n  /**\n   * Stores current state(shapes, bindings, [assets]) of the whiteboard\n   */\n  const rLiveShapes = useRef(new Map());\n  const rLiveBindings = useRef(new Map());\n\n  const getCurrentState = useCallback(() => {\n    return {\n      shapes: rLiveShapes.current\n        ? Object.fromEntries(rLiveShapes.current)\n        : {},\n      bindings: rLiveBindings.current\n        ? Object.fromEntries(rLiveBindings.current)\n        : {},\n    };\n  }, []);\n\n  const sendCurrentState = useCallback(() => {\n    if (amIWhiteboardOwner && isReady) {\n      room.broadcastEvent(Events.CURRENT_STATE, getCurrentState());\n    }\n  }, [amIWhiteboardOwner, isReady, getCurrentState]);\n\n  const updateLocalState = useCallback(({ shapes, bindings, merge = true }) => {\n    if (!(shapes && bindings)) return;\n\n    if (merge) {\n      const lShapes = rLiveShapes.current;\n      const lBindings = rLiveBindings.current;\n\n      if (!(lShapes && lBindings)) return;\n      Object.entries(shapes).forEach(([id, shape]) => {\n        if (!shape) {\n          lShapes.delete(id);\n        } else {\n          lShapes.set(shape.id, shape);\n        }\n      });\n\n      Object.entries(bindings).forEach(([id, binding]) => {\n        if (!binding) {\n          lBindings.delete(id);\n        } else {\n          lBindings.set(binding.id, binding);\n        }\n      });\n    } else {\n      rLiveShapes.current = new Map(Object.entries(shapes));\n      rLiveBindings.current = new Map(Object.entries(bindings));\n    }\n  }, []);\n\n  const applyStateToBoard = useCallback(\n    state => {\n      app === null || app === void 0\n        ? void 0\n        : app.replacePageContent(\n            state.shapes,\n            state.bindings,\n            {} // Object.fromEntries(lAssets.entries())\n          );\n    },\n    [app]\n  );\n\n  const handleChanges = useCallback(\n    state => {\n      if (!state) {\n        return;\n      }\n\n      const { shapes, bindings, eventName } = state;\n      updateLocalState({\n        shapes,\n        bindings,\n        merge: eventName === Events.STATE_CHANGE,\n      });\n      applyStateToBoard(getCurrentState());\n    },\n    [applyStateToBoard, getCurrentState, updateLocalState]\n  );\n\n  const setupInitialState = useCallback(() => {\n    if (!isReady) {\n      return;\n    }\n\n    if (amIWhiteboardOwner) {\n      // On board open, update the document with initial/stored content\n      handleChanges(room.getStoredEvent(Events.CURRENT_STATE));\n      // Send current state to other peers in the room currently\n      sendCurrentState();\n    } else if (shouldRequestState) {\n      /**\n       * Newly joined peers request the owner for current state\n       * and update their boards when they receive it\n       */\n      room.broadcastEvent(Events.REQUEST_STATE);\n    }\n  }, [\n    isReady,\n    amIWhiteboardOwner,\n    shouldRequestState,\n    handleChanges,\n    sendCurrentState,\n  ]);\n\n  // Callbacks --------------\n  // Put the state into the window, for debugging.\n  const onMount = useCallback(\n    app => {\n      app.loadRoom(roomId);\n      app.pause(); // Turn off the app's own undo / redo stack\n      // window.app = app;\n      setApp(app);\n    },\n    [roomId]\n  );\n\n  // Update the live shapes when the app's shapes change.\n  const onChangePage = useCallback(\n    (_app, shapes, bindings, _assets) => {\n      updateLocalState({ shapes, bindings });\n      room.broadcastEvent(Events.STATE_CHANGE, { shapes, bindings });\n\n      /**\n       * Tldraw thinks that the next update passed to replacePageContent after onChangePage is the own update triggered by onChangePage\n       * and the replacePageContent doesn't have any effect if it is a valid update from remote.\n       *\n       * To overcome this replacePageContent locally onChangePage(not costly - returns from first line).\n       *\n       * Refer: https://github.com/tldraw/tldraw/blob/main/packages/tldraw/src/state/TldrawApp.ts#L684\n       */\n      applyStateToBoard(getCurrentState());\n    },\n    [updateLocalState, applyStateToBoard, getCurrentState]\n  );\n\n  // Handle presence updates when the user's pointer / selection changes\n  // const onChangePresence = useCallback((app, user) => {\n  //   updateMyPresence({ id: app.room?.userId, user });\n  // }, [][updateMyPresence]);\n\n  // Subscriptions and initial setup\n  useEffect(() => {\n    if (!app) return;\n    const unsubs = [];\n\n    let stillAlive = true;\n\n    // Setup the document's storage and subscriptions\n    function setupDocument() {\n      // Subscribe to changes\n      if (stillAlive) {\n        unsubs.push(room.subscribe(Events.STATE_CHANGE, handleChanges));\n        unsubs.push(room.subscribe(Events.CURRENT_STATE, handleChanges));\n\n        // On request state(peer join), send whole current state to update the new peer's whiteboard\n        unsubs.push(room.subscribe(Events.REQUEST_STATE, sendCurrentState));\n\n        setIsReady(true);\n      }\n    }\n\n    room.init();\n    setupDocument();\n    setupInitialState();\n\n    return () => {\n      stillAlive = false;\n      unsubs.forEach(unsub => unsub());\n    };\n  }, [app, setupInitialState, sendCurrentState, handleChanges]);\n\n  useEffect(() => {\n    // Store last state on closing whitboard so that when the board is reopened the state could be fetched and reapplied\n    const handleUnmount = () => {\n      if (isReady && !shouldRequestState) {\n        console.log(\"Whiteboard unmount storing\", getCurrentState());\n        room.storeEvent(Events.CURRENT_STATE, getCurrentState());\n      }\n    };\n\n    return handleUnmount;\n  }, [isReady, shouldRequestState, getCurrentState]);\n\n  return { onMount, onChangePage };\n}\n","import React from \"react\";\nimport { Tldraw } from \"@tldraw/tldraw\";\nimport { useMultiplayerState } from \"./useMultiplayerState\";\n\nexport const Whiteboard = React.memo(({ roomId }) => {\n  const events = useMultiplayerState(roomId);\n\n  return (\n    <Tldraw\n      autofocus\n      disableAssets={true}\n      showSponsorLink={false}\n      showPages={false}\n      showMenu={false}\n      {...events}\n    />\n  );\n});\n","import { Tooltip } from \"@100mslive/react-ui\";\nimport { PencilDrawIcon } from \"@100mslive/react-icons\";\nimport IconButton from \"../../IconButton\";\nimport { useWhiteboardMetadata } from \"./useWhiteboardMetadata\";\n\nexport const ToggleWhiteboard = () => {\n  const {\n    whiteboardEnabled,\n    whiteboardOwner: whiteboardActive,\n    amIWhiteboardOwner,\n    toggleWhiteboard,\n  } = useWhiteboardMetadata();\n\n  if (!whiteboardEnabled) {\n    return null;\n  }\n\n  return (\n    <Tooltip\n      title={`${\n        whiteboardActive\n          ? amIWhiteboardOwner\n            ? `Stop whiteboard`\n            : `Can't stop whiteboard`\n          : \"Start whiteboard\"\n      }`}\n      key=\"whiteboard\"\n    >\n      <IconButton\n        onClick={toggleWhiteboard}\n        active={!whiteboardActive}\n        disabled={whiteboardActive && !amIWhiteboardOwner}\n        data-testid=\"white_board_btn\"\n      >\n        <PencilDrawIcon />\n      </IconButton>\n    </Tooltip>\n  );\n};\n","import React from \"react\";\nimport {\n  HMSPlaylistType,\n  selectAudioPlaylist,\n  selectAudioTrackVolume,\n  selectPeerSharingVideoPlaylist,\n  selectVideoPlaylist,\n  selectVideoPlaylistAudioTrackByPeerID,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport {\n  PrevIcon,\n  NextIcon,\n  PlayIcon,\n  PauseIcon,\n  PlaylistIcon,\n  SpeakerIcon,\n} from \"@100mslive/react-icons\";\nimport { Box, Flex, IconButton, Slider, Text } from \"@100mslive/react-ui\";\nimport { usePlaylist } from \"../hooks/usePlaylist\";\n\nconst Progress = ({ type, duration }) => {\n  const selectPlaylist =\n    type === HMSPlaylistType.audio ? selectAudioPlaylist : selectVideoPlaylist;\n  const progress = useHMSStore(selectPlaylist.progress);\n  const hmsActions = useHMSActions();\n  const playlistAction =\n    type === HMSPlaylistType.audio\n      ? hmsActions.audioPlaylist\n      : hmsActions.videoPlaylist;\n\n  if (!duration) {\n    return null;\n  }\n\n  return (\n    <Slider\n      step={1}\n      value={[progress]}\n      onValueChange={e => {\n        playlistAction.seekTo(e[0] * 0.01 * duration);\n      }}\n    />\n  );\n};\n\nexport const PlaylistActive = ({ type, onToggle }) => {\n  const isAudioPlaylist = type === HMSPlaylistType.audio;\n  const selector = isAudioPlaylist ? selectAudioPlaylist : selectVideoPlaylist;\n  const active = useHMSStore(selector.selectedItem);\n  if (!active) {\n    return null;\n  }\n  return (\n    <Box css={{ mt: \"$8\" }}>\n      <Flex justify=\"between\" css={{ w: \"100%\" }}>\n        <Box>\n          <Text variant=\"md\">{active.name}</Text>\n          {active.metadata?.description && (\n            <Text variant=\"xs\">{active.metadata?.description}</Text>\n          )}\n        </Box>\n        <IconButton\n          onClick={onToggle}\n          css={{ alignSelf: \"center\" }}\n          data-testid=\"playlist_collapse_btn\"\n        >\n          <PlaylistIcon />\n        </IconButton>\n      </Flex>\n    </Box>\n  );\n};\n\nconst Controls = ({ type, css = {} }) => {\n  const { active, hasNext, hasPrevious, actions } = usePlaylist(type);\n  if (!active) {\n    return null;\n  }\n  return (\n    <Flex justify=\"center\" css={css}>\n      <IconButton\n        disabled={!hasPrevious}\n        onClick={() => {\n          actions.playPrevious();\n        }}\n        data-testid=\"playlist_prev_btn\"\n      >\n        <PrevIcon />\n      </IconButton>\n      <IconButton\n        onClick={() => {\n          active.playing ? actions.pause() : actions.play(active.id);\n        }}\n        data-testid=\"playlist_play_pause_btn\"\n      >\n        {active.playing ? (\n          <PauseIcon width={32} height={32} />\n        ) : (\n          <PlayIcon width={32} height={32} />\n        )}\n      </IconButton>\n      <IconButton\n        disabled={!hasNext}\n        onClick={() => {\n          actions.playNext();\n        }}\n        data-testid=\"playlist_next_btn\"\n      >\n        <NextIcon />\n      </IconButton>\n    </Flex>\n  );\n};\n\nconst VolumeControl = () => {\n  const hmsActions = useHMSActions();\n  const volume = useHMSStore(selectVideoPlaylist.volume);\n  const active = useHMSStore(selectVideoPlaylist.selectedItem);\n  const peerSharingPlaylist = useHMSStore(selectPeerSharingVideoPlaylist);\n  const audioTrack = useHMSStore(\n    selectVideoPlaylistAudioTrackByPeerID(peerSharingPlaylist?.id)\n  );\n  const audioTrackVolume = useHMSStore(selectAudioTrackVolume(audioTrack?.id));\n  const sliderVolume = active ? volume : audioTrackVolume;\n\n  return (\n    <Flex align=\"center\" css={{ color: \"$white\" }}>\n      <SpeakerIcon />\n      <Slider\n        css={{ mx: \"$4\", w: \"$20\" }}\n        min={0}\n        max={100}\n        step={1}\n        value={[Math.floor(sliderVolume)]}\n        onValueChange={e => {\n          const value = e[0];\n          if (active) {\n            hmsActions.videoPlaylist.setVolume(value);\n          } else if (audioTrack) {\n            hmsActions.setVolume(value, audioTrack.id);\n          }\n        }}\n        thumbStyles={{ w: \"$6\", h: \"$6\" }}\n      />\n    </Flex>\n  );\n};\n\nexport const AudioPlaylistControls = ({ onToggle }) => {\n  const { active } = usePlaylist(HMSPlaylistType.audio);\n  if (!active) {\n    return null;\n  }\n  return (\n    <Box\n      css={{\n        p: \"$8\",\n        borderTop: \"1px solid $borderLight\",\n        bg: \"$menuBg\",\n      }}\n    >\n      <Controls type={HMSPlaylistType.audio} />\n      <Progress type={HMSPlaylistType.audio} duration={active.duration} />\n      <PlaylistActive type={HMSPlaylistType.audio} onToggle={onToggle} />\n    </Box>\n  );\n};\n\nexport const VideoPlaylistControls = ({ children }) => {\n  const { active } = usePlaylist(HMSPlaylistType.video);\n\n  return (\n    <Box\n      css={{\n        p: \"$8\",\n        mt: \"-$24\",\n        w: \"100%\",\n        zIndex: 1,\n        \"@lg\": {\n          mt: 0,\n          p: \"$6\",\n        },\n      }}\n    >\n      {active && (\n        <Progress type={HMSPlaylistType.video} duration={active.duration} />\n      )}\n      <Flex align=\"center\" justify=\"between\">\n        <VolumeControl />\n        {active && <Controls css={{ flex: \"1 1 0\" }} />}\n        {children}\n      </Flex>\n    </Box>\n  );\n};\n","import React, { useRef, useState } from \"react\";\nimport screenfull from \"screenfull\";\nimport { useFullscreen } from \"react-use\";\nimport {\n  useHMSStore,\n  selectPeerByID,\n  selectScreenShareAudioByPeerID,\n  selectScreenShareByPeerID,\n} from \"@100mslive/react-sdk\";\nimport { ExpandIcon, ShrinkIcon } from \"@100mslive/react-icons\";\nimport { StyledVideoTile, Video, VideoTileStats } from \"@100mslive/react-ui\";\nimport TileMenu from \"./TileMenu\";\nimport { useIsHeadless, useUISettings } from \"./AppData/useUISettings\";\nimport { getVideoTileLabel } from \"./peerTileUtils\";\nimport { UI_SETTINGS } from \"../common/constants\";\n\nconst labelStyles = {\n  position: \"unset\",\n  width: \"100%\",\n  textAlign: \"center\",\n  transform: \"none\",\n  mt: \"$2\",\n  flexShrink: 0,\n};\n\nconst Tile = ({ peerId, width = \"100%\", height = \"100%\" }) => {\n  const track = useHMSStore(selectScreenShareByPeerID(peerId));\n  const peer = useHMSStore(selectPeerByID(peerId));\n  const isAudioOnly = useUISettings(UI_SETTINGS.isAudioOnly);\n  const isHeadless = useIsHeadless();\n  const [isMouseHovered, setIsMouseHovered] = useState(false);\n  const showStatsOnTiles = useUISettings(UI_SETTINGS.showStatsOnTiles);\n  const label = getVideoTileLabel({\n    peerName: peer.name,\n    isLocal: false,\n    track,\n  });\n  const fullscreenRef = useRef(null);\n  // fullscreen is for desired state\n  const [fullscreen, setFullscreen] = useState(false);\n  // isFullscreen is for true state\n  const isFullscreen = useFullscreen(fullscreenRef, fullscreen, {\n    onClose: () => setFullscreen(false),\n  });\n  const isFullScreenSupported = screenfull.isEnabled;\n  const audioTrack = useHMSStore(selectScreenShareAudioByPeerID(peer?.id));\n  return (\n    <StyledVideoTile.Root\n      css={{ width, height }}\n      data-testid=\"screenshare_tile\"\n    >\n      {peer ? (\n        <StyledVideoTile.Container\n          transparentBg\n          ref={fullscreenRef}\n          css={{ flexDirection: \"column\" }}\n          onMouseEnter={() => setIsMouseHovered(true)}\n          onMouseLeave={() => {\n            setIsMouseHovered(false);\n          }}\n        >\n          {showStatsOnTiles ? (\n            <VideoTileStats\n              audioTrackID={audioTrack?.id}\n              videoTrackID={track?.id}\n            />\n          ) : null}\n          {isFullScreenSupported && !isHeadless ? (\n            <StyledVideoTile.FullScreenButton\n              onClick={() => setFullscreen(!fullscreen)}\n            >\n              {isFullscreen ? <ShrinkIcon /> : <ExpandIcon />}\n            </StyledVideoTile.FullScreenButton>\n          ) : null}\n          {track ? (\n            <Video\n              screenShare={true}\n              mirror={peer.isLocal && track?.source === \"regular\"}\n              attach={!isAudioOnly}\n              trackId={track.id}\n            />\n          ) : null}\n          <StyledVideoTile.Info css={labelStyles}>{label}</StyledVideoTile.Info>\n          {isMouseHovered && !isHeadless && !peer?.isLocal ? (\n            <TileMenu\n              isScreenshare\n              peerID={peer?.id}\n              audioTrackID={audioTrack?.id}\n              videoTrackID={track?.id}\n            />\n          ) : null}\n        </StyledVideoTile.Container>\n      ) : null}\n    </StyledVideoTile.Root>\n  );\n};\n\nconst ScreenshareTile = React.memo(Tile);\n\nexport default ScreenshareTile;\n","import React from \"react\";\nimport {\n  HorizontalMenuIcon,\n  MicOffIcon,\n  VideoOffIcon,\n  VideoOnIcon,\n  MicOnIcon,\n  SpeakerIcon,\n  RemoveUserIcon,\n} from \"@100mslive/react-icons\";\nimport {\n  useHMSStore,\n  selectPermissions,\n  useHMSActions,\n  useRemoteAVToggle,\n} from \"@100mslive/react-sdk\";\nimport { Flex, StyledMenuTile, Slider } from \"@100mslive/react-ui\";\n\n/**\n * Taking peerID as peer won't necesarilly have tracks\n */\nconst TileMenu = ({\n  audioTrackID,\n  videoTrackID,\n  peerID,\n  isScreenshare = false,\n}) => {\n  const actions = useHMSActions();\n  let { removeOthers } = useHMSStore(selectPermissions);\n  removeOthers = removeOthers && !isScreenshare;\n  const {\n    isAudioEnabled,\n    isVideoEnabled,\n    setVolume,\n    toggleAudio,\n    toggleVideo,\n    volume,\n  } = useRemoteAVToggle(audioTrackID, videoTrackID);\n  if (!(removeOthers || toggleAudio || toggleVideo || setVolume)) {\n    return null;\n  }\n  return (\n    <StyledMenuTile.Root>\n      <StyledMenuTile.Trigger data-testid=\"participant_menu_btn\">\n        <HorizontalMenuIcon />\n      </StyledMenuTile.Trigger>\n      <StyledMenuTile.Content side=\"top\" align=\"end\" sideOffset={8}>\n        {toggleVideo ? (\n          <StyledMenuTile.ItemButton\n            onClick={toggleVideo}\n            data-testid={\n              isVideoEnabled\n                ? \"mute_video_participant_btn\"\n                : \"unmute_video_participant_btn\"\n            }\n          >\n            {isVideoEnabled ? <VideoOnIcon /> : <VideoOffIcon />}\n            <span>{`${isVideoEnabled ? \"Mute\" : \"Request Unmute\"}`}</span>\n          </StyledMenuTile.ItemButton>\n        ) : null}\n        {toggleAudio ? (\n          <StyledMenuTile.ItemButton\n            onClick={toggleAudio}\n            data-testid={\n              isVideoEnabled\n                ? \"mute_audio_participant_btn\"\n                : \"unmute_audio_participant_btn\"\n            }\n          >\n            {isAudioEnabled ? <MicOnIcon /> : <MicOffIcon />}\n            <span>{`${isAudioEnabled ? \"Mute\" : \"Request Unmute\"}`}</span>\n          </StyledMenuTile.ItemButton>\n        ) : null}\n        {audioTrackID ? (\n          <StyledMenuTile.VolumeItem data-testid=\"participant_volume_slider\">\n            <Flex align=\"center\" gap={1}>\n              <SpeakerIcon /> <span>Volume ({volume})</span>\n            </Flex>\n            <Slider\n              css={{ my: \"0.5rem\" }}\n              step={5}\n              value={[volume]}\n              onValueChange={e => setVolume(e[0])}\n            />\n          </StyledMenuTile.VolumeItem>\n        ) : null}\n\n        {removeOthers ? (\n          <StyledMenuTile.RemoveItem\n            onClick={async () => {\n              try {\n                await actions.removePeer(peerID, \"\");\n              } catch (error) {\n                // TODO: Toast here\n              }\n            }}\n            data-testid=\"remove_participant_btn\"\n          >\n            <RemoveUserIcon />\n            <span>Remove Participant</span>\n          </StyledMenuTile.RemoveItem>\n        ) : null}\n      </StyledMenuTile.Content>\n    </StyledMenuTile.Root>\n  );\n};\n\nexport default TileMenu;\n","import React from \"react\";\nimport { StyledPagination } from \"@100mslive/react-ui\";\nimport { ChevronLeftIcon, ChevronRightIcon } from \"@100mslive/react-icons\";\n\nexport const Pagination = ({ page, setPage, numPages }) => {\n  const disableLeft = page === 0;\n  const disableRight = page === numPages - 1;\n  const nextPage = () => {\n    setPage(Math.min(page + 1, numPages - 1));\n  };\n  const prevPage = () => {\n    setPage(Math.max(page - 1, 0));\n  };\n  return (\n    <StyledPagination.Root>\n      <StyledPagination.Chevron disabled={disableLeft} onClick={prevPage}>\n        <ChevronLeftIcon\n          width={16}\n          height={16}\n          style={{ cursor: disableLeft ? \"not-allowed\" : \"pointer\" }}\n        />\n      </StyledPagination.Chevron>\n      <StyledPagination.Dots>\n        {[...Array(numPages)].map((_, i) => (\n          <StyledPagination.Dot\n            key={i}\n            active={page === i}\n            onClick={() => setPage(i)}\n          />\n        ))}\n      </StyledPagination.Dots>\n      <StyledPagination.Chevron disabled={disableRight} onClick={nextPage}>\n        <ChevronRightIcon\n          width={16}\n          height={16}\n          style={{ cursor: disableRight ? \"not-allowed\" : \"pointer\" }}\n        />\n      </StyledPagination.Chevron>\n    </StyledPagination.Root>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Freeze } from \"react-freeze\";\nimport { StyledVideoList, getLeft, useTheme } from \"@100mslive/react-ui\";\nimport { useVideoList } from \"@100mslive/react-sdk\";\nimport VideoTile from \"./VideoTile\";\nimport ScreenshareTile from \"./ScreenshareTile\";\nimport { FeatureFlags } from \"../services/FeatureFlags\";\nimport { Pagination } from \"./Pagination\";\nimport { useAppConfig } from \"./AppData/useAppConfig\";\nimport { useIsHeadless } from \"./AppData/useUISettings\";\n\nconst List = ({\n  maxTileCount,\n  peers,\n  maxColCount,\n  maxRowCount,\n  includeScreenShareForPeer,\n}) => {\n  const { aspectRatio } = useTheme();\n  const tileOffset = useAppConfig(\"headlessConfig\", \"tileOffset\");\n  const isHeadless = useIsHeadless();\n  const { ref, pagesWithTiles } = useVideoList({\n    peers,\n    maxTileCount,\n    maxColCount,\n    maxRowCount,\n    includeScreenShareForPeer,\n    aspectRatio,\n    offsetY: getOffset({ isHeadless, tileOffset }),\n  });\n  const [page, setPage] = useState(0);\n  useEffect(() => {\n    // currentPageIndex should not exceed pages length\n    if (page >= pagesWithTiles.length) {\n      setPage(0);\n    }\n  }, [pagesWithTiles.length, page]);\n  const useFreeze = FeatureFlags.freezeVideoList();\n  return (\n    <StyledVideoList.Root ref={ref}>\n      <StyledVideoList.Container>\n        {pagesWithTiles && pagesWithTiles.length > 0\n          ? pagesWithTiles.map((tiles, pageNo) => (\n              <Freeze freeze={useFreeze && page !== pageNo} key={pageNo}>\n                <StyledVideoList.View\n                  css={{\n                    left: getLeft(pageNo, page),\n                    transition: \"left 0.3s ease-in-out\",\n                  }}\n                >\n                  {tiles.map((tile, i) =>\n                    tile.track?.source === \"screen\" ? (\n                      <ScreenshareTile\n                        key={tile.track.id}\n                        width={tile.width}\n                        height={tile.height}\n                        peerId={tile.peer.id}\n                      />\n                    ) : (\n                      <VideoTile\n                        key={tile.track?.id || tile.peer.id}\n                        width={tile.width}\n                        height={tile.height}\n                        peerId={tile.peer?.id}\n                        trackId={tile.track?.id}\n                      />\n                    )\n                  )}\n                </StyledVideoList.View>\n              </Freeze>\n            ))\n          : null}\n      </StyledVideoList.Container>\n      {pagesWithTiles.length > 1 ? (\n        <Pagination\n          page={page}\n          setPage={setPage}\n          numPages={pagesWithTiles.length}\n        />\n      ) : null}\n    </StyledVideoList.Root>\n  );\n};\n\nconst VideoList = React.memo(List);\n\nconst getOffset = ({ offset, isHeadless }) => {\n  if (!isHeadless || typeof offset !== \"number\") {\n    return 32;\n  }\n  return offset;\n};\n\nexport default VideoList;\n","import React, { Fragment, useCallback, useState } from \"react\";\nimport {\n  Avatar,\n  StyledVideoTile,\n  Video,\n  VideoTileStats,\n  useBorderAudioLevel,\n} from \"@100mslive/react-ui\";\nimport {\n  useHMSStore,\n  selectIsPeerAudioEnabled,\n  selectPeerMetadata,\n  selectLocalPeerID,\n  selectPeerNameByID,\n  selectAudioTrackByPeerID,\n  selectTrackByID,\n  selectVideoTrackByPeerID,\n} from \"@100mslive/react-sdk\";\nimport {\n  MicOffIcon,\n  HandRaiseFilledIcon,\n  BrbIcon,\n} from \"@100mslive/react-icons\";\nimport TileMenu from \"./TileMenu\";\nimport TileConnection from \"./Connection/TileConnection\";\nimport { useIsHeadless, useUISettings } from \"./AppData/useUISettings\";\nimport { useAppConfig } from \"./AppData/useAppConfig\";\nimport { getVideoTileLabel } from \"./peerTileUtils\";\nimport { UI_SETTINGS } from \"../common/constants\";\n\nconst Tile = ({ peerId, trackId, width, height }) => {\n  const trackSelector = trackId\n    ? selectTrackByID(trackId)\n    : selectVideoTrackByPeerID(peerId);\n  const track = useHMSStore(trackSelector);\n  const peerName = useHMSStore(selectPeerNameByID(peerId));\n  const audioTrack = useHMSStore(selectAudioTrackByPeerID(peerId));\n  const localPeerID = useHMSStore(selectLocalPeerID);\n  const isAudioOnly = useUISettings(UI_SETTINGS.isAudioOnly);\n  const showStatsOnTiles = useUISettings(UI_SETTINGS.showStatsOnTiles);\n  const isHeadless = useIsHeadless();\n  const isAudioMuted = !useHMSStore(selectIsPeerAudioEnabled(peerId));\n  const isVideoMuted = !track?.enabled;\n  const [isMouseHovered, setIsMouseHovered] = useState(false);\n  const borderAudioRef = useBorderAudioLevel(audioTrack?.id);\n  const isVideoDegraded = track?.degraded;\n  const isLocal = localPeerID === peerId;\n  const label = getVideoTileLabel({\n    peerName,\n    track,\n    isLocal,\n  });\n  const onHoverHandler = useCallback(event => {\n    setIsMouseHovered(event.type === \"mouseenter\");\n  }, []);\n  const headlessConfig = useAppConfig(\"headlessConfig\");\n  const hideLabel = isHeadless && headlessConfig?.hideTileName;\n  return (\n    <StyledVideoTile.Root\n      css={{\n        width,\n        height,\n        padding: getPadding({ isHeadless, offset: headlessConfig?.tileOffset }),\n      }}\n      data-testid={`participant_tile_${peerName}`}\n    >\n      {peerName !== undefined ? (\n        <StyledVideoTile.Container\n          onMouseEnter={onHoverHandler}\n          onMouseLeave={onHoverHandler}\n          ref={\n            isHeadless && headlessConfig?.hideAudioLevel\n              ? undefined\n              : borderAudioRef\n          }\n        >\n          <TileConnection\n            hideLabel={hideLabel}\n            name={label}\n            isTile\n            peerId={peerId}\n            width={width}\n          />\n          {showStatsOnTiles ? (\n            <VideoTileStats\n              audioTrackID={audioTrack?.id}\n              videoTrackID={track?.id}\n              peerID={peerId}\n            />\n          ) : null}\n\n          {track ? (\n            <Video\n              trackId={track?.id}\n              attach={isLocal ? undefined : !isAudioOnly}\n              mirror={peerId === localPeerID && track?.source === \"regular\"}\n              degraded={isVideoDegraded}\n              data-testid=\"participant_video_tile\"\n            />\n          ) : null}\n          <StyledVideoTile.AvatarContainer>\n            {isVideoMuted || isVideoDegraded || isAudioOnly ? (\n              <Avatar\n                name={peerName || \"\"}\n                data-testid=\"participant_avatar_icon\"\n              />\n            ) : null}\n          </StyledVideoTile.AvatarContainer>\n\n          {showAudioMuted({\n            hideTileAudioMute: headlessConfig?.hideTileAudioMute,\n            isHeadless,\n            isAudioMuted,\n          }) ? (\n            <StyledVideoTile.AudioIndicator data-testid=\"participant_audio_mute_icon\">\n              <MicOffIcon />\n            </StyledVideoTile.AudioIndicator>\n          ) : null}\n          {isMouseHovered && !isHeadless && !isLocal ? (\n            <TileMenu\n              peerID={peerId}\n              audioTrackID={audioTrack?.id}\n              videoTrackID={track?.id}\n            />\n          ) : null}\n          <PeerMetadata peerId={peerId} />\n        </StyledVideoTile.Container>\n      ) : null}\n    </StyledVideoTile.Root>\n  );\n};\n\nconst metaStyles = { top: \"$4\", left: \"$4\" };\n\nconst PeerMetadata = ({ peerId }) => {\n  const metaData = useHMSStore(selectPeerMetadata(peerId));\n  const isHandRaised = metaData?.isHandRaised || false;\n  const isBRB = metaData?.isBRBOn || false;\n\n  return (\n    <Fragment>\n      {isHandRaised ? (\n        <StyledVideoTile.AttributeBox\n          css={metaStyles}\n          data-testid=\"raiseHand_icon_onTile\"\n        >\n          <HandRaiseFilledIcon width={40} height={40} />\n        </StyledVideoTile.AttributeBox>\n      ) : null}\n      {isBRB ? (\n        <StyledVideoTile.AttributeBox\n          css={metaStyles}\n          data-testid=\"brb_icon_onTile\"\n        >\n          <BrbIcon width={40} height={40} />\n        </StyledVideoTile.AttributeBox>\n      ) : null}\n    </Fragment>\n  );\n};\n\nconst VideoTile = React.memo(Tile);\n\nconst showAudioMuted = ({ hideTileAudioMute, isHeadless, isAudioMuted }) => {\n  if (!isHeadless) {\n    return isAudioMuted;\n  }\n  return isAudioMuted && !hideTileAudioMute;\n};\n\nconst getPadding = ({ isHeadless, offset }) => {\n  if (!isHeadless || typeof offset !== \"number\") {\n    return undefined;\n  }\n  return offset === 0 ? 0 : undefined;\n};\n\nexport default VideoTile;\n","import React from \"react\";\nimport {\n  useHMSActions,\n  selectRoleChangeRequest,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { RequestDialog } from \"../primitives/DialogContent\";\nimport { useIsHeadless } from \"./AppData/useUISettings\";\n\nexport const RoleChangeRequestModal = () => {\n  const hmsActions = useHMSActions();\n  const isHeadless = useIsHeadless();\n  const roleChangeRequest = useHMSStore(selectRoleChangeRequest);\n\n  if (!roleChangeRequest?.role || isHeadless) {\n    return null;\n  }\n\n  return (\n    <RequestDialog\n      title=\"Role Change Request\"\n      onOpenChange={value =>\n        !value && hmsActions.rejectChangeRole(roleChangeRequest)\n      }\n      body={`${roleChangeRequest?.requestedBy?.name} has requested you to change your role to ${roleChangeRequest?.role?.name}.`}\n      onAction={() => {\n        hmsActions.acceptChangeRole(roleChangeRequest);\n      }}\n      actionText=\"Accept\"\n    />\n  );\n};\n","import { selectAppDataByPath, useHMSStore } from \"@100mslive/react-sdk\";\nimport { APP_DATA } from \"../../common/constants\";\n\nexport const useAppLayout = path => {\n  return useHMSStore(selectAppDataByPath(APP_DATA.appLayout, path));\n};\n","import React from \"react\";\nimport {\n  selectLocalPeerID,\n  selectPeers,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { Flex } from \"@100mslive/react-ui\";\nimport { GridCenterView, GridSidePaneView } from \"../components/gridView\";\nimport { useUISettings } from \"../components/AppData/useUISettings\";\nimport { useAppLayout } from \"../components/AppData/useAppLayout\";\nimport { UI_SETTINGS } from \"../common/constants\";\n\nexport const MainGridView = () => {\n  const centerRoles = useAppLayout(\"center\") || [];\n  const sidepaneRoles = useAppLayout(\"sidepane\") || [];\n  const maxTileCount = useUISettings(UI_SETTINGS.maxTileCount);\n  const peers = useHMSStore(selectPeers);\n  const localPeerId = useHMSStore(selectLocalPeerID);\n  const centerPeers = peers.filter(peer => centerRoles.includes(peer.roleName));\n  const sidebarPeers = peers.filter(peer =>\n    sidepaneRoles.includes(peer.roleName)\n  );\n\n  /**\n   * If there are peers from many publishing roles, then it's possible to divide\n   * them into two parts, those who show in center and those who show in sidepane.\n   * In case there is only one person in the room, then too sidepane will be shown\n   * and center would be taken up by a banner image.\n   * There is an issue currently, where the banner is still shown if there are\n   * multiple viewers in the room but no publisher. Depending on the use case\n   * this can be useful(for webinar) or look odd(for showing you're the only one).\n   * Note that both center peers and sidebar peers have only publishing peers in them.\n   */\n  let showSidePane = centerPeers.length > 0 && sidebarPeers.length > 0;\n  if (centerPeers.length === 0) {\n    // we'll show the sidepane for banner in this case too if 1). it's only me\n    // in the room. or 2). noone is publishing in the room\n    const itsOnlyMeInTheRoom =\n      peers.length === 1 && peers[0].id === localPeerId;\n    const nooneIsPublishing = sidebarPeers.length === 0;\n    showSidePane = itsOnlyMeInTheRoom || nooneIsPublishing;\n  }\n\n  return (\n    <Flex\n      css={{\n        size: \"100%\",\n      }}\n      direction={{\n        \"@initial\": \"row\",\n        \"@md\": \"column\",\n      }}\n    >\n      <GridCenterView\n        peers={showSidePane ? centerPeers : peers}\n        maxTileCount={maxTileCount}\n        allowRemoteMute={false}\n        hideSidePane={!showSidePane}\n        totalPeers={peers.length}\n      />\n      {showSidePane && (\n        <GridSidePaneView peers={sidebarPeers} totalPeers={peers.length} />\n      )}\n    </Flex>\n  );\n};\n","// @ts-check\nimport {\n  useHMSActions,\n  useHMSStore,\n  selectPeerCount,\n  selectPermissions,\n  selectIsConnectedToRoom,\n  useRecordingStreaming,\n} from \"@100mslive/react-sdk\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { useIsHeadless } from \"../components/AppData/useUISettings\";\n\n/**\n * Hook to execute a callback when alone in room(after a certain 5d of time)\n * @param {number} thresholdMs The threshold(in ms) after which the callback is executed,\n * starting from the instant when alone in room.\n * note: the cb is not called when another peer joins during this period.\n */\nexport const useWhenAloneInRoom = (thresholdMs = 5 * 60 * 1000) => {\n  const isConnected = useHMSStore(selectIsConnectedToRoom);\n  const peerCount = useHMSStore(selectPeerCount);\n  const [aloneForLong, setAloneForLong] = useState(false);\n  const cbTimeout = useRef(null);\n  const alone = isConnected && peerCount === 1;\n\n  useEffect(() => {\n    if (alone && !cbTimeout.current) {\n      // @ts-ignore\n      cbTimeout.current = setTimeout(() => {\n        setAloneForLong(true);\n      }, thresholdMs);\n    } else if (!alone) {\n      cbTimeout.current && clearTimeout(cbTimeout.current);\n      cbTimeout.current = null;\n      setAloneForLong(false);\n    }\n  }, [alone, thresholdMs]);\n\n  useEffect(() => {\n    return () => {\n      if (cbTimeout.current) {\n        clearTimeout(cbTimeout.current);\n      }\n    };\n  }, []);\n\n  return { alone, aloneForLong };\n};\n\nexport const useBeamAutoLeave = () => {\n  const hmsActions = useHMSActions();\n  const permissions = useHMSStore(selectPermissions);\n  const isHeadless = useIsHeadless();\n  const { aloneForLong } = useWhenAloneInRoom();\n  const { isHLSRunning, isRTMPRunning, isBrowserRecordingOn } =\n    useRecordingStreaming();\n\n  /**\n   * End room after 5 minutes of being alone in the room to stop beam\n   * Note: Leave doesn't stop beam\n   */\n  useEffect(() => {\n    if (aloneForLong && isHeadless) {\n      if (permissions?.endRoom) {\n        hmsActions.endRoom(false, \"Stop Beam\");\n      } else {\n        if (isHLSRunning && permissions?.hlsStreaming) {\n          hmsActions.stopHLSStreaming();\n        }\n        if (\n          (isRTMPRunning && permissions?.rtmpStreaming) ||\n          (isBrowserRecordingOn && permissions?.browserRecording)\n        ) {\n          hmsActions.stopRTMPAndRecording();\n        }\n      }\n    }\n  }, [\n    aloneForLong,\n    isHeadless,\n    hmsActions,\n    permissions,\n    isHLSRunning,\n    isRTMPRunning,\n    isBrowserRecordingOn,\n  ]);\n};\n","import React, { useEffect, Suspense } from \"react\";\nimport {\n  useHMSStore,\n  useHMSActions,\n  selectPeerSharingAudio,\n  selectPeerScreenSharing,\n  selectPeerSharingVideoPlaylist,\n  selectLocalPeerRoleName,\n  selectIsConnectedToRoom,\n} from \"@100mslive/react-sdk\";\nimport { Flex } from \"@100mslive/react-ui\";\nimport { MainGridView } from \"./mainGridView\";\nimport SidePane from \"./SidePane\";\nimport FullPageProgress from \"../components/FullPageProgress\";\nimport ScreenShareView from \"./screenShareView\";\nimport {\n  useHLSViewerRole,\n  useIsHeadless,\n  useUISettings,\n} from \"../components/AppData/useUISettings\";\nimport { useBeamAutoLeave } from \"../common/hooks\";\nimport { useWhiteboardMetadata } from \"../plugins/whiteboard\";\nimport { useAppConfig } from \"../components/AppData/useAppConfig\";\nimport { UI_MODE_ACTIVE_SPEAKER } from \"../common/constants\";\n\nconst WhiteboardView = React.lazy(() => import(\"./WhiteboardView\"));\nconst HLSView = React.lazy(() => import(\"./HLSView\"));\nconst ActiveSpeakerView = React.lazy(() => import(\"./ActiveSpeakerView\"));\n\nexport const ConferenceMainView = () => {\n  const localPeerRole = useHMSStore(selectLocalPeerRoleName);\n  const peerSharing = useHMSStore(selectPeerScreenSharing);\n  const peerSharingAudio = useHMSStore(selectPeerSharingAudio);\n  const peerSharingPlaylist = useHMSStore(selectPeerSharingVideoPlaylist);\n  const { whiteboardOwner: whiteboardShared } = useWhiteboardMetadata();\n  const isConnected = useHMSStore(selectIsConnectedToRoom);\n  useBeamAutoLeave();\n  const hmsActions = useHMSActions();\n  const isHeadless = useIsHeadless();\n  const headlessUIMode = useAppConfig(\"headlessConfig\", \"uiMode\");\n  const { uiViewMode, isAudioOnly } = useUISettings();\n  const hlsViewerRole = useHLSViewerRole();\n  useEffect(() => {\n    if (!isConnected) {\n      return;\n    }\n    const audioPlaylist = JSON.parse(\n      process.env.REACT_APP_AUDIO_PLAYLIST || \"[]\"\n    );\n    const videoPlaylist = JSON.parse(\n      process.env.REACT_APP_VIDEO_PLAYLIST || \"[]\"\n    );\n    if (videoPlaylist.length > 0) {\n      hmsActions.videoPlaylist.setList(videoPlaylist);\n    }\n    if (audioPlaylist.length > 0) {\n      hmsActions.audioPlaylist.setList(audioPlaylist);\n    }\n  }, [isConnected, hmsActions]);\n\n  if (!localPeerRole) {\n    // we don't know the role yet to decide how to render UI\n    return null;\n  }\n\n  let ViewComponent;\n  if (localPeerRole === hlsViewerRole) {\n    ViewComponent = HLSView;\n  } else if (whiteboardShared) {\n    ViewComponent = WhiteboardView;\n  } else if (\n    ((peerSharing && peerSharing.id !== peerSharingAudio?.id) ||\n      peerSharingPlaylist) &&\n    !isAudioOnly\n  ) {\n    ViewComponent = ScreenShareView;\n  } else if (\n    uiViewMode === UI_MODE_ACTIVE_SPEAKER ||\n    (isHeadless && headlessUIMode === UI_MODE_ACTIVE_SPEAKER)\n  ) {\n    ViewComponent = ActiveSpeakerView;\n  } else {\n    ViewComponent = MainGridView;\n  }\n\n  return (\n    <Suspense fallback={<FullPageProgress />}>\n      <Flex css={{ size: \"100%\", position: \"relative\" }}>\n        <ViewComponent />\n        <SidePane />\n      </Flex>\n    </Suspense>\n  );\n};\n","import React, { useMemo } from \"react\";\nimport { useMedia } from \"react-use\";\nimport {\n  selectAvailableRoleNames,\n  selectLocalPeerID,\n  selectLocalPeerRoleName,\n  selectPermissions,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { ArrowRightIcon, CheckIcon, PersonIcon } from \"@100mslive/react-icons\";\nimport { Dropdown, Text, config } from \"@100mslive/react-ui\";\nimport { ToastManager } from \"../Toast/ToastManager\";\nimport { useAppLayout } from \"../AppData/useAppLayout\";\nimport { arrayIntersection } from \"../../common/utils\";\n\nexport const ChangeSelfRole = ({ onClick }) => {\n  const roles = useHMSStore(selectAvailableRoleNames);\n  const permissions = useHMSStore(selectPermissions);\n  const localPeerId = useHMSStore(selectLocalPeerID);\n  const localPeerRole = useHMSStore(selectLocalPeerRoleName);\n  const hmsActions = useHMSActions();\n  const hideTriggerItem = useMedia(config.media.sm);\n  const selfRoleChangeTo = useAppLayout(\"selfRoleChangeTo\");\n  const availableSelfChangeRoles = useMemo(\n    () => arrayIntersection(selfRoleChangeTo, roles),\n    [roles, selfRoleChangeTo]\n  );\n\n  if (!permissions.changeRole) {\n    return null;\n  }\n  return hideTriggerItem ? (\n    <Dropdown.Item onClick={onClick}>\n      <PersonIcon />\n      <Text variant=\"sm\" css={{ mx: \"$4\" }}>\n        Change My Role\n      </Text>\n    </Dropdown.Item>\n  ) : (\n    <Dropdown.Root>\n      <Dropdown.TriggerItem data-testid=\"change_my_role_btn\">\n        <PersonIcon />\n        <Text variant=\"sm\" css={{ flex: \"1 1 0\", mx: \"$4\" }}>\n          Change My Role\n        </Text>\n        <ArrowRightIcon />\n      </Dropdown.TriggerItem>\n      <Dropdown.Content\n        sideOffset={2}\n        alignOffset={-5}\n        css={{ maxHeight: \"$64\" }}\n      >\n        {availableSelfChangeRoles.map((role, i) => (\n          <Dropdown.Item\n            key={role}\n            css={{ justifyContent: \"space-between\" }}\n            onClick={async () => {\n              try {\n                await hmsActions.changeRole(localPeerId, role, true);\n              } catch (error) {\n                ToastManager.addToast({ title: error.message });\n              }\n            }}\n            data-testid={\"change_to_role_\" + role}\n          >\n            <Text variant=\"sm\">{role}</Text>\n            {localPeerRole === role && <CheckIcon width={16} height={16} />}\n          </Dropdown.Item>\n        ))}\n      </Dropdown.Content>\n    </Dropdown.Root>\n  );\n};\n","import { useCallback, useEffect, useState } from \"react\";\nimport screenfull from \"screenfull\";\nimport { ToastManager } from \"../Toast/ToastManager\";\n\nexport const useFullscreen = () => {\n  const [isFullScreenEnabled, setIsFullScreenEnabled] = useState(\n    screenfull.isFullscreen\n  );\n\n  const toggle = useCallback(async () => {\n    if (!screenfull.isEnabled) {\n      ToastManager.addToast({ title: \"Fullscreen feature not supported\" });\n      return;\n    }\n    try {\n      if (isFullScreenEnabled) {\n        await screenfull.exit();\n      } else {\n        await screenfull.request();\n      }\n    } catch (err) {\n      ToastManager.addToast({ title: err.message });\n    }\n  }, [isFullScreenEnabled]);\n\n  useEffect(() => {\n    const onChange = () => {\n      setIsFullScreenEnabled(screenfull.isFullscreen);\n    };\n    if (screenfull.isEnabled) {\n      screenfull.on(\"change\", onChange);\n    }\n    return () => {\n      if (screenfull.isEnabled) {\n        screenfull.off(\"change\", onChange);\n      }\n    };\n  }, []);\n\n  return {\n    allowed: screenfull.isEnabled,\n    isFullscreen: isFullScreenEnabled,\n    toggleFullscreen: toggle,\n  };\n};\n","import React from \"react\";\nimport { ExpandIcon } from \"@100mslive/react-icons\";\nimport { Dropdown, Text } from \"@100mslive/react-ui\";\nimport { useFullscreen } from \"../hooks/useFullscreen\";\n\nexport const FullScreenItem = () => {\n  const { allowed, isFullscreen, toggleFullscreen } = useFullscreen();\n\n  if (!allowed) {\n    return null;\n  }\n\n  return (\n    <Dropdown.Item\n      onClick={() => {\n        toggleFullscreen();\n      }}\n      data-testid=\"full_screen_btn\"\n    >\n      <ExpandIcon />\n      <Text variant=\"sm\" css={{ ml: \"$4\" }}>\n        {isFullscreen ? \"Exit \" : \"Go \"}Fullscreen\n      </Text>\n    </Dropdown.Item>\n  );\n};\n","import React, { useState } from \"react\";\nimport {\n  useHMSActions,\n  useHMSStore,\n  selectLocalPeerName,\n} from \"@100mslive/react-sdk\";\nimport { Dialog, Flex, Button, Text, Box, Input } from \"@100mslive/react-ui\";\nimport {\n  useUserPreferences,\n  UserPreferencesKeys,\n} from \"../hooks/useUserPreferences\";\nimport { ToastManager } from \"../Toast/ToastManager\";\n\nexport const ChangeNameModal = ({ onOpenChange }) => {\n  const [previewPreference, setPreviewPreference] = useUserPreferences(\n    UserPreferencesKeys.PREVIEW\n  );\n  const hmsActions = useHMSActions();\n  const localPeerName = useHMSStore(selectLocalPeerName);\n  const [currentName, setCurrentName] = useState(localPeerName);\n\n  const changeName = async () => {\n    const name = currentName.trim();\n    if (!name || name === localPeerName) {\n      return;\n    }\n    try {\n      await hmsActions.changeName(name);\n      setPreviewPreference({\n        ...(previewPreference || {}),\n        name,\n      });\n    } catch (error) {\n      console.error(\"failed to update name\", error);\n      ToastManager.addToast({ title: error.message });\n    } finally {\n      onOpenChange(false);\n    }\n  };\n\n  return (\n    <Dialog.Root defaultOpen onOpenChange={onOpenChange}>\n      <Dialog.Portal>\n        <Dialog.Overlay />\n        <Dialog.Content css={{ width: \"min(400px,80%)\", p: \"$10\" }}>\n          <Dialog.Title css={{ p: \"0 $4\" }}>\n            <Text variant=\"h6\"> Change Name</Text>\n          </Dialog.Title>\n          <form\n            onSubmit={e => {\n              e.preventDefault();\n            }}\n          >\n            <Flex justify=\"center\" align=\"center\" css={{ my: \"$8\", w: \"100%\" }}>\n              <Input\n                css={{ width: \"100%\" }}\n                value={currentName}\n                onChange={e => {\n                  setCurrentName(e.target.value);\n                }}\n                autoComplete=\"name\"\n                required\n                data-testid=\"change_name_field\"\n              />\n            </Flex>\n\n            <Flex\n              justify=\"between\"\n              align=\"center\"\n              css={{\n                width: \"100%\",\n                gap: \"$md\",\n                mt: \"$10\",\n              }}\n            >\n              <Box css={{ w: \"50%\" }}>\n                <Dialog.Close css={{ w: \"100%\" }}>\n                  <Button\n                    variant=\"standard\"\n                    css={{ w: \"100%\" }}\n                    outlined\n                    type=\"submit\"\n                    disabled={!localPeerName}\n                  >\n                    Cancel\n                  </Button>\n                </Dialog.Close>\n              </Box>\n              <Box css={{ w: \"50%\" }}>\n                <Button\n                  variant=\"primary\"\n                  css={{ width: \"100%\" }}\n                  type=\"submit\"\n                  disabled={\n                    !currentName.trim() || currentName.trim() === localPeerName\n                  }\n                  onClick={async () => {\n                    await changeName();\n                  }}\n                  data-testid=\"popup_change_btn\"\n                >\n                  Change\n                </Button>\n              </Box>\n            </Flex>\n          </form>\n        </Dialog.Content>\n      </Dialog.Portal>\n    </Dialog.Root>\n  );\n};\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport {\n  selectHMSStats,\n  selectPeersMap,\n  selectTracksMap,\n  useHMSStatsStore,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport {\n  Dialog,\n  Text,\n  Box,\n  Flex,\n  Switch,\n  Dropdown,\n  Label,\n  HorizontalDivider,\n} from \"@100mslive/react-ui\";\nimport { DialogDropdownTrigger } from \"../primitives/DropdownTrigger\";\nimport { useSetUiSettings } from \"./AppData/useUISettings\";\nimport { useDropdownSelection } from \"./hooks/useDropdownSelection\";\nimport { UI_SETTINGS } from \"../common/constants\";\n\nexport const StatsForNerds = ({ onOpenChange }) => {\n  const tracksWithLabels = useTracksWithLabel();\n  const statsOptions = useMemo(\n    () => [\n      { id: \"local-peer\", label: \"Local Peer Stats\" },\n      ...tracksWithLabels,\n    ],\n    [tracksWithLabels]\n  );\n  const [selectedStat, setSelectedStat] = useState(\"local-peer\");\n  const [showStatsOnTiles, setShowStatsOnTiles] = useSetUiSettings(\n    UI_SETTINGS.showStatsOnTiles\n  );\n  const [open, setOpen] = useState(false);\n  const selectionBg = useDropdownSelection();\n\n  useEffect(() => {\n    if (\n      selectedStat !== \"local-peer\" &&\n      !tracksWithLabels.find(track => track.id === selectedStat)\n    ) {\n      setSelectedStat(\"local-peer\");\n    }\n  }, [tracksWithLabels, selectedStat]);\n\n  return (\n    <Dialog.Root defaultOpen onOpenChange={onOpenChange}>\n      <Dialog.Portal>\n        <Dialog.Overlay />\n        <Dialog.Content\n          css={{\n            width: \"min(500px, 95%)\",\n          }}\n        >\n          {/* Title */}\n          <Dialog.Title css={{ p: \"$4 0\" }}>\n            <Flex justify=\"between\">\n              <Flex align=\"center\" css={{ mb: \"$1\" }}>\n                <Text variant=\"h6\" inline>\n                  Stats For Nerds\n                </Text>\n              </Flex>\n              <Dialog.DefaultClose data-testid=\"stats_dialog_close_icon\" />\n            </Flex>\n          </Dialog.Title>\n          <HorizontalDivider css={{ mt: \"0.8rem\" }} />\n          {/* Switch */}\n          <Flex justify=\"start\" gap={4} css={{ m: \"$10 0\" }}>\n            <Switch\n              checked={showStatsOnTiles}\n              onCheckedChange={setShowStatsOnTiles}\n            />\n            <Text variant=\"body2\" css={{ fontWeight: \"$semiBold\" }}>\n              Show Stats on Tiles\n            </Text>\n          </Flex>\n          {/* Select */}\n          <Flex\n            direction=\"column\"\n            css={{\n              mb: \"$12\",\n              position: \"relative\",\n              minWidth: 0,\n              \"[data-radix-popper-content-wrapper]\": {\n                w: \"100%\",\n                minWidth: \"0 !important\",\n                mt: \"$4\",\n                transform: \"translateY($space$20) !important\",\n                zIndex: 11,\n              },\n            }}\n          >\n            <Label variant=\"body2\">Stats For</Label>\n            <Dropdown.Root\n              data-testid=\"dialog_select_Stats For\"\n              open={open}\n              onOpenChange={setOpen}\n            >\n              <DialogDropdownTrigger\n                title={\n                  statsOptions.find(({ id }) => id === selectedStat)?.label ||\n                  \"Select Stats\"\n                }\n                css={{ mt: \"$4\" }}\n                open={open}\n              />\n              <Dropdown.Content\n                align=\"start\"\n                sideOffset={8}\n                css={{ w: \"100%\" }}\n                portalled={false}\n              >\n                {statsOptions.map(option => (\n                  <Dropdown.Item\n                    key={option.id}\n                    onClick={() => {\n                      setSelectedStat(option.id);\n                    }}\n                    css={{\n                      bg: option.id === selectedStat ? selectionBg : undefined,\n                      c: option.id === selectedStat ? \"$white\" : \"$textPrimary\",\n                    }}\n                  >\n                    {option.label}\n                  </Dropdown.Item>\n                ))}\n              </Dropdown.Content>\n            </Dropdown.Root>\n          </Flex>\n          {/* Stats */}\n          {selectedStat === \"local-peer\" ? (\n            <LocalPeerStats />\n          ) : (\n            <TrackStats trackID={selectedStat} />\n          )}\n        </Dialog.Content>\n      </Dialog.Portal>\n    </Dialog.Root>\n  );\n};\n\nconst useTracksWithLabel = () => {\n  const tracksMap = useHMSStore(selectTracksMap);\n  const peersMap = useHMSStore(selectPeersMap);\n  const tracksWithLabels = useMemo(\n    () =>\n      Object.values(tracksMap).map(track => {\n        const peerName = peersMap[track.peerId]?.name;\n        return {\n          id: track.id,\n          label: `${peerName} ${track.source} ${track.type}`,\n        };\n      }),\n    [tracksMap, peersMap]\n  );\n  return tracksWithLabels;\n};\n\nconst LocalPeerStats = () => {\n  const stats = useHMSStatsStore(selectHMSStats.localPeerStats);\n\n  if (!stats) {\n    return null;\n  }\n\n  return (\n    <Flex css={{ flexWrap: \"wrap\", gap: \"$10\" }}>\n      <StatsRow label=\"Packets Lost\" value={stats.subscribe?.packetsLost} />\n      <StatsRow label=\"Jitter\" value={stats.subscribe?.jitter} />\n      <StatsRow\n        label=\"Publish Bitrate\"\n        value={formatBytes(stats.publish?.bitrate, \"b/s\")}\n      />\n      <StatsRow\n        label=\"Subscribe Bitrate\"\n        value={formatBytes(stats.subscribe?.bitrate, \"b/s\")}\n      />\n      <StatsRow\n        label=\"Total Bytes Sent\"\n        value={formatBytes(stats.publish?.bytesSent)}\n      />\n      <StatsRow\n        label=\"Total Bytes Received\"\n        value={formatBytes(stats.subscribe?.bytesReceived)}\n      />\n    </Flex>\n  );\n};\n\nconst TrackStats = ({ trackID }) => {\n  const stats = useHMSStatsStore(selectHMSStats.trackStatsByID(trackID));\n  if (!stats) {\n    return null;\n  }\n  const inbound = stats.type.includes(\"inbound\");\n\n  return (\n    <Flex css={{ flexWrap: \"wrap\", gap: \"$10\" }}>\n      <StatsRow label=\"Type\" value={stats.type + \" \" + stats.kind} />\n      <StatsRow label=\"Bitrate\" value={formatBytes(stats.bitrate, \"b/s\")} />\n      <StatsRow label=\"Packets Lost\" value={stats.packetsLost || \"-\"} />\n      <StatsRow label=\"Jitter\" value={stats.jitter || \"-\"} />\n      <StatsRow\n        label={inbound ? \"Bytes Received\" : \"Bytes Sent\"}\n        value={formatBytes(inbound ? stats.bytesReceived : stats.bytesSent)}\n      />\n      {stats.kind === \"video\" && (\n        <>\n          <StatsRow label=\"Framerate\" value={stats.framesPerSecond} />\n          {!inbound && (\n            <StatsRow\n              label=\"Quality Limitation Reason\"\n              value={stats.qualityLimitationReason || \"-\"}\n            />\n          )}\n        </>\n      )}\n    </Flex>\n  );\n};\n\nconst StatsRow = ({ label, value }) => (\n  <Box css={{ bg: \"$surfaceLight\", w: \"calc(50% - $6)\", p: \"$8\", r: \"$3\" }}>\n    <Text\n      variant=\"overline\"\n      css={{\n        fontWeight: \"$semiBold\",\n        color: \"$textMedEmp\",\n        textTransform: \"uppercase\",\n      }}\n    >\n      {label}{\" \"}\n    </Text>\n    <Text\n      variant=\"sub1\"\n      css={{ fontWeight: \"$semiBold\", color: \"$textHighEmp\" }}\n    >\n      {value}\n    </Text>\n  </Box>\n);\n\nconst formatBytes = (bytes, unit = \"B\", decimals = 2) => {\n  if (bytes === 0) return \"0 \" + unit;\n\n  const k = 1024;\n  const dm = decimals < 0 ? 0 : decimals;\n  const sizes = [\"\", \"K\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\"].map(\n    size => size + unit\n  );\n\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + \" \" + sizes[i];\n};\n","import React, { useCallback, useState } from \"react\";\nimport {\n  selectAvailableRoleNames,\n  useHMSStore,\n  useHMSActions,\n} from \"@100mslive/react-sdk\";\nimport { MicOffIcon } from \"@100mslive/react-icons\";\nimport {\n  Dialog,\n  Text,\n  Button,\n  RadioGroup,\n  Flex,\n  Label,\n} from \"@100mslive/react-ui\";\nimport {\n  DialogContent,\n  DialogRow,\n  DialogSelect,\n} from \"../../primitives/DialogContent\";\n\nconst trackSourceOptions = [\n  { label: \"All Track Sources\", value: \"\" },\n  { label: \"regular\", value: \"regular\" },\n  { label: \"screen\", value: \"screen\" },\n  { label: \"audioplaylist\", value: \"audioplaylist\" },\n  { label: \"videoplaylist\", value: \"videoplaylist\" },\n];\nconst trackTypeOptions = [\n  { label: \"All Track Types\", value: \"\" },\n  { label: \"audio\", value: \"audio\" },\n  { label: \"video\", value: \"video\" },\n];\nexport const MuteAllModal = ({ onOpenChange }) => {\n  const roles = useHMSStore(selectAvailableRoleNames);\n  const hmsActions = useHMSActions();\n  const [enabled, setEnabled] = useState(false);\n  const [trackType, setTrackType] = useState();\n  const [selectedRole, setRole] = useState();\n  const [selectedSource, setSource] = useState();\n\n  const muteAll = useCallback(async () => {\n    await hmsActions.setRemoteTracksEnabled({\n      enabled: enabled,\n      type: trackType,\n      source: selectedSource,\n      roles: selectedRole ? [selectedRole] : undefined,\n    });\n    onOpenChange(false);\n  }, [\n    selectedRole,\n    enabled,\n    trackType,\n    selectedSource,\n    hmsActions,\n    onOpenChange,\n  ]);\n\n  return (\n    <Dialog.Root defaultOpen onOpenChange={onOpenChange}>\n      <DialogContent title=\"Mute/Unmute Remote Tracks\" Icon={MicOffIcon}>\n        <DialogSelect\n          title=\"Role\"\n          options={[\n            { label: \"All Roles\", value: \"\" },\n            ...roles.map(role => ({ label: role, value: role })),\n          ]}\n          selected={selectedRole}\n          keyField=\"value\"\n          labelField=\"label\"\n          onChange={setRole}\n        />\n        <DialogSelect\n          title=\"Track type\"\n          options={trackTypeOptions}\n          selected={trackType}\n          onChange={setTrackType}\n          keyField=\"value\"\n          labelField=\"label\"\n        />\n        <DialogSelect\n          title=\"Track source\"\n          options={trackSourceOptions}\n          selected={selectedSource}\n          onChange={setSource}\n          keyField=\"value\"\n          labelField=\"label\"\n        />\n        <DialogRow>\n          <Text variant=\"md\">Track status</Text>\n          <RadioGroup.Root value={enabled} onValueChange={setEnabled}>\n            <Flex align=\"center\" css={{ mr: \"$8\" }}>\n              <RadioGroup.Item\n                value={false}\n                id=\"trackDisableRadio\"\n                css={{ mr: \"$4\" }}\n              >\n                <RadioGroup.Indicator />\n              </RadioGroup.Item>\n              <Label htmlFor=\"trackDisableRadio\">Mute</Label>\n            </Flex>\n            <Flex align=\"center\" css={{ cursor: \"pointer\" }}>\n              <RadioGroup.Item\n                value={true}\n                id=\"trackEnableRadio\"\n                css={{ mr: \"$4\" }}\n              >\n                <RadioGroup.Indicator />\n              </RadioGroup.Item>\n              <Label htmlFor=\"trackEnableRadio\">Request Unmute</Label>\n            </Flex>\n          </RadioGroup.Root>\n        </DialogRow>\n        <DialogRow justify=\"end\">\n          <Button variant=\"primary\" onClick={muteAll}>\n            Apply\n          </Button>\n        </DialogRow>\n      </DialogContent>\n    </Dialog.Root>\n  );\n};\n","import React, { Fragment, useState } from \"react\";\nimport {\n  VerticalMenuIcon,\n  InfoIcon,\n  MicOffIcon,\n  SettingsIcon,\n  PencilIcon,\n} from \"@100mslive/react-icons\";\nimport {\n  selectLocalPeerID,\n  selectPermissions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { Box, Dropdown, Text, Tooltip } from \"@100mslive/react-ui\";\nimport { ChangeSelfRole } from \"./ChangeSelfRole\";\nimport { FullScreenItem } from \"./FullScreenItem\";\nimport SettingsModal from \"../Settings/SettingsModal\";\nimport { RoleChangeModal } from \"../RoleChangeModal\";\nimport { ChangeNameModal } from \"./ChangeNameModal\";\nimport { StatsForNerds } from \"../StatsForNerds\";\nimport { MuteAllModal } from \"./MuteAllModal\";\nimport { FeatureFlags } from \"../../services/FeatureFlags\";\nimport IconButton from \"../../IconButton\";\n\nexport const MoreSettings = () => {\n  const permissions = useHMSStore(selectPermissions);\n  const localPeerId = useHMSStore(selectLocalPeerID);\n  const [open, setOpen] = useState(false);\n  const [showChangeNameModal, setShowChangeNameModal] = useState(false);\n  const [showMuteAll, setShowMuteAll] = useState(false);\n  const [showDeviceSettings, setShowDeviceSettings] = useState(false);\n  const [showStatsForNerds, setShowStatsForNerds] = useState(false);\n  const [showSelfRoleChange, setShowSelfRoleChange] = useState(false);\n\n  return (\n    <Fragment>\n      <Dropdown.Root open={open} onOpenChange={setOpen}>\n        <Dropdown.Trigger asChild data-testid=\"more_settings_btn\">\n          <IconButton>\n            <Tooltip title=\"More options\">\n              <Box>\n                <VerticalMenuIcon />\n              </Box>\n            </Tooltip>\n          </IconButton>\n        </Dropdown.Trigger>\n        <Dropdown.Content\n          sideOffset={5}\n          align=\"center\"\n          css={{ maxHeight: \"$96\", \"@md\": { w: \"$64\" } }}\n        >\n          <Dropdown.Item\n            onClick={() => setShowChangeNameModal(value => !value)}\n            data-testid=\"change_name_btn\"\n          >\n            <PencilIcon />\n            <Text variant=\"sm\" css={{ ml: \"$4\" }}>\n              Change Name\n            </Text>\n          </Dropdown.Item>\n          <ChangeSelfRole onClick={() => setShowSelfRoleChange(true)} />\n          <FullScreenItem />\n          {permissions.mute && (\n            <Dropdown.Item\n              onClick={() => setShowMuteAll(true)}\n              data-testid=\"mute_all_btn\"\n            >\n              <MicOffIcon />\n              <Text variant=\"sm\" css={{ ml: \"$4\" }}>\n                Mute All\n              </Text>\n            </Dropdown.Item>\n          )}\n          <Dropdown.ItemSeparator />\n          <Dropdown.Item\n            onClick={() => setShowDeviceSettings(true)}\n            data-testid=\"device_settings_btn\"\n          >\n            <SettingsIcon />\n            <Text variant=\"sm\" css={{ ml: \"$4\" }}>\n              Settings\n            </Text>\n          </Dropdown.Item>\n          {FeatureFlags.enableStatsForNerds && (\n            <Dropdown.Item\n              onClick={() => setShowStatsForNerds(true)}\n              data-testid=\"stats_for_nreds_btn\"\n            >\n              <InfoIcon />\n              <Text variant=\"sm\" css={{ ml: \"$4\" }}>\n                Stats for Nerds\n              </Text>\n            </Dropdown.Item>\n          )}\n        </Dropdown.Content>\n      </Dropdown.Root>\n      {showMuteAll && <MuteAllModal onOpenChange={setShowMuteAll} />}\n      {showChangeNameModal && (\n        <ChangeNameModal onOpenChange={setShowChangeNameModal} />\n      )}\n      {showDeviceSettings && (\n        <SettingsModal open onOpenChange={setShowDeviceSettings} />\n      )}\n      {FeatureFlags.enableStatsForNerds && showStatsForNerds && (\n        <StatsForNerds\n          open={showStatsForNerds}\n          onOpenChange={setShowStatsForNerds}\n        />\n      )}\n      {showSelfRoleChange && (\n        <RoleChangeModal\n          peerId={localPeerId}\n          onOpenChange={setShowSelfRoleChange}\n        />\n      )}\n    </Fragment>\n  );\n};\n","import { ShareScreenIcon } from \"@100mslive/react-icons\";\nimport {\n  selectIsAllowedToPublish,\n  useHMSStore,\n  useScreenShare,\n} from \"@100mslive/react-sdk\";\nimport { Tooltip } from \"@100mslive/react-ui\";\nimport IconButton from \"../IconButton\";\nimport { useUISettings } from \"./AppData/useUISettings\";\nimport { isScreenshareSupported } from \"../common/utils\";\nimport { UI_SETTINGS } from \"../common/constants\";\n\nexport const ScreenshareToggle = ({ css }) => {\n  const isAllowedToPublish = useHMSStore(selectIsAllowedToPublish);\n  const isAudioOnly = useUISettings(UI_SETTINGS.isAudioOnly);\n  const {\n    amIScreenSharing,\n    screenShareVideoTrackId: video,\n    toggleScreenShare,\n  } = useScreenShare();\n  const isVideoScreenshare = amIScreenSharing && !!video;\n  if (!isAllowedToPublish.screen || !isScreenshareSupported()) {\n    return null;\n  }\n  return (\n    <Tooltip title={`${!isVideoScreenshare ? \"Start\" : \"Stop\"} screen sharing`}>\n      <IconButton\n        active={!isVideoScreenshare}\n        css={css}\n        disabled={isAudioOnly}\n        onClick={() => {\n          toggleScreenShare();\n        }}\n        data-testid=\"screen_share_btn\"\n      >\n        <ShareScreenIcon />\n      </IconButton>\n    </Tooltip>\n  );\n};\n","import React from \"react\";\nimport { useHMSActions } from \"@100mslive/react-sdk\";\nimport { Dialog, Button } from \"@100mslive/react-ui\";\nimport { DialogContent, DialogRow } from \"../primitives/DialogContent\";\n\nexport const ScreenShareHintModal = ({ onClose }) => {\n  const hmsActions = useHMSActions();\n  return (\n    <Dialog.Root defaultOpen onOpenChange={value => !value && onClose()}>\n      <DialogContent title=\"AudioOnly Screenshare\">\n        <img\n          src=\"/share-audio.png\"\n          alt=\"AudioOnly Screenshare instructions\"\n        ></img>\n        <DialogRow justify=\"end\">\n          <Button\n            variant=\"primary\"\n            onClick={() => {\n              hmsActions.setScreenShareEnabled(true, true);\n              onClose();\n            }}\n            data-testid=\"audio_screenshare_continue\"\n          >\n            Continue\n          </Button>\n        </DialogRow>\n      </DialogContent>\n    </Dialog.Root>\n  );\n};\n","/**\n * no tile - blank canvas, black image\n * 1 tile - takes full space on canvas\n * 2 tile - vertically equally split\n * 3 tile - two rows two columns - bottom right column is blank\n * 4 tiles - two rows two columns - all equal size\n */\nexport function drawVideoElementsOnCanvas(videoElements, canvas) {\n  let numberOfTiles = videoElements.filter(\n    videoElement => videoElement.srcObject !== null\n  ).length;\n\n  const ctx = canvas.getContext(\"2d\");\n  ctx.fillStyle = \"#000000\";\n  const canvasWidth = canvas.width;\n  const canvasHeight = canvas.height;\n\n  if (numberOfTiles === 0) {\n    // no tile to render, render black image\n    ctx.fillRect(0, 0, canvasWidth, canvasHeight);\n    return;\n  }\n  // TODO: Remove case of 2 tiles after aspect-ratio issue is resolved.\n  else if (numberOfTiles === 1 || numberOfTiles === 2) {\n    // draw the video element on full canvas\n    ctx.drawImage(videoElements[0], 0, 0, canvasWidth, canvasHeight);\n    return;\n  }\n\n  // if there are more than 2 videos to show, split into two rows\n  const numRows = numberOfTiles <= 2 ? 1 : 2;\n  const numCols = Number(Math.ceil(numberOfTiles / numRows));\n  const tileHeight = canvasHeight / numRows;\n  const tileWidth = canvasWidth / numCols;\n\n  fillGridTiles(numRows, numCols, tileHeight, tileWidth, videoElements, ctx);\n}\n\n// this is to send some data for stream and resolve video element's play for a\n// video element rendering this canvas' capture stream\nexport function dummyChangeInCanvas(canvas) {\n  const ctx = canvas.getContext(\"2d\");\n  ctx.fillStyle = \"#000000\";\n  const canvasWidth = canvas.width;\n  const canvasHeight = canvas.height;\n  ctx.fillRect(0, 0, canvasWidth, canvasHeight);\n}\n\n/**\n * Imagine the canvas as a grid with passed in number of rows and columns. Go\n * over the the tiles in the grid in order while drawing the videoElements upon them.\n */\nfunction fillGridTiles(\n  numRows,\n  numCols,\n  tileHeight,\n  tileWidth,\n  videoElements,\n  ctx\n) {\n  let videoElementPos = 0;\n  for (let row = 0; row < numRows; row++) {\n    const startY = row * tileHeight;\n    for (let col = 0; col < numCols; col++) {\n      const startX = col * tileWidth;\n      const video = videoElements[videoElementPos];\n      if (!video || video.srcObject === null) {\n        ctx.fillRect(startX, startY, tileWidth, tileHeight); // draw black tile\n      } else {\n        ctx.drawImage(video, startX, startY, tileWidth, tileHeight);\n      }\n      videoElementPos++;\n    }\n  }\n}\n","import * as workerTimers from \"worker-timers\";\nimport { drawVideoElementsOnCanvas, dummyChangeInCanvas } from \"./pipUtils\";\nconst MAX_NUMBER_OF_TILES_IN_PIP = 4;\nconst DEFAULT_FPS = 30;\nconst DEFAULT_CANVAS_WIDTH = 900;\nconst DEFAULT_CANVAS_HEIGHT = 600;\nconst LEAVE_EVENT_NAME = \"leavepictureinpicture\";\n\nconst PIPStates = {\n  starting: \"starting\",\n  started: \"started\",\n  stopping: \"stopping\",\n  stopped: \"stopped\",\n};\n\n/**\n * video elements are stitched together as a canvas which is converted to\n * another video element converted to PIP.\n * The task is split into two parts -\n * 1. a function which gets hit when the input changes and updates the tracks\n * to show\n * 2. an independent loop which updates the canvas periodically based on the current\n * tracks which should be shown.\n */\nclass PipManager {\n  constructor() {\n    this.reset();\n  }\n\n  /**\n   * @private\n   */\n  reset() {\n    console.debug(\"resetting PIP state\");\n    this.canvas = null; // where stitching will take place\n    this.pipVideo = null; // the element which will be sent in PIP\n    this.timeoutRef = null; // setTimeout reference so it can be cancelled\n    this.hmsActions = null; // for attaching detaching\n    this.videoElements = []; // for attaching tracks\n    this.tracksToShow = [];\n    this.onStateChange = () => {}; // for user of this class to listen to changes\n    this.state = PIPStates.stopped;\n  }\n\n  /**\n   * check if PIP is supported in this browser env\n   */\n  isSupported() {\n    return !!document.pictureInPictureEnabled;\n  }\n\n  /**\n   * check if pip is currently turned on\n   */\n  isOn() {\n    return !!document.pictureInPictureElement;\n  }\n\n  /**\n   * request browser to start pip and start the render loop updating the pip\n   * video element with peer tracks.\n   * @param hmsActions\n   * @param onStateChangeFn {function(bool):void} callback called to notify change in pip state\n   */\n  async start(hmsActions, onStateChangeFn) {\n    if (!this.isSupported()) {\n      throw new Error(\"pip is not supported on this browser\");\n    }\n    console.debug(\"starting PIP, current state\", this.state);\n    if (this.state === PIPStates.started) {\n      await this.stop(); // if anything is already running\n    } else if (this.state === PIPStates.starting) {\n      return; // ignore double clicks\n    }\n    this.state = PIPStates.starting;\n    try {\n      await this.init(hmsActions, onStateChangeFn);\n      // when user closes pip, call internal stop\n      this.pipVideo.addEventListener(LEAVE_EVENT_NAME, this.stop);\n      this.renderLoop();\n      if (!this.isOn()) {\n        await this.requestPIP();\n      }\n      console.debug(\"pip started\");\n      this.state = PIPStates.started;\n      this.onStateChange(true);\n    } catch (err) {\n      console.error(\"error in request pip\", err);\n      this.state = PIPStates.stopped;\n    }\n  }\n\n  stop = async () => {\n    if (this.state === PIPStates.stopped) {\n      return;\n    }\n    this.state = PIPStates.stopping;\n    this.pipVideo?.removeEventListener(LEAVE_EVENT_NAME, this.stop);\n    if (this.timeoutRef) {\n      workerTimers.clearTimeout(this.timeoutRef);\n    }\n    if (this.isOn()) {\n      this.exitPIP();\n    }\n    // detach all to avoid bandwidth consumption\n    await this.detachOldAttachNewTracks(this.tracksToShow, []);\n    this.onStateChange(false); // notify parent about this\n    this.reset(); // cleanup\n    this.state = PIPStates.stopped;\n  };\n\n  /**\n   * @param peers {Array} All Remote Peers present in call.\n   * @param tracksMap {Object} map of track id to track\n   * */\n  async updatePeersAndTracks(peers, tracksMap) {\n    if (!this.canvas) {\n      return;\n    }\n    const newTracksToShowUnordered = this.pickTracksToShow(peers, tracksMap);\n    const currentTracksShowing = this.tracksToShow;\n    this.tracksToShow = this.orderNewTracksToShow(\n      newTracksToShowUnordered,\n      currentTracksShowing\n    );\n    try {\n      await this.detachOldAttachNewTracks(\n        currentTracksShowing,\n        this.tracksToShow,\n        tracksMap\n      );\n    } catch (error) {\n      console.error(\"error in detaching/attaching tracks\", error);\n    }\n  }\n\n  // ------- Private function --------------\n\n  /**\n   * @private\n   */\n  async init(hmsActions, onStateChangeFn) {\n    await this.initMediaElements();\n    this.hmsActions = hmsActions;\n    this.onStateChange = onStateChangeFn;\n  }\n\n  async initMediaElements() {\n    if (!this.canvas) {\n      const { canvas, pipVideo } = this.initializeCanvasAndVideoElement();\n      this.canvas = canvas; // where stitching will take place\n      this.pipVideo = pipVideo; // the element which will be sent in PIP\n      this.videoElements = this.initializeVideoElements(); // for attaching tracks\n      const videoPlayPromise = this.pipVideo.play();\n      dummyChangeInCanvas(this.canvas);\n      await videoPlayPromise;\n    }\n  }\n\n  initializeCanvasAndVideoElement() {\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = DEFAULT_CANVAS_WIDTH;\n    canvas.height = DEFAULT_CANVAS_HEIGHT;\n    const pipVideo = document.createElement(\"video\");\n    pipVideo.muted = true;\n    pipVideo.srcObject = canvas.captureStream();\n    return { canvas, pipVideo };\n  }\n\n  initializeVideoElements() {\n    let videoElements = [];\n    for (let i = 0; i < MAX_NUMBER_OF_TILES_IN_PIP; i++) {\n      const videoElement = document.createElement(\"video\");\n      videoElement.autoplay = true;\n      videoElement.playsinline = true;\n      videoElements.push(videoElement);\n    }\n    return videoElements;\n  }\n\n  /**\n   * render loop is responsible for rendering the video elements on canvas/pip.\n   * in each loop current video elements are stitched and painted on canvas\n   */\n  renderLoop() {\n    const delay = 1000 / DEFAULT_FPS;\n    this.timeoutRef = workerTimers.setTimeout(() => {\n      if (\n        this.state === PIPStates.stopping ||\n        this.state === PIPStates.stopped\n      ) {\n        return;\n      }\n      if (this.state === PIPStates.started) {\n        drawVideoElementsOnCanvas(this.videoElements, this.canvas);\n      }\n      this.renderLoop();\n    }, delay);\n  }\n\n  async requestPIP() {\n    try {\n      if (this.isOn()) {\n        this.exitPIP(); // is this really needed?\n      }\n      await this.pipVideo.requestPictureInPicture();\n    } catch (error) {\n      console.error(\"error in requestpip\", error, \"state\", this.state);\n      throw error;\n    }\n  }\n\n  exitPIP() {\n    document.exitPictureInPicture();\n  }\n\n  /**\n   * Logic - pick only enabled video tracks\n   * @param peers {Array<any>}\n   * @param tracksMap {Record<string, any>}\n   */\n  pickTracksToShow(peers, tracksMap) {\n    const tracksToShow = [];\n    for (const peer of peers) {\n      if (tracksToShow.length === MAX_NUMBER_OF_TILES_IN_PIP) {\n        break;\n      } else if (peer.videoTrack && tracksMap[peer.videoTrack]?.enabled) {\n        tracksToShow.push(peer.videoTrack);\n      }\n    }\n    return tracksToShow;\n  }\n\n  /**\n   * there has to be a smart reordering of new tracks based on currently showing\n   * ones to reduce unnecessary displacement. If someone was showing up both\n   * earlier and now, it's a better UX to keep their position same instead\n   * of letting it change.\n   * The returned array is a shuffled version of newTracks with position of\n   * tracks present in the old tracks intact.\n   * eg. old = [1,5,9,3], new = [3,8,2,9], result = [8,2,9,3]\n   * @param oldTracks {Array}\n   * @param newTracks {Array}\n   * @return {Array}\n   */\n  orderNewTracksToShow(newTracks, oldTracks) {\n    const betterNewTracks = [];\n    const leftOvers = [];\n    // put the common ones in right position\n    newTracks.forEach(track => {\n      const oldPosition = oldTracks.indexOf(track);\n      if (oldPosition !== -1 && oldPosition < newTracks.length) {\n        // if track is there currently and we can put it on the same position\n        betterNewTracks[oldPosition] = track;\n      } else {\n        leftOvers.push(track);\n      }\n    });\n    // put the left overs in remaining empty positions\n    for (let i = 0; i < newTracks.length; i++) {\n      if (!betterNewTracks[i]) {\n        betterNewTracks[i] = leftOvers.shift();\n      }\n    }\n    return betterNewTracks;\n  }\n\n  /**\n   * call detach for tracks which no longer need to be shown and attach for\n   * new ones which are to be shown now.\n   * Note: oldTracks and newTracks are not necessarily of same length\n   * @param oldTracks {Array<String>}\n   * @param newTracks {Array<String>}\n   * @param tracksMap {Record<String, any>}\n   */\n  async detachOldAttachNewTracks(oldTracks, newTracks, tracksMap = null) {\n    const numTracks = Math.max(oldTracks.length, newTracks.length);\n    for (let i = 0; i < numTracks; i++) {\n      if (oldTracks[i] === newTracks[i]) {\n        continue; // it would already have been attached previously\n      } else if (oldTracks[i]) {\n        // old track is there but not equal to new track, detach\n        // no need to call detach if we know for sure track is no longer in store\n        if (!tracksMap || tracksMap[oldTracks[i]]) {\n          await this.hmsActions.detachVideo(\n            oldTracks[i],\n            this.videoElements[i]\n          );\n        }\n        if (this.videoElements[i]) {\n          // even if old track got removed from the room, element needs to be cleaned up\n          this.videoElements[i].srcObject = null;\n        }\n      }\n      if (newTracks[i]) {\n        await this.hmsActions.attachVideo(newTracks[i], this.videoElements[i]);\n      }\n    }\n  }\n}\n\nexport const PictureInPicture = new PipManager();\n// PictureInPicture.initMediaElements().catch(console.error);  // for safari, init early\n","import {\n  selectIsLocalAudioEnabled,\n  selectIsLocalVideoEnabled,\n} from \"@100mslive/react-sdk\";\n\n/**\n * Media Session API allows for handling control actions on top of pip\n * https://web.dev/media-session/#video-conferencing-actions\n */\nclass SetupMediaSession {\n  setup = (actions, store) => {\n    this.actions = actions;\n    this.store = store;\n    this.initState();\n    this.setUpHandlers();\n  };\n\n  initState = () => {\n    const isMicActive = this.store.getState(selectIsLocalAudioEnabled);\n    const isCamActive = this.store.getState(selectIsLocalVideoEnabled);\n    navigator.mediaSession?.setMicrophoneActive?.(isMicActive);\n    navigator.mediaSession?.setCameraActive?.(isCamActive);\n\n    this.store.subscribe(isMicActive => {\n      navigator.mediaSession?.setMicrophoneActive?.(isMicActive);\n    }, selectIsLocalAudioEnabled);\n\n    this.store.subscribe(isCamActive => {\n      navigator.mediaSession?.setCameraActive?.(isCamActive);\n    }, selectIsLocalVideoEnabled);\n  };\n\n  toggleMic = async () => {\n    console.log(\"toggle mic clicked in pip\");\n    const current = this.store.getState(selectIsLocalAudioEnabled);\n    await this.actions.setLocalAudioEnabled(!current);\n  };\n\n  toggleCam = async () => {\n    console.log(\"toggle cam clicked in pip\");\n    const current = this.store.getState(selectIsLocalVideoEnabled);\n    await this.actions.setLocalVideoEnabled(!current);\n  };\n\n  leave = () => {\n    console.log(\"leave called from pip\");\n    this.actions.leave();\n  };\n\n  setUpHandlers = () => {\n    if (navigator.mediaSession) {\n      try {\n        navigator.mediaSession.setActionHandler(\n          \"togglemicrophone\",\n          this.toggleMic\n        );\n        navigator.mediaSession.setActionHandler(\"togglecamera\", this.toggleCam);\n        navigator.mediaSession.setActionHandler(\"hangup\", this.leave);\n      } catch (err) {\n        console.error(\"error in setting media session handlers\", err);\n      }\n    }\n  };\n}\n\nexport const MediaSession = new SetupMediaSession();\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport {\n  selectLocalPeerRoleName,\n  useHMSActions,\n  useHMSStore,\n  useHMSVanillaStore,\n  selectRemotePeers,\n  selectTracksMap,\n} from \"@100mslive/react-sdk\";\nimport { Tooltip } from \"@100mslive/react-ui\";\nimport { PipIcon } from \"@100mslive/react-icons\";\nimport { PictureInPicture } from \"./PIPManager\";\nimport IconButton from \"../../IconButton\";\nimport { DEFAULT_HLS_VIEWER_ROLE } from \"../../common/constants\";\nimport { MediaSession } from \"./SetupMediaSession\";\n\n/**\n * shows a button which when clicked shows some videos in PIP, clicking\n * again turns it off.\n */\nconst PIPComponent = () => {\n  const localPeerRole = useHMSStore(selectLocalPeerRoleName);\n  const [isPipOn, setIsPipOn] = useState(PictureInPicture.isOn());\n  const hmsActions = useHMSActions();\n  const store = useHMSVanillaStore();\n\n  const onPipToggle = useCallback(() => {\n    if (!isPipOn) {\n      PictureInPicture.start(hmsActions, setIsPipOn).catch(err =>\n        console.error(\"error in starting pip\", err)\n      );\n      MediaSession.setup(hmsActions, store);\n    } else {\n      PictureInPicture.stop().catch(err =>\n        console.error(\"error in stopping pip\", err)\n      );\n    }\n  }, [hmsActions, isPipOn, store]);\n\n  // stop pip on unmount\n  useEffect(() => {\n    return () => {\n      PictureInPicture.stop().catch(err =>\n        console.error(\"error in stopping pip on unmount\", err)\n      );\n    };\n  }, []);\n\n  if (\n    !PictureInPicture.isSupported() ||\n    localPeerRole === DEFAULT_HLS_VIEWER_ROLE\n  ) {\n    return null;\n  }\n  return (\n    <>\n      <Tooltip\n        title={`${isPipOn ? \"Deactivate\" : \"Activate\"} picture in picture view`}\n      >\n        <IconButton\n          active={!isPipOn}\n          key=\"pip\"\n          onClick={() => onPipToggle()}\n          data-testid=\"pip_btn\"\n        >\n          <PipIcon />\n        </IconButton>\n      </Tooltip>\n      {isPipOn && <ActivatedPIP setIsPipOn={setIsPipOn} />}\n    </>\n  );\n};\n\n/**\n * this is a separate component so it can be conditionally rendered and\n * the subscriptions to store are done only if required.\n */\nconst ActivatedPIP = () => {\n  const tracksMap = useHMSStore(selectTracksMap);\n  const remotePeers = useHMSStore(selectRemotePeers);\n\n  useEffect(() => {\n    PictureInPicture.updatePeersAndTracks(remotePeers, tracksMap).catch(err => {\n      console.error(\"error in updating pip\", err);\n    });\n  }, [tracksMap, remotePeers]);\n\n  return null;\n};\n\nexport default PIPComponent;\n","import { ChatIcon, ChatUnreadIcon } from \"@100mslive/react-icons\";\nimport {\n  selectUnreadHMSMessagesCount,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { Tooltip } from \"@100mslive/react-ui\";\nimport IconButton from \"../../IconButton\";\nimport {\n  useIsSidepaneTypeOpen,\n  useSidepaneToggle,\n} from \"../AppData/useSidepane\";\nimport { SIDE_PANE_OPTIONS } from \"../../common/constants\";\n\nexport const ChatToggle = () => {\n  const countUnreadMessages = useHMSStore(selectUnreadHMSMessagesCount);\n  const isChatOpen = useIsSidepaneTypeOpen(SIDE_PANE_OPTIONS.CHAT);\n  const toggleChat = useSidepaneToggle(SIDE_PANE_OPTIONS.CHAT);\n\n  return (\n    <Tooltip key=\"chat\" title={`${isChatOpen ? \"Close\" : \"Open\"} chat`}>\n      <IconButton\n        onClick={toggleChat}\n        active={!isChatOpen}\n        data-testid=\"chat_btn\"\n      >\n        {countUnreadMessages === 0 ? (\n          <ChatIcon />\n        ) : (\n          <ChatUnreadIcon data-testid=\"chat_unread_btn\" />\n        )}\n      </IconButton>\n    </Tooltip>\n  );\n};\n","import React from \"react\";\nimport { Dropdown, Flex, Text } from \"@100mslive/react-ui\";\n\nfunction formatDuration(duration) {\n  if (!duration) {\n    return \"\";\n  }\n  let mins = Math.floor(duration / 60);\n  if (mins < 10) {\n    mins = `0${String(mins)}`;\n  }\n  let secs = Math.floor(duration % 60);\n  if (secs < 10) {\n    secs = `0${String(secs)}`;\n  }\n\n  return `${mins}:${secs}`;\n}\n\nexport const PlaylistItem = React.memo(\n  ({ name, metadata, duration, selected, onClick }) => {\n    return (\n      <Dropdown.Item\n        css={{\n          flexDirection: \"column\",\n          alignItems: \"flex-start\",\n          h: \"$18\",\n          p: \"$8\",\n          \"&:hover\": {\n            cursor: \"pointer\",\n            bg: \"$menuBg\",\n          },\n          \"&:focus-visible\": {\n            bg: \"$menuBg\",\n          },\n        }}\n        onClick={onClick}\n      >\n        <Flex\n          align=\"center\"\n          justify=\"between\"\n          css={{ width: \"100%\", minHeight: 0 }}\n        >\n          <Text\n            variant=\"md\"\n            css={{ color: selected ? \"$brandDefault\" : \"$textPrimary\" }}\n          >\n            {name}\n          </Text>\n          <Text variant=\"xs\">{formatDuration(duration)}</Text>\n        </Flex>\n        {metadata?.description && (\n          <Text variant=\"xs\" css={{ mt: \"$4\" }}>\n            {metadata?.description}\n          </Text>\n        )}\n      </Dropdown.Item>\n    );\n  }\n);\n","import React, { Fragment, useState } from \"react\";\nimport {\n  HMSPlaylistType,\n  useHMSStore,\n  selectIsAllowedToPublish,\n} from \"@100mslive/react-sdk\";\nimport {\n  AudioPlayerIcon,\n  CrossIcon,\n  VideoPlayerIcon,\n} from \"@100mslive/react-icons\";\nimport { Dropdown, Text, Flex, Tooltip, Box } from \"@100mslive/react-ui\";\nimport { PlaylistItem } from \"./PlaylistItem\";\nimport { AudioPlaylistControls } from \"./PlaylistControls\";\nimport IconButton from \"../../IconButton\";\nimport { usePlaylist } from \"../hooks/usePlaylist\";\n\nconst BrowseAndPlayFromLocal = ({ type, actions }) => {\n  return (\n    <Fragment>\n      <Text\n        as=\"label\"\n        htmlFor={`${type}PlaylistBrowse`}\n        variant=\"sm\"\n        css={{ cursor: \"pointer\", mr: \"$2\" }}\n      >\n        Browse\n      </Text>\n      <input\n        type=\"file\"\n        id={`${type}PlaylistBrowse`}\n        accept={type === HMSPlaylistType.audio ? \"audio/*\" : \"video/*\"}\n        onChange={e => {\n          const file = e.target.files[0];\n          const id = file.lastModified;\n          actions.setList([\n            {\n              type,\n              id,\n              name: file.name,\n              url: URL.createObjectURL(file),\n            },\n          ]);\n          actions.play(id);\n        }}\n        style={{ display: \"none\" }}\n      />\n    </Fragment>\n  );\n};\n\nexport const Playlist = ({ type }) => {\n  const isAudioPlaylist = type === HMSPlaylistType.audio;\n  const { active, list: playlist, actions } = usePlaylist(type);\n  const [open, setOpen] = useState(false);\n  const [collapse, setCollapse] = useState(false);\n  const isAllowedToPublish = useHMSStore(selectIsAllowedToPublish);\n  if (!isAllowedToPublish.screen || playlist.length === 0) {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      <Dropdown.Root open={open} onOpenChange={setOpen}>\n        <Dropdown.Trigger\n          asChild\n          data-testid={\n            type === HMSPlaylistType.audio ? \"audio_playlist\" : \"video_playlist\"\n          }\n        >\n          <IconButton active={!active}>\n            <Tooltip\n              title={isAudioPlaylist ? \"Audio Playlist\" : \"Video Playlist\"}\n            >\n              <Box>\n                {isAudioPlaylist ? <AudioPlayerIcon /> : <VideoPlayerIcon />}\n              </Box>\n            </Tooltip>\n          </IconButton>\n        </Dropdown.Trigger>\n        <Dropdown.Content\n          sideOffset={5}\n          align=\"center\"\n          css={{\n            maxHeight: \"unset\",\n            width: \"$60\",\n            p: \"$0\",\n            bg: \"$bgSecondary\",\n            border: \"1px solid $menuBg\",\n          }}\n        >\n          <Flex\n            align=\"center\"\n            css={{\n              p: \"$4 $8\",\n              borderBottom: \"1px solid $borderLight\",\n              bg: \"$menuBg\",\n            }}\n          >\n            <Text variant=\"md\" css={{ flex: \"1 1 0\" }}>\n              {isAudioPlaylist ? \"Audio Player\" : \"Video Playlist\"}\n            </Text>\n            <BrowseAndPlayFromLocal type={type} actions={actions} />\n            <IconButton\n              css={{ mr: \"-$4\" }}\n              onClick={async () => {\n                if (active) {\n                  await actions.stop();\n                }\n                setOpen(false);\n                setCollapse(false);\n              }}\n            >\n              <CrossIcon width={24} height={24} />\n            </IconButton>\n          </Flex>\n          {!collapse && (\n            <Box css={{ maxHeight: \"$96\", overflowY: \"auto\" }}>\n              {playlist.map(playlistItem => {\n                return (\n                  <PlaylistItem\n                    key={playlistItem.id}\n                    {...playlistItem}\n                    onClick={async e => {\n                      e.preventDefault();\n                      await actions.play(playlistItem.id);\n                      // Close the dropdown list for videoplaylist\n                      if (!isAudioPlaylist) {\n                        setOpen(false);\n                      }\n                    }}\n                  />\n                );\n              })}\n            </Box>\n          )}\n          {isAudioPlaylist && (\n            <AudioPlaylistControls\n              onToggle={() => setCollapse(value => !value)}\n            />\n          )}\n        </Dropdown.Content>\n      </Dropdown.Root>\n    </Fragment>\n  );\n};\n","import { useCallback, useRef, useState, useEffect } from \"react\";\nimport { ToastManager } from \"../components/Toast/ToastManager\";\nimport {\n  useHMSActions,\n  useHMSStore,\n  selectIsLocalAudioPluginPresent,\n  useDevices,\n} from \"@100mslive/react-sdk\";\nimport { AudioLevelIcon } from \"@100mslive/react-icons\";\nimport { Tooltip } from \"@100mslive/react-ui\";\nimport IconButton from \"../IconButton\";\nimport { FeatureFlags } from \"../services/FeatureFlags\";\n\nexport const NoiseSuppression = () => {\n  const pluginRef = useRef(null);\n  const hmsActions = useHMSActions();\n  const [disable, setDisabled] = useState(false);\n  const [isNSSupported, setIsNSSupported] = useState(false);\n  const isPluginPresent = useHMSStore(\n    selectIsLocalAudioPluginPresent(\"@100mslive/hms-noise-suppression\")\n  );\n  const { selectedDeviceIDs } = useDevices();\n  const pluginActive = isPluginPresent && !disable;\n\n  const createPlugin = useCallback(async () => {\n    if (!pluginRef.current) {\n      const { HMSNoiseSuppressionPlugin } = await import(\n        \"@100mslive/hms-noise-suppression\"\n      );\n      pluginRef.current = new HMSNoiseSuppressionPlugin(\n        process.env.NS_DURATION_TIME_IN_MS\n      );\n    }\n  }, []);\n\n  const removePlugin = useCallback(async () => {\n    if (pluginRef.current) {\n      await hmsActions.removePluginFromAudioTrack(pluginRef.current);\n      pluginRef.current = null;\n    }\n  }, [hmsActions]);\n\n  const handleFailure = useCallback(\n    async err => {\n      let message = \"adding Noise Suppression plugin failed, see docs\";\n      if (err.message) {\n        message = err.message;\n      }\n      ToastManager.addToast({\n        title: message,\n      });\n\n      setDisabled(true);\n      await removePlugin();\n      pluginRef.current = null;\n      console.error(err);\n    },\n    [removePlugin]\n  );\n\n  const addPlugin = useCallback(async () => {\n    try {\n      setDisabled(false);\n      await createPlugin();\n      //check support its recommended\n      const pluginSupport = hmsActions.validateAudioPluginSupport(\n        pluginRef.current\n      );\n      if (pluginSupport.isSupported) {\n        await hmsActions.addPluginToAudioTrack(pluginRef.current);\n      } else {\n        const err = pluginSupport.errMsg;\n        await handleFailure(err);\n      }\n    } catch (err) {\n      await handleFailure(err);\n    }\n  }, [hmsActions, handleFailure, createPlugin]);\n\n  useEffect(() => {\n    (async () => {\n      if (!pluginRef.current) {\n        await createPlugin();\n      }\n\n      const pluginSupport = hmsActions.validateAudioPluginSupport(\n        pluginRef.current\n      );\n      setIsNSSupported(pluginSupport.isSupported);\n      setDisabled(!pluginSupport.isSupported);\n    })();\n  }, [selectedDeviceIDs.audioInput, hmsActions, createPlugin]);\n\n  if (isNSSupported && FeatureFlags.showNS()) {\n    return (\n      <Tooltip title={`Turn ${!pluginActive ? \"on\" : \"off\"} noise suppression`}>\n        <IconButton\n          active={!pluginActive}\n          disabled={disable}\n          onClick={async () => {\n            if (!pluginActive) {\n              await addPlugin();\n            } else {\n              await removePlugin();\n            }\n          }}\n          data-testid=\"noise_suppression_btn\"\n        >\n          <AudioLevelIcon />\n        </IconButton>\n      </Tooltip>\n    );\n  }\n\n  return null;\n};\n","import React, { Fragment, useState } from \"react\";\nimport { MusicIcon } from \"@100mslive/react-icons\";\nimport {\n  HMSPlaylistType,\n  selectIsAllowedToPublish,\n  useHMSStore,\n  useScreenShare,\n} from \"@100mslive/react-sdk\";\nimport { Flex, Tooltip, Footer as AppFooter } from \"@100mslive/react-ui\";\nimport { AudioVideoToggle } from \"../AudioVideoToggle\";\nimport { LeaveRoom } from \"../LeaveRoom\";\nimport { MoreSettings } from \"../MoreSettings/MoreSettings\";\nimport { ScreenshareToggle } from \"../ScreenShare\";\nimport { ScreenShareHintModal } from \"../ScreenshareHintModal\";\nimport IconButton from \"../../IconButton\";\nimport PIPComponent from \"../PIP/PIPComponent\";\nimport MetaActions from \"../MetaActions\";\nimport { ChatToggle } from \"./ChatToggle\";\nimport { Playlist } from \"../../components/Playlist/Playlist\";\nimport { NoiseSuppression } from \"../../plugins/NoiseSuppression\";\nimport { ToggleWhiteboard } from \"../../plugins/whiteboard\";\nimport { VirtualBackground } from \"../../plugins/VirtualBackground/VirtualBackground\";\nimport { FeatureFlags } from \"../../services/FeatureFlags\";\nimport { isScreenshareSupported } from \"../../common/utils\";\n\nconst TranscriptionButton = React.lazy(() =>\n  import(\"../../plugins/transcription\")\n);\n\nconst ScreenshareAudio = () => {\n  const {\n    amIScreenSharing,\n    screenShareVideoTrackId: video,\n    screenShareAudioTrackId: audio,\n    toggleScreenShare,\n  } = useScreenShare();\n  const isAllowedToPublish = useHMSStore(selectIsAllowedToPublish);\n  const isAudioScreenshare = amIScreenSharing && !video && !!audio;\n  const [showModal, setShowModal] = useState(false);\n  if (!isAllowedToPublish.screen || !isScreenshareSupported()) {\n    return null;\n  }\n  return (\n    <Fragment>\n      <Tooltip\n        title={`${!isAudioScreenshare ? \"Start\" : \"Stop\"} audio sharing`}\n        key=\"shareAudio\"\n      >\n        <IconButton\n          active={!isAudioScreenshare}\n          onClick={() => {\n            if (amIScreenSharing) {\n              toggleScreenShare(true);\n            } else {\n              setShowModal(true);\n            }\n          }}\n          data-testid=\"screenshare_audio\"\n        >\n          <MusicIcon />\n        </IconButton>\n      </Tooltip>\n      {showModal && (\n        <ScreenShareHintModal onClose={() => setShowModal(false)} />\n      )}\n    </Fragment>\n  );\n};\n\nexport const ConferencingFooter = () => {\n  return (\n    <AppFooter.Root>\n      <AppFooter.Left>\n        <ScreenshareAudio />\n        <Playlist type={HMSPlaylistType.audio} />\n        <Playlist type={HMSPlaylistType.video} />\n        {FeatureFlags.enableWhiteboard ? <ToggleWhiteboard /> : null}\n        <VirtualBackground />\n        <NoiseSuppression />\n        {FeatureFlags.enableTranscription && <TranscriptionButton />}\n        <Flex\n          align=\"center\"\n          css={{\n            display: \"none\",\n            \"@md\": {\n              display: \"flex\",\n            },\n          }}\n        >\n          <MetaActions isMobile />\n        </Flex>\n      </AppFooter.Left>\n      <AppFooter.Center>\n        <AudioVideoToggle />\n        <ScreenshareToggle />\n        <PIPComponent />\n        <MoreSettings />\n        <LeaveRoom />\n        <Flex\n          align=\"center\"\n          css={{ display: \"none\", \"@md\": { display: \"flex\" } }}\n        >\n          <ChatToggle />\n        </Flex>\n      </AppFooter.Center>\n      <AppFooter.Right>\n        <MetaActions />\n        <ChatToggle />\n      </AppFooter.Right>\n    </AppFooter.Root>\n  );\n};\n","import React from \"react\";\nimport { Flex, Footer as AppFooter, Box } from \"@100mslive/react-ui\";\nimport { AudioVideoToggle } from \"../AudioVideoToggle\";\nimport { MoreSettings } from \"../MoreSettings/MoreSettings\";\nimport { ScreenshareToggle } from \"../ScreenShare\";\nimport PIPComponent from \"../PIP/PIPComponent\";\nimport { LeaveRoom } from \"../LeaveRoom\";\nimport MetaActions from \"../MetaActions\";\nimport { ChatToggle } from \"./ChatToggle\";\nimport { StreamActions } from \"../Header/StreamActions\";\n\nexport const StreamingFooter = () => {\n  return (\n    <AppFooter.Root\n      css={{\n        flexWrap: \"nowrap\",\n        \"@md\": {\n          justifyContent: \"center\",\n        },\n      }}\n    >\n      <AppFooter.Left\n        css={{\n          \"@md\": {\n            w: \"unset\",\n            p: \"0\",\n          },\n        }}\n      >\n        <AudioVideoToggle />\n      </AppFooter.Left>\n      <AppFooter.Center\n        css={{\n          \"@md\": {\n            w: \"unset\",\n          },\n        }}\n      >\n        <ScreenshareToggle css={{ \"@sm\": { display: \"none\" } }} />\n        <Box css={{ \"@md\": { display: \"none\" } }}>\n          <PIPComponent />\n        </Box>\n        <Box\n          css={{\n            display: \"none\",\n            \"@md\": {\n              display: \"flex\",\n              alignItems: \"center\",\n              mx: \"$4\",\n            },\n          }}\n        >\n          <StreamActions />\n        </Box>\n        <MoreSettings />\n        <Box css={{ \"@md\": { display: \"none\" } }}>\n          <LeaveRoom />\n        </Box>\n        <Flex\n          align=\"center\"\n          css={{ display: \"none\", \"@md\": { display: \"flex\" } }}\n        >\n          <ChatToggle />\n        </Flex>\n      </AppFooter.Center>\n      <AppFooter.Right>\n        <MetaActions />\n        <ChatToggle />\n      </AppFooter.Right>\n    </AppFooter.Root>\n  );\n};\n","import React from \"react\";\nimport { ConferencingFooter } from \"./Footer/ConferencingFooter\";\nimport { StreamingFooter } from \"./Footer/StreamingFooter\";\nimport { isStreamingKit } from \"../common/utils\";\n\nexport const Footer = () => {\n  return isStreamingKit() ? <StreamingFooter /> : <ConferencingFooter />;\n};\n","import React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { usePrevious } from \"react-use\";\nimport {\n  selectRoomState,\n  HMSRoomState,\n  selectIsConnectedToRoom,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { Box, Flex } from \"@100mslive/react-ui\";\nimport FullPageProgress from \"./FullPageProgress\";\nimport { RoleChangeRequestModal } from \"./RoleChangeRequestModal\";\nimport { ConferenceMainView } from \"../layouts/mainView\";\nimport { Header } from \"./Header\";\nimport { Footer } from \"./Footer\";\nimport { useNavigation } from \"./hooks/useNavigation\";\nimport { useIsHeadless } from \"./AppData/useUISettings\";\n\nconst Conference = () => {\n  const navigate = useNavigation();\n  const { roomId, role } = useParams();\n  const isHeadless = useIsHeadless();\n  const roomState = useHMSStore(selectRoomState);\n  const prevState = usePrevious(roomState);\n  const isConnectedToRoom = useHMSStore(selectIsConnectedToRoom);\n  const hmsActions = useHMSActions();\n\n  useEffect(() => {\n    if (!roomId) {\n      navigate(`/`);\n      return;\n    }\n    if (\n      !prevState &&\n      !(\n        roomState === HMSRoomState.Connecting ||\n        roomState === HMSRoomState.Reconnecting ||\n        isConnectedToRoom\n      )\n    ) {\n      if (role) navigate(`/preview/${roomId || \"\"}/${role}`);\n      else navigate(`/preview/${roomId || \"\"}`);\n    }\n  }, [isConnectedToRoom, prevState, roomState, navigate, role, roomId]);\n\n  useEffect(() => {\n    // beam doesn't need to store messages, saves on unnecessary store updates in large calls\n    if (isHeadless) {\n      hmsActions.ignoreMessageTypes([\"chat\"]);\n    }\n  }, [isHeadless, hmsActions]);\n\n  useEffect(() => {\n    return () => {\n      // This is needed to handle mac touchpad swipe gesture\n      if (isConnectedToRoom) {\n        hmsActions.leave();\n      }\n    };\n  }, [hmsActions, isConnectedToRoom]);\n\n  if (!isConnectedToRoom) {\n    return <FullPageProgress />;\n  }\n\n  return (\n    <Flex css={{ size: \"100%\" }} direction=\"column\">\n      {!isHeadless && (\n        <Box css={{ h: \"$18\", \"@md\": { h: \"$17\" } }} data-testid=\"header\">\n          <Header />\n        </Box>\n      )}\n      <Box\n        css={{\n          w: \"100%\",\n          flex: \"1 1 0\",\n          minHeight: 0,\n        }}\n        data-testid=\"conferencing\"\n      >\n        <ConferenceMainView />\n      </Box>\n      {!isHeadless && (\n        <Box css={{ flexShrink: 0, minHeight: \"$24\" }} data-testid=\"footer\">\n          <Footer />\n        </Box>\n      )}\n      <RoleChangeRequestModal />\n    </Flex>\n  );\n};\n\nexport default Conference;\n","import React from \"react\";\nimport { Flex, Box, Text } from \"@100mslive/react-ui\";\nimport PlaceholderBg from \"../images/first_person.png\";\n\nexport const FirstPersonDisplay = React.memo(() => {\n  return (\n    <Box\n      css={{\n        position: \"relative\",\n        overflow: \"hidden\",\n        w: \"37.5rem\",\n        maxWidth: \"80%\",\n        h: \"100%\",\n        r: \"$3\",\n        m: \"0 auto\",\n        backgroundImage: `url(${PlaceholderBg})`,\n        backgroundSize: \"cover\",\n        backgroundRepeat: \"no-repeat\",\n      }}\n      data-testid=\"first_person_img\"\n    >\n      <Flex\n        align=\"center\"\n        direction=\"column\"\n        css={{\n          position: \"absolute\",\n          w: \"100%\",\n          top: \"33.33%\",\n          left: 0,\n          textAlign: \"center\",\n        }}\n      >\n        <Text color=\"white\" variant=\"h4\" css={{ \"@md\": { fontSize: \"$md\" } }}>\n          Welcome!\n        </Text>\n        <Text\n          color=\"white\"\n          variant=\"h6\"\n          css={{ mt: \"$4\", \"@md\": { fontSize: \"$sm\" } }}\n        >\n          You’re the first one here.\n        </Text>\n        <Text\n          color=\"white\"\n          variant=\"h6\"\n          css={{ mt: \"$2\", \"@md\": { fontSize: \"$sm\" } }}\n        >\n          Sit back and relax till the others join.\n        </Text>\n      </Flex>\n    </Box>\n  );\n});\n","import { styled } from \"@100mslive/react-ui\";\n\nexport const Image = styled(\"img\", {\n  width: \"100%\",\n  height: \"auto\",\n  r: \"$3\",\n});\n","import React, { Fragment } from \"react\";\nimport { useMedia } from \"react-use\";\nimport { Box, Flex, config as cssConfig } from \"@100mslive/react-ui\";\nimport { FirstPersonDisplay } from \"./FirstPersonDisplay\";\nimport VideoList from \"./VideoList\";\nimport { Image } from \"./Image\";\n\nconst MAX_TILES_FOR_MOBILE = 4;\n\n/**\n * the below variables are for showing webinar etc. related image if required on certain meeting urls\n */\nconst webinarProps = JSON.parse(process.env.REACT_APP_WEBINAR_PROPS || \"{}\");\nconst eventRoomIDs = webinarProps?.ROOM_IDS || [];\nconst eventsImg = webinarProps?.IMAGE_FILE || \"\"; // the image to show in center\n// the link to navigate to when user clicks on the image\nconst webinarInfoLink = webinarProps?.LINK_HREF || \"https://100ms.live/\";\n\n// The center of the screen shows bigger tiles\nexport const GridCenterView = ({ peers, maxTileCount }) => {\n  const mediaQueryLg = cssConfig.media.md;\n  const limitMaxTiles = useMedia(mediaQueryLg);\n  return (\n    <Fragment>\n      <Box\n        css={{\n          flex: \"1 1 0\",\n          height: \"100%\",\n          mx: \"$8\",\n          \"@md\": { flex: \"2 1 0\" },\n        }}\n      >\n        {peers && peers.length > 0 ? (\n          <VideoList\n            peers={peers}\n            maxTileCount={limitMaxTiles ? MAX_TILES_FOR_MOBILE : maxTileCount}\n          />\n        ) : eventRoomIDs.some(id => window.location.href.includes(id)) ? (\n          <Box\n            css={{\n              display: \"grid\",\n              placeItems: \"center\",\n              size: \"100%\",\n              p: \"$12\",\n            }}\n          >\n            <a href={webinarInfoLink} target=\"_blank\" rel=\"noreferrer\">\n              <Image\n                css={{ p: \"$4\", boxShadow: \"$sm\" }}\n                alt=\"Event template\"\n                src={eventsImg}\n              />\n            </a>\n          </Box>\n        ) : (\n          <FirstPersonDisplay />\n        )}\n      </Box>\n    </Fragment>\n  );\n};\n\n// Side pane shows smaller tiles\nexport const GridSidePaneView = ({ peers }) => {\n  return (\n    <Flex\n      direction=\"column\"\n      css={{\n        flex: \"0 0 20%\",\n        mx: \"$8\",\n        \"@lg\": {\n          flex: \"0 0 25%\",\n        },\n        \"@md\": {\n          flex: \"1 1 0\",\n        },\n      }}\n    >\n      <Flex css={{ flex: \"1 1 0\" }} align=\"end\">\n        {peers && peers.length > 0 && (\n          <VideoList peers={peers} maxColCount={2} />\n        )}\n      </Flex>\n    </Flex>\n  );\n};\n","const PEER_NAME_PLACEHOLDER = \"peerName\";\nconst labelMap = new Map([\n  [[true, \"screen\"].toString(), \"Your Screen\"],\n  [[true, \"regular\"].toString(), `You (${PEER_NAME_PLACEHOLDER})`],\n  [[false, \"screen\"].toString(), `${PEER_NAME_PLACEHOLDER}'s Screen`],\n  [[false, \"regular\"].toString(), PEER_NAME_PLACEHOLDER],\n  [[true, undefined].toString(), `You (${PEER_NAME_PLACEHOLDER})`],\n  [[false, undefined].toString(), `${PEER_NAME_PLACEHOLDER}`],\n]);\n\nexport const getVideoTileLabel = ({ peerName, isLocal, track }) => {\n  const isPeerPresent = peerName !== undefined;\n  if (!isPeerPresent || !track) {\n    // for peers with only audio track\n    return isPeerPresent\n      ? labelMap\n          .get([isLocal, undefined].toString())\n          .replace(PEER_NAME_PLACEHOLDER, peerName)\n      : \"\";\n  }\n  const isLocallyMuted = track.volume === 0;\n  // Map [isLocal, videoSource] to the label to be displayed.\n  let label = labelMap.get([isLocal, track.source].toString());\n  if (label) {\n    label = label.replace(PEER_NAME_PLACEHOLDER, peerName);\n  } else {\n    label = `${peerName} ${track.source}`;\n  }\n  label = `${label}${track.degraded ? \"(Degraded)\" : \"\"}`;\n  return `${label}${isLocallyMuted ? \" (Muted for you)\" : \"\"}`;\n};\n","import React from \"react\";\nimport { useHMSActions } from \"@100mslive/react-sdk\";\nimport { CrossIcon, ShareScreenIcon } from \"@100mslive/react-icons\";\nimport { Button, Flex, Text } from \"@100mslive/react-ui\";\n\nexport const ScreenshareDisplay = () => {\n  const hmsActions = useHMSActions();\n\n  return (\n    <Flex\n      direction=\"column\"\n      align=\"center\"\n      justify=\"center\"\n      css={{\n        position: \"relative\",\n        overflow: \"hidden\",\n        w: \"37.5rem\",\n        maxWidth: \"80%\",\n        h: \"100%\",\n        r: \"$3\",\n        m: \"0 auto\",\n        color: \"$textPrimary\",\n        bg: \"$surfaceDefault\",\n        textAlign: \"center\",\n      }}\n    >\n      <ShareScreenIcon width={48} height={48} />\n      <Text variant=\"h5\" css={{ m: \"$8 0\" }}>\n        You are sharing your screen\n      </Text>\n      <Button\n        variant=\"danger\"\n        onClick={async () => {\n          await hmsActions.setScreenShareEnabled(false);\n        }}\n        data-testid=\"stop_screen_share_btn\"\n      >\n        <CrossIcon width={18} height={18} />\n        &nbsp; Stop screen share\n      </Button>\n    </Flex>\n  );\n};\n","import React, { useRef } from \"react\";\nimport { useFullscreen, useToggle } from \"react-use\";\nimport screenfull from \"screenfull\";\nimport {\n  selectVideoPlaylist,\n  selectVideoPlaylistVideoTrackByPeerID,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { ShrinkIcon, ExpandIcon, CrossIcon } from \"@100mslive/react-icons\";\nimport { Flex, IconButton, Text, Video } from \"@100mslive/react-ui\";\nimport { VideoPlaylistControls } from \"./PlaylistControls\";\nimport { UI_SETTINGS } from \"../../common/constants\";\nimport { useUISettings } from \"../AppData/useUISettings\";\n\nexport const VideoPlayer = React.memo(({ peerId }) => {\n  const videoTrack = useHMSStore(selectVideoPlaylistVideoTrackByPeerID(peerId));\n  const active = useHMSStore(selectVideoPlaylist.selectedItem);\n  const isAudioOnly = useUISettings(UI_SETTINGS.isAudioOnly);\n  const hmsActions = useHMSActions();\n  const ref = useRef(null);\n  const [show, toggle] = useToggle(false);\n  const isFullscreen = useFullscreen(ref, show, {\n    onClose: () => toggle(false),\n  });\n  return (\n    <Flex\n      direction=\"column\"\n      justify=\"center\"\n      css={{ w: \"100%\", h: \"100%\" }}\n      ref={ref}\n    >\n      {active && (\n        <Flex\n          justify=\"between\"\n          align=\"center\"\n          css={{\n            bg: \"$menuBg\",\n            p: \"$2 $2 $2 $6\",\n            borderTopLeftRadius: \"$1\",\n            borderTopRightRadius: \"$1\",\n          }}\n        >\n          <Text css={{ color: \"$textPrimary\" }}>{active.name}</Text>\n          <IconButton\n            css={{\n              color: \"$white\",\n            }}\n            onClick={() => {\n              hmsActions.videoPlaylist.stop();\n            }}\n            data-testid=\"videoplaylist_cross_btn\"\n          >\n            <CrossIcon />\n          </IconButton>\n        </Flex>\n      )}\n      <Video\n        trackId={videoTrack?.id}\n        attach={!isAudioOnly}\n        css={{\n          \"@lg\": { objectFit: \"contain\", h: \"auto\" },\n          r: \"$1\",\n          borderTopLeftRadius: 0,\n          borderTopRightRadius: 0,\n        }}\n      />\n      <VideoPlaylistControls>\n        {screenfull.enabled && (\n          <IconButton\n            onClick={() => toggle()}\n            css={{\n              color: \"$white\",\n              height: \"max-content\",\n              alignSelf: \"center\",\n              cursor: \"pointer\",\n            }}\n          >\n            {isFullscreen ? <ShrinkIcon /> : <ExpandIcon />}\n          </IconButton>\n        )}\n      </VideoPlaylistControls>\n    </Flex>\n  );\n});\n","import React, { useCallback, useMemo, Fragment } from \"react\";\nimport { useMedia } from \"react-use\";\nimport {\n  useHMSStore,\n  selectPeers,\n  selectPeerScreenSharing,\n  selectPeerSharingVideoPlaylist,\n  selectScreenShareByPeerID,\n  selectLocalPeerID,\n  selectLocalPeerRoleName,\n} from \"@100mslive/react-sdk\";\nimport { Box, Flex, config as cssConfig } from \"@100mslive/react-ui\";\nimport { ScreenshareDisplay } from \"../components/ScreenshareDisplay\";\nimport ScreenshareTile from \"../components/ScreenshareTile\";\nimport VideoList from \"../components/VideoList\";\nimport VideoTile from \"../components/VideoTile\";\nimport { VideoPlayer } from \"../components/Playlist/VideoPlayer\";\n\nconst ScreenShareView = () => {\n  // for smaller screen we will show sidebar in bottom\n  const mediaQueryLg = cssConfig.media.lg;\n  const showSidebarInBottom = useMedia(mediaQueryLg);\n  const peers = useHMSStore(selectPeers);\n  const localPeerID = useHMSStore(selectLocalPeerID);\n  const localPeerRole = useHMSStore(selectLocalPeerRoleName);\n  const peerPresenting = useHMSStore(selectPeerScreenSharing);\n  const peerSharingPlaylist = useHMSStore(selectPeerSharingVideoPlaylist);\n  const isPresenterFromMyRole =\n    peerPresenting?.roleName?.toLowerCase() === localPeerRole?.toLowerCase();\n  const amIPresenting = localPeerID === peerPresenting?.id;\n  const showPresenterInSmallTile =\n    showSidebarInBottom || amIPresenting || isPresenterFromMyRole;\n\n  const smallTilePeers = useMemo(() => {\n    const smallTilePeers = peers.filter(peer => peer.id !== peerPresenting?.id);\n    if (showPresenterInSmallTile && peerPresenting) {\n      smallTilePeers.unshift(peerPresenting); // put presenter on first page\n    }\n    return smallTilePeers;\n  }, [peers, peerPresenting, showPresenterInSmallTile]);\n\n  return (\n    <Flex\n      css={{\n        size: \"100%\",\n      }}\n      direction={showSidebarInBottom ? \"column\" : \"row\"}\n    >\n      <ScreenShareComponent\n        amIPresenting={amIPresenting}\n        peerPresenting={peerPresenting}\n        peerSharingPlaylist={peerSharingPlaylist}\n      />\n      <Flex\n        direction={{ \"@initial\": \"column\", \"@lg\": \"row\" }}\n        css={{\n          overflow: \"hidden\",\n          p: \"$4 $8\",\n          flex: \"0 0 20%\",\n          \"@lg\": {\n            flex: \"1 1 0\",\n          },\n        }}\n      >\n        <SidePane\n          showSidebarInBottom={showSidebarInBottom}\n          peerScreenSharing={peerPresenting}\n          isPresenterInSmallTiles={showPresenterInSmallTile}\n          smallTilePeers={smallTilePeers}\n          totalPeers={peers.length}\n        />\n      </Flex>\n    </Flex>\n  );\n};\n\n// Sidepane will show the camera stream of the main peer who is screensharing\n// and both camera + screen(if applicable) of others\nexport const SidePane = ({\n  isPresenterInSmallTiles,\n  peerScreenSharing, // the peer who is screensharing\n  smallTilePeers,\n  totalPeers,\n  showSidebarInBottom,\n}) => {\n  // The main peer's screenshare is already being shown in center view\n  const shouldShowScreenFn = useCallback(\n    peer => peerScreenSharing && peer.id !== peerScreenSharing.id,\n    [peerScreenSharing]\n  );\n  return (\n    <Fragment>\n      {!isPresenterInSmallTiles && (\n        <LargeTilePeerView peerScreenSharing={peerScreenSharing} />\n      )}\n      <SmallTilePeersView\n        showSidebarInBottom={showSidebarInBottom}\n        smallTilePeers={smallTilePeers}\n        shouldShowScreenFn={shouldShowScreenFn}\n      />\n    </Fragment>\n  );\n};\n\nconst ScreenShareComponent = ({\n  showStats,\n  amIPresenting,\n  peerPresenting,\n  peerSharingPlaylist,\n}) => {\n  const screenshareTrack = useHMSStore(\n    selectScreenShareByPeerID(peerPresenting?.id)\n  );\n\n  if (peerSharingPlaylist) {\n    return (\n      <Box\n        css={{\n          mx: \"$8\",\n          flex: \"3 1 0\",\n          \"@lg\": {\n            flex: \"2 1 0\",\n            display: \"flex\",\n            alignItems: \"center\",\n          },\n        }}\n      >\n        <VideoPlayer peerId={peerSharingPlaylist.id} />\n      </Box>\n    );\n  }\n\n  return (\n    <Box\n      css={{\n        flex: \"3 1 0\",\n        mx: \"$8\",\n        \"@lg\": { ml: \"$4\", maxHeight: \"80%\" },\n      }}\n    >\n      {peerPresenting &&\n        (amIPresenting &&\n        ![\"browser\", \"window\", \"application\"].includes(\n          screenshareTrack?.displaySurface\n        ) ? (\n          <Box css={{ objectFit: \"contain\", h: \"100%\" }}>\n            <ScreenshareDisplay />\n          </Box>\n        ) : (\n          <ScreenshareTile peerId={peerPresenting?.id} />\n        ))}\n    </Box>\n  );\n};\n\nconst SmallTilePeersView = ({\n  smallTilePeers,\n  shouldShowScreenFn,\n  showStatsOnTiles,\n  showSidebarInBottom,\n}) => {\n  return (\n    <Flex\n      css={{\n        flex: \"2 1 0\",\n      }}\n    >\n      {smallTilePeers && smallTilePeers.length > 0 && (\n        <VideoList\n          peers={smallTilePeers}\n          maxColCount={showSidebarInBottom ? undefined : 2}\n          maxRowCount={showSidebarInBottom ? 1 : undefined}\n          includeScreenShareForPeer={shouldShowScreenFn}\n          showStatsOnTiles={showStatsOnTiles}\n        />\n      )}\n    </Flex>\n  );\n};\n\nconst LargeTilePeerView = ({ peerScreenSharing, showStatsOnTiles }) => {\n  return peerScreenSharing ? (\n    <Box\n      css={{\n        flex: \"1 1 0\",\n        minHeight: \"25%\",\n        py: \"$4\",\n        \"@lg\": {\n          mr: \"$4\",\n          minHeight: \"unset\",\n          py: 0,\n        },\n        \"@sm\": {\n          height: \"100%\",\n          maxHeight: \"75%\",\n          alignSelf: \"center\",\n        },\n      }}\n    >\n      <VideoTile\n        showStatsOnTiles={showStatsOnTiles}\n        width=\"100%\"\n        height=\"100%\"\n        peerId={peerScreenSharing.id}\n      />\n    </Box>\n  ) : null;\n};\n\nexport default ScreenShareView;\n"],"names":[],"sourceRoot":""}