{"version":3,"file":"static/js/507.e433cf68.js","mappings":"sKAyCA,QA/B0B,CAAC,CAAC,eAAe,CACzC,KAAM,GAAQ,SAAY,MACpB,EAAY,SAAY,MACxB,EAAkB,SAAY,MAC9B,EAA2B,aAAO,GAExC,GACE,GAAyB,QAAU,GAGrC,KAAM,GAAgB,EAAyB,SAAW,EACpD,EAAe,GAAiB,EAAM,OAAS,EAErD,MACE,iBAAC,IAAD,CAAM,IAAK,CAAE,KAAM,OAAQ,MAAO,CAAE,cAAe,YACjD,gBAAC,IAAD,CACE,MAAO,CAAC,GACR,aAAc,EACd,aAAc,CAAC,EACf,iBAAkB,IAEnB,GACC,gBAAC,IAAD,CACE,MAAO,EAAM,OAAO,GAAQ,EAAK,KAAO,EAAc,IACtD,iBAAkB","sources":["layouts/ActiveSpeakerView.jsx"],"sourcesContent":["import React, { useRef } from \"react\";\nimport {\n  selectPeers,\n  useHMSStore,\n  selectDominantSpeaker,\n  selectLocalPeer,\n} from \"@100mslive/react-sdk\";\nimport { Flex } from \"@100mslive/react-ui\";\nimport { GridCenterView, GridSidePaneView } from \"../components/gridView\";\n\nconst ActiveSpeakerView = ({showStats}) => {\n  const peers = useHMSStore(selectPeers);\n  const localPeer = useHMSStore(selectLocalPeer);\n  const dominantSpeaker = useHMSStore(selectDominantSpeaker);\n  const latestDominantSpeakerRef = useRef(dominantSpeaker);\n  // if there is no current dominant speaker latest keeps pointing to last\n  if (dominantSpeaker) {\n    latestDominantSpeakerRef.current = dominantSpeaker;\n  }\n  // show local peer if there hasn't been any dominant speaker\n  const activeSpeaker = latestDominantSpeakerRef.current || localPeer;\n  const showSidePane = activeSpeaker && peers.length > 1;\n\n  return (\n    <Flex css={{ size: \"100%\", \"@lg\": { flexDirection: \"column\" } }}>\n      <GridCenterView\n        peers={[activeSpeaker]}\n        maxTileCount={1}\n        hideSidePane={!showSidePane}\n        showStatsOnTiles={showStats}\n      />\n      {showSidePane && (\n        <GridSidePaneView\n          peers={peers.filter(peer => peer.id !== activeSpeaker.id)}\n          showStatsOnTiles={showStats}\n        />\n      )}\n    </Flex>\n  );\n};\n\nexport default ActiveSpeakerView;\n"],"names":[],"sourceRoot":""}